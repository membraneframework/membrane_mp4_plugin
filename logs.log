...............................................

  1) test Demuxer with `non_fast_start_optimization: true` should allow for demuxing a single H264 track without fast_start flag (Membrane.MP4.Demuxer.ISOM.DemuxerTest)
     test/membrane_mp4/demuxer/isom/demuxer_test.exs:56
     Assertion failed, no matching message after 2000ms
     Showing 3 of 3 messages in the mailbox
     code: assert_receive {Membrane.Testing.Pipeline, ^pid_value, {:handle_element_end_of_stream, {:sink, :input}}}
     mailbox:
       pattern: {Membrane.Testing.Pipeline, ^pid_value, {:handle_element_end_of_stream, {:sink, :input}}}
       value:   {Membrane.Testing.Pipeline, #PID<0.851.0>, :setup}

       pattern: {Membrane.Testing.Pipeline, ^pid_value, {:handle_element_end_of_stream, {:sink, :input}}}
       value:   {Membrane.Testing.Pipeline, #PID<0.851.0>, :play}

       pattern: {Membrane.Testing.Pipeline, ^pid_value, {:handle_element_end_of_stream, {:sink, :input}}}
       value:   {Membrane.Testing.Pipeline, #PID<0.851.0>,
                 {:handle_element_start_of_stream,
                  {:demuxer, :input}}}
     stacktrace:
       test/membrane_mp4/demuxer/isom/demuxer_test.exs:161: Membrane.MP4.Demuxer.ISOM.DemuxerTest.perform_test/3
       test/membrane_mp4/demuxer/isom/demuxer_test.exs:69: (test)

     The following output was logged:
     
     10:29:58.178 [debug] <0.755.0>/:parser/ Got play request
     
     10:29:58.178 [debug] <0.802.0>/ subprocess supervisor Element start: :audio_parser
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS},
     method: start
     
     
     10:29:58.178 [debug] <0.755.0>/:parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.178 [debug] <0.722.0>/:depayloader_video/ Spec #Reference<0.2846893677.1757413377.56498> status changed to ready
     
     10:29:58.178 [debug] <0.802.0>/:audio_parser/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}
     
     10:29:58.178 [debug] <0.802.0>/:audio_parser/ Component initialized
     
     10:29:58.178 [debug] <0.722.0>/:depayloader_video/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:parser, :remote_stream_depayloader]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413377.56499>, #Reference<0.2846893677.1757413377.56500>, #Reference<0.2846893677.1757413377.56501>], status: :linking_externally}
     
     10:29:58.178 [debug] <0.802.0>/ Starting child: name: :audio_payloader, module: Membrane.MP4.Payloader.AAC in children group: nil
     
     10:29:58.178 [debug] <0.722.0>/:demuxer/ Element handle link on pad {Membrane.Pad, :output, 2} with pad :input of child :depayloader_audio
     
     10:29:58.178 [debug] <0.722.0>/:depayloader_audio/ Element handle link on pad :input with pad {Membrane.Pad, :output, 2} of child :demuxer
     
     10:29:58.178 [debug] <0.802.0>/ subprocess supervisor Element start: :audio_payloader
     node: ,
     module: Membrane.MP4.Payloader.AAC,
     element options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0},
     method: start
     
     
     10:29:58.178 [debug] <0.802.0>/:audio_payloader/ Initializing element: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}
     
     10:29:58.179 [debug] <0.802.0>/:audio_payloader/ Component initialized
     
     10:29:58.179 [debug] <0.722.0>/:depayloader_audio/ Element handle link on pad :output with pad :input of child :audio_parser
     
     10:29:58.179 [debug] <0.722.0>/:audio_parser/ Element handle link on pad :input with pad :output of child :depayloader_audio
     
     10:29:58.179 [debug] <0.802.0>/ Starting children: [%Membrane.ChildEntry{name: :video_source, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.55426>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.55426>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.55426>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.179 [debug] <0.802.0>/ Starting child: name: :video_source, module: Membrane.File.Source in children group: nil
     
     10:29:58.179 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.DemuxerTest/test-Demuxer-with-`non_fast_start_optimization--true`-should-allow-for-demuxing-a-single-H264-track-without-fast_start-flag-8634373b/out"}, %{get_if_exists: false}}, {:demuxer, %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: true}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/isom/ref_video.mp4", chunk_size: 2048, seekable?: true}, %{get_if_exists: false}}], links: [%{from: :demuxer, from_pad: {Membrane.Pad, :output, 1}, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :demuxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: {Membrane.Pad, :output, 1}, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.838.0>],
     process options: []
     
     
     10:29:58.179 [debug] <0.802.0>/ subprocess supervisor Element start: :video_source
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.179 [debug] <0.722.0>/:audio_parser/ Element handle link on pad :output with pad :input of child :sink_audio
     
     10:29:58.179 [debug] <0.802.0>/:audio_source/ Component initialized
     
     10:29:58.179 [debug] <0.802.0>/:video_source/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.179 [debug] <0.755.0>/:parser/ received start of stream
     
     10:29:58.179 [debug] <0.722.0>/:sink_audio/ Element handle link on pad :input with pad :output of child :audio_parser
     
     10:29:58.179 [debug] <0.851.0>/ New spec with ref: #Reference<0.2846893677.1757413380.56104>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.DemuxerTest/test-Demuxer-with-`non_fast_start_optimization--true`-should-allow-for-demuxing-a-single-H264-track-without-fast_start-flag-8634373b/out"}, %{get_if_exists: false}}, {:demuxer, %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: true}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/isom/ref_video.mp4", chunk_size: 2048, seekable?: true}, %{get_if_exists: false}}], links: [%{from: :demuxer, from_pad: {Membrane.Pad, :output, 1}, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :demuxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: {Membrane.Pad, :output, 1}, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.179 [debug] <0.851.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/isom/ref_video.mp4", chunk_size: 2048, seekable?: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.56104>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :demuxer, module: Membrane.MP4.Demuxer.ISOM, options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.56104>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.DemuxerTest/test-Demuxer-with-`non_fast_start_optimization--true`-should-allow-for-demuxing-a-single-H264-track-without-fast_start-flag-8634373b/out"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.56104>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.179 [debug] <0.851.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.179 [debug] <0.802.0>/:video_source/ Component initialized
     
     10:29:58.179 [debug] <0.851.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/isom/ref_video.mp4", chunk_size: 2048, seekable?: true},
     method: start
     
     
     10:29:58.179 [debug] <0.722.0>/ Spec #Reference<0.2846893677.1757413379.59096> status changed to linked internally
     
     10:29:58.179 [debug] <0.722.0>/ Spec #Reference<0.2846893677.1757413379.59096> status changed to ready
     
     10:29:58.179 [debug] <0.722.0>/:audio_parser/ Got play request
     
     10:29:58.179 [debug] <0.722.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:audio_parser, :demuxer, :depayloader_audio, :depayloader_video, :file, :sink_audio, :sink_video]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413379.59097>, #Reference<0.2846893677.1757413379.59098>, #Reference<0.2846893677.1757413379.59099>, #Reference<0.2846893677.1757413379.59100>, #Reference<0.2846893677.1757413379.59101>, #Reference<0.2846893677.1757413379.59102>], status: :linking_internally}
     
     10:29:58.179 [debug] <0.722.0>/:demuxer/ Got play request
     
     10:29:58.179 [debug] <0.722.0>/:sink_audio/ Got play request
     
     10:29:58.179 [debug] <0.722.0>/:depayloader_audio/ Got play request
     
     10:29:58.179 [debug] <0.722.0>/:depayloader_audio/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.179 [debug] <0.802.0>/ Starting child: name: :video_parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.179 [debug] <0.722.0>/:depayloader_video/ Parent play
     
     10:29:58.179 [debug] <0.722.0>/:file/ Got play request
     
     10:29:58.179 [debug] <0.722.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.179 [debug] <0.722.0>/:sink_video/ Got play request
     
     10:29:58.179 [debug] <0.722.0>/:depayloader_video/:parser/ Got play request
     
     10:29:58.179 [debug] <0.802.0>/ subprocess supervisor Element start: :video_parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0},
     method: start
     
     
     10:29:58.179 [debug] <0.722.0>/:depayloader_video/:remote_stream_depayloader/ Got play request
     
     10:29:58.179 [debug] <0.722.0>/:depayloader_video/:remote_stream_depayloader/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.180 [debug] <0.722.0>/:depayloader_video/:parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.180 [debug] <0.802.0>/:video_parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}
     
     10:29:58.180 [debug] <0.722.0>/:demuxer/ received start of stream
     
     10:29:58.180 [debug] <0.851.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/isom/ref_video.mp4", chunk_size: 2048, seekable?: true}
     
     10:29:58.180 [debug] <0.802.0>/:video_parser/ Component initialized
     
     10:29:58.180 [debug] <0.802.0>/ Starting child: name: :video_payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.180 [debug] <0.802.0>/ subprocess supervisor Element start: :video_payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.180 [debug] <0.802.0>/:video_payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.180 [debug] <0.802.0>/:video_payloader/ Component initialized
     
     10:29:58.181 [debug] <0.802.0>/ Starting children: [%Membrane.ChildEntry{name: :cmaf, module: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.55426>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.55426>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.181 [debug] <0.851.0>/ Starting child: name: :demuxer, module: Membrane.MP4.Demuxer.ISOM in children group: nil
     
     10:29:58.181 [debug] <0.802.0>/ Starting child: name: :cmaf, module: Membrane.MP4.Muxer.CMAF in children group: nil
     
     10:29:58.181 [debug] <0.851.0>/ subprocess supervisor Element start: :demuxer
     node: ,
     module: Membrane.MP4.Demuxer.ISOM,
     element options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: true},
     method: start
     
     
     10:29:58.181 [debug] <0.802.0>/ subprocess supervisor Element start: :cmaf
     node: ,
     module: Membrane.MP4.Muxer.CMAF,
     element options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil},
     method: start
     
     
     10:29:58.181 [debug] <0.851.0>/:demuxer/ Initializing element: Membrane.MP4.Demuxer.ISOM, options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: true}
     
     10:29:58.181 [debug] <0.802.0>/:cmaf/ Initializing element: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil}
     
     10:29:58.181 [debug] <0.851.0>/:demuxer/ Component initialized
     
     10:29:58.181 [debug] <0.802.0>/:cmaf/ Component initialized
     
     10:29:58.181 [debug] <0.851.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.181 [debug] <0.802.0>/ Starting child: name: :sink, module: Membrane.Testing.Sink in children group: nil
     
     10:29:58.181 [debug] <0.851.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.DemuxerTest/test-Demuxer-with-`non_fast_start_optimization--true`-should-allow-for-demuxing-a-single-H264-track-without-fast_start-flag-8634373b/out"},
     method: start
     
     
     10:29:58.181 [debug] <0.802.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.Testing.Sink,
     element options: %Membrane.Testing.Sink{autodemand: true},
     method: start
     
     
     10:29:58.181 [debug] <0.802.0>/:sink/ Initializing element: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}
     
     10:29:58.181 [debug] <0.802.0>/:sink/ Component initialized
     
     10:29:58.181 [debug] <0.851.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.DemuxerTest/test-Demuxer-with-`non_fast_start_optimization--true`-should-allow-for-demuxing-a-single-H264-track-without-fast_start-flag-8634373b/out"}
     
     10:29:58.181 [debug] <0.722.0>/:demuxer/ Sending stream format through pad {Membrane.Pad, :output, 1}
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 10, 255, 225, 0, 25, 103, 100, 0, 10, 172, 217, 71, 63, 158, 124, 4, 64, 0, 0, 3, 0, 64, 0, 0, 15, 3, 196, 137, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.181 [debug] <0.722.0>/:demuxer/ Sending stream format through pad {Membrane.Pad, :output, 2}
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.181 [debug] <0.802.0>/ Proceeding spec #Reference<0.2846893677.1757413383.55426> startup: initializing, dependent specs: []
     
     10:29:58.181 [debug] <0.802.0>/ Setup
     
     10:29:58.181 [debug] <0.802.0>/ Component initialized
     
     10:29:58.181 [debug] <0.802.0>/ Parent play
     
     10:29:58.181 [debug] <0.802.0>/ Proceeding spec #Reference<0.2846893677.1757413383.55426> startup: initializing, dependent specs: []
     
     10:29:58.181 [debug] <0.722.0>/:depayloader_video/:remote_stream_depayloader/ Sending stream format through pad :output
     Stream format: %Membrane.H264.RemoteStream{alignment: :au, decoder_configuration_record: nil}
     
     
     10:29:58.181 [debug] <0.802.0>/ Proceeding spec #Reference<0.2846893677.1757413383.55426> startup: initializing, dependent specs: []
     
     10:29:58.181 [debug] <0.802.0>/ Proceeding spec #Reference<0.2846893677.1757413383.55426> startup: initializing, dependent specs: []
     
     10:29:58.181 [debug] <0.802.0>/ Proceeding spec #Reference<0.2846893677.1757413383.55426> startup: initializing, dependent specs: []
     
     10:29:58.181 [debug] <0.802.0>/ Proceeding spec #Reference<0.2846893677.1757413383.55426> startup: initializing, dependent specs: []
     
     10:29:58.181 [debug] <0.802.0>/ Proceeding spec #Reference<0.2846893677.1757413383.55426> startup: initializing, dependent specs: []
     
     10:29:58.181 [debug] <0.802.0>/ Proceeding spec #Reference<0.2846893677.1757413383.55426> startup: initializing, dependent specs: []
     
     10:29:58.181 [debug] <0.802.0>/ Proceeding spec #Reference<0.2846893677.1757413383.55426> startup: initializing, dependent specs: []
     
     10:29:58.181 [debug] <0.802.0>/ Spec #Reference<0.2846893677.1757413383.55426> status changed to initialized
     
     10:29:58.181 [debug] <0.802.0>/ Spec #Reference<0.2846893677.1757413383.55426> status changed to linking internally
     
     10:29:58.181 [debug] <0.802.0>/:audio_source/ Element handle link on pad :output with pad :input of child :audio_parser
     
     10:29:58.182 [debug] <0.802.0>/:audio_parser/ Element handle link on pad :input with pad :output of child :audio_source
     
     10:29:58.182 [debug] <0.722.0>/:depayloader_video/:remote_stream_depayloader/ received start of stream
     
     10:29:58.182 [debug] <0.722.0>/:depayloader_audio/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.182 [debug] <0.722.0>/:depayloader_audio/ received start of stream
     
     10:29:58.182 [debug] <0.722.0>/:audio_parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :ADTS}
     
     
     10:29:58.182 [debug] <0.722.0>/:audio_parser/ received start of stream
     
     10:29:58.182 [debug] <0.802.0>/:audio_parser/ Element handle link on pad :output with pad :input of child :audio_payloader
     
     10:29:58.182 [debug] <0.802.0>/:audio_payloader/ Element handle link on pad :input with pad :output of child :audio_parser
     
     10:29:58.182 [debug] <0.722.0>/:sink_audio/ received start of stream
     
     10:29:58.182 [debug] <0.722.0>/:depayloader_video/:parser/ received start of stream
     
     10:29:58.182 [debug] <0.802.0>/:video_source/ Element handle link on pad :output with pad :input of child :video_parser
     
     10:29:58.182 [debug] <0.802.0>/:video_parser/ Element handle link on pad :input with pad :output of child :video_source
     
     10:29:58.183 [debug] <0.802.0>/:video_parser/ Element handle link on pad :output with pad :input of child :video_payloader
     
     10:29:58.183 [debug] <0.802.0>/:video_payloader/ Element handle link on pad :input with pad :output of child :video_parser
     
     10:29:58.183 [debug] <0.802.0>/:cmaf/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.183 [debug] <0.802.0>/:sink/ Element handle link on pad :input with pad :output of child :cmaf
     
     10:29:58.183 [debug] <0.802.0>/:audio_payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413379.59149>} of child :cmaf
     
     10:29:58.184 [debug] <0.802.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413379.59149>} with pad :output of child :audio_payloader
     
     10:29:58.184 [debug] <0.802.0>/:video_payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413379.59150>} of child :cmaf
     
     10:29:58.184 [debug] <0.722.0>/:depayloader_video/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: nil}
     
     
     10:29:58.184 [debug] <0.722.0>/:sink_video/ received start of stream
     
     10:29:58.184 [debug] <0.802.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413379.59150>} with pad :output of child :video_payloader
     
     10:29:58.185 [debug] <0.802.0>/ Spec #Reference<0.2846893677.1757413383.55426> status changed to linked internally
     
     10:29:58.185 [debug] <0.802.0>/ Spec #Reference<0.2846893677.1757413383.55426> status changed to ready
     
     10:29:58.185 [debug] <0.802.0>/:audio_parser/ Got play request
     
     10:29:58.185 [debug] <0.802.0>/:cmaf/ Got play request
     
     10:29:58.185 [debug] <0.802.0>/:video_payloader/ Got play request
     
     10:29:58.185 [debug] <0.802.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:audio_parser, :audio_payloader, :audio_source, :cmaf, :sink, :video_parser, :video_payloader, :video_source]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413383.55428>, #Reference<0.2846893677.1757413383.55429>, #Reference<0.2846893677.1757413383.55430>, #Reference<0.2846893677.1757413383.55431>, #Reference<0.2846893677.1757413383.55432>, #Reference<0.2846893677.1757413383.55433>, #Reference<0.2846893677.1757413383.55434>], status: :initializing}
     
     10:29:58.185 [debug] <0.802.0>/:audio_source/ Got play request
     
     10:29:58.185 [debug] <0.802.0>/:audio_payloader/ Got play request
     
     10:29:58.185 [debug] <0.802.0>/:audio_source/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.185 [debug] <0.802.0>/:sink/ Got play request
     
     10:29:58.185 [debug] <0.802.0>/:video_parser/ Got play request
     
     10:29:58.185 [debug] <0.802.0>/:video_source/ Got play request
     
     10:29:58.185 [debug] <0.851.0>/:file/ Component initialized
     
     10:29:58.185 [debug] <0.802.0>/:audio_parser/ received start of stream
     
     10:29:58.186 [debug] <0.802.0>/:audio_parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.186 [debug] <0.802.0>/:audio_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.186 [debug] <0.802.0>/:audio_payloader/ received start of stream
     
     10:29:58.186 [debug] <0.802.0>/:cmaf/ received start of stream
     
     10:29:58.187 [debug] <0.802.0>/:video_parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.187 [debug] <0.802.0>/:video_source/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.187 [debug] <0.851.0>/ Proceeding spec #Reference<0.2846893677.1757413380.56104> startup: initializing, dependent specs: []
     
     10:29:58.187 [debug] <0.851.0>/ Setup
     
     10:29:58.187 [debug] <0.851.0>/ Component initialized
     
     10:29:58.187 [debug] <0.851.0>/ Parent play
     
     10:29:58.187 [debug] <0.851.0>/ Proceeding spec #Reference<0.2846893677.1757413380.56104> startup: initializing, dependent specs: []
     
     10:29:58.187 [debug] <0.851.0>/ Proceeding spec #Reference<0.2846893677.1757413380.56104> startup: initializing, dependent specs: []
     
     10:29:58.189 [debug] <0.802.0>/:video_parser/ received start of stream
     
     10:29:58.190 [debug] <0.802.0>/:video_parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.190 [debug] <0.851.0>/:sink/ Component initialized
     
     10:29:58.191 [debug] <0.802.0>/:video_payloader/ received start of stream
     
     10:29:58.191 [debug] <0.851.0>/ Proceeding spec #Reference<0.2846893677.1757413380.56104> startup: initializing, dependent specs: []
     
     10:29:58.191 [debug] <0.851.0>/ Spec #Reference<0.2846893677.1757413380.56104> status changed to initialized
     
     10:29:58.191 [debug] <0.851.0>/ Spec #Reference<0.2846893677.1757413380.56104> status changed to linking internally
     
     10:29:58.191 [debug] <0.851.0>/:file/ Element handle link on pad :output with pad :input of child :demuxer
     
     10:29:58.191 [debug] <0.851.0>/:demuxer/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.191 [debug] <0.851.0>/:demuxer/ Element handle link on pad {Membrane.Pad, :output, 1} with pad :input of child :sink
     
     10:29:58.191 [debug] <0.802.0>/:video_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 10, 255, 225, 0, 25, 103, 100, 0, 10, 172, 217, 71, 63, 158, 124, 4, 64, 0, 0, 3, 0, 64, 0, 0, 15, 3, 196, 137, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.191 [debug] <0.851.0>/:sink/ Element handle link on pad :input with pad {Membrane.Pad, :output, 1} of child :demuxer
     
     10:29:58.191 [debug] <0.851.0>/ Spec #Reference<0.2846893677.1757413380.56104> status changed to linked internally
     
     10:29:58.191 [debug] <0.851.0>/ Spec #Reference<0.2846893677.1757413380.56104> status changed to ready
     
     10:29:58.191 [debug] <0.851.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:demuxer, :file, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413378.56590>, #Reference<0.2846893677.1757413378.56591>], status: :initializing}
     
     10:29:58.191 [debug] <0.851.0>/:demuxer/ Got play request
     
     10:29:58.191 [debug] <0.851.0>/:file/ Got play request
     
     10:29:58.191 [debug] <0.851.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.191 [debug] <0.851.0>/:sink/ Got play request
     
     10:29:58.192 [debug] <0.802.0>/:cmaf/ Sending stream format through pad :output
     Stream format: %Membrane.CMAF.Track{content_type: [:audio, :video], header: <<0, 0, 0, 24, 102, 116, 121, 112, 105, 115, 111, 53, 0, 0, 2, 0, 105, 115, 111, 54, 109, 112, 52, 49, 0, 0, 4, 81, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, ...>>, resolution: {100, 100}, codecs: %{avc1: %{compatibility: 0, level: 10, profile: 100}, mp4a: %{aot_id: 2, channels: 1, frequency: 44100}}}
     
     
     10:29:58.192 [debug] <0.802.0>/:cmaf/ received start of stream
     
     10:29:58.193 [debug] <0.851.0>/:demuxer/ received start of stream
     
     10:29:58.206 [debug] <0.703.0>/ Removing children: [:demuxer, :file, :muxer, :sink]
     
     10:29:58.206 [debug] <0.703.0>/:sink/ Received terminate request
     
     10:29:58.206 [debug] <0.703.0>/:demuxer/ Received terminate request
     
     10:29:58.207 [debug] <0.703.0>/:demuxer/ Terminating with reason :normal
     
     10:29:58.207 [debug] <0.703.0>/:file/ Received terminate request
     
     10:29:58.207 [debug] <0.703.0>/:muxer/ Received terminate request
     
     10:29:58.207 [debug] <0.703.0>/:muxer/ Terminating with reason :normal
     
     10:29:58.207 [debug] <0.703.0>/:sink/ Terminating with reason :normal
     
     10:29:58.207 [debug] <0.703.0>/:muxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.207 [debug] <0.703.0>/:demuxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.207 [debug] <0.703.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.207 [debug] <0.703.0>/:file/ Terminating with reason :normal
     
     10:29:58.207 [debug] <0.703.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.207 [debug] <0.703.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.207 [debug] <0.703.0>/ subprocess supervisor exiting
     
     10:29:58.207 [debug] <0.703.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.208 [debug] <0.802.0>/:sink/ received start of stream
     
     10:29:58.211 [debug] <0.802.0>/ Removing children: [:audio_parser, :audio_payloader, :audio_source, :cmaf, :sink, :video_parser, :video_payloader, :video_source]
     
     10:29:58.211 [debug] <0.802.0>/:cmaf/ Received terminate request
     
     10:29:58.211 [debug] <0.802.0>/:audio_parser/ Received terminate request
     
     10:29:58.211 [debug] <0.802.0>/:audio_payloader/ Received terminate request
     
     10:29:58.211 [debug] <0.802.0>/:audio_payloader/ Terminating with reason :normal
     
     10:29:58.211 [debug] <0.802.0>/:audio_parser/ Terminating with reason :normal
     
     10:29:58.211 [debug] <0.802.0>/:cmaf/ Terminating with reason :normal
     
     10:29:58.211 [debug] <0.802.0>/:video_source/ Received terminate request
     
     10:29:58.211 [debug] <0.802.0>/:cmaf/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.211 [debug] <0.802.0>/:audio_source/ Received terminate request
     
     10:29:58.211 [debug] <0.802.0>/:audio_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.211 [debug] <0.802.0>/:sink/ Received terminate request
     
     10:29:58.211 [debug] <0.802.0>/:sink/ Terminating with reason :normal
     
     10:29:58.211 [debug] <0.802.0>/:video_parser/ Received terminate request
     
     10:29:58.211 [debug] <0.802.0>/:audio_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.211 [debug] <0.802.0>/:video_parser/ Terminating with reason :normal
     
     10:29:58.211 [debug] <0.802.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.211 [debug] <0.802.0>/:video_payloader/ Received terminate request
     
     10:29:58.211 [debug] <0.802.0>/:video_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.211 [debug] <0.802.0>/:video_payloader/ Terminating with reason :normal
     
     10:29:58.211 [debug] <0.802.0>/:audio_source/ Terminating with reason :normal
     
     10:29:58.211 [debug] <0.802.0>/:audio_source/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.211 [debug] <0.802.0>/:video_source/ Terminating with reason :normal
     
     10:29:58.211 [debug] <0.802.0>/:video_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.211 [debug] <0.802.0>/:video_source/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.211 [debug] <0.802.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.211 [debug] <0.802.0>/ Pipeline supervisor got exit from a linked process, pipeline already dead, waiting for subprocess supervisor to exit
     
     10:29:58.211 [debug] <0.802.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.211 [debug] <0.802.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.213 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:audio_payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:audio_parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:audio_source, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :audio_parser, from_pad: :output, from_pad_props: %{options: []}, to: :audio_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_source, from_pad: :output, from_pad_props: %{options: []}, to: :audio_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :audio_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:video_payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:video_parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:video_source, %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :video_parser, from_pad: :output, from_pad_props: %{options: []}, to: :video_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_source, from_pad: :output, from_pad_props: %{options: []}, to: :video_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :video_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:media_finalization_sender, %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.927.0>}, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: nil}, %{get_if_exists: false}}], links: [%{from: :media_finalization_sender, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :media_finalization_sender, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}, %Membrane.ChildrenSpec.Builder{children: [{:audio_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.927.0>, tag: :audio}, %{get_if_exists: false}}], links: [%{from: :audio_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :audio_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}, %Membrane.ChildrenSpec.Builder{children: [{:video_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.927.0>, tag: :video}, %{get_if_exists: false}}], links: [%{from: :video_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :video_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}], test_process: #PID<0.927.0>],
     process options: []
     
     
     10:29:58.213 [debug] <0.755.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.Opus{channels: 2, self_delimiting?: false}
     
     
     10:29:58.213 [debug] <0.755.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.Opus{channels: 2, self_delimiting?: false}, timescale: 48000, height: 0, width: 0}
     
     
     10:29:58.213 [debug] <0.755.0>/:payloader/ received start of stream
     
     10:29:58.214 [debug] <0.755.0>/:muxer/ received start of stream
     
     10:29:58.214 [debug] <0.931.0>/ New spec with ref: #Reference<0.2846893677.1757413382.56066>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:audio_payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:audio_parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:audio_source, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :audio_parser, from_pad: :output, from_pad_props: %{options: []}, to: :audio_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_source, from_pad: :output, from_pad_props: %{options: []}, to: :audio_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :audio_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:video_payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:video_parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:video_source, %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :video_parser, from_pad: :output, from_pad_props: %{options: []}, to: :video_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_source, from_pad: :output, from_pad_props: %{options: []}, to: :video_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :video_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:media_finalization_sender, %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.927.0>}, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: nil}, %{get_if_exists: false}}], links: [%{from: :media_finalization_sender, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :media_finalization_sender, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}, %Membrane.ChildrenSpec.Builder{children: [{:audio_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.927.0>, tag: :audio}, %{get_if_exists: false}}], links: [%{from: :audio_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :audio_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}, %Membrane.ChildrenSpec.Builder{children: [{:video_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.927.0>, tag: :video}, %{get_if_exists: false}}], links: [%{from: :video_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :video_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}]
     
     
     10:29:58.215 [debug] <0.931.0>/ Starting children: [%Membrane.ChildEntry{name: :audio_source, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.56066>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :audio_parser, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.56066>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :audio_payloader, module: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.56066>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.215 [debug] <0.931.0>/ Starting child: name: :audio_source, module: Membrane.File.Source in children group: nil
     
     10:29:58.215 [debug] <0.931.0>/ subprocess supervisor Element start: :audio_source
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.215 [debug] <0.931.0>/:audio_source/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}
     
     10:29:58.215 [debug] <0.931.0>/ Starting child: name: :audio_parser, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.215 [debug] <0.931.0>/ subprocess supervisor Element start: :audio_parser
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS},
     method: start
     
     
     10:29:58.215 [debug] <0.931.0>/:audio_source/ Component initialized
     
     10:29:58.215 [debug] <0.931.0>/:audio_parser/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}
     
     10:29:58.215 [debug] <0.931.0>/:audio_parser/ Component initialized
     
     10:29:58.215 [debug] <0.931.0>/ Starting child: name: :audio_payloader, module: Membrane.MP4.Payloader.AAC in children group: nil
     
     10:29:58.215 [debug] <0.931.0>/ subprocess supervisor Element start: :audio_payloader
     node: ,
     module: Membrane.MP4.Payloader.AAC,
     element options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0},
     method: start
     
     
     10:29:58.216 [debug] <0.931.0>/:audio_payloader/ Initializing element: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}
     
     10:29:58.216 [debug] <0.931.0>/:audio_payloader/ Component initialized
     
     10:29:58.216 [debug] <0.931.0>/ Starting children: [%Membrane.ChildEntry{name: :video_source, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.56066>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.56066>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.56066>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.216 [debug] <0.931.0>/ Starting child: name: :video_source, module: Membrane.File.Source in children group: nil
     
     10:29:58.216 [debug] <0.931.0>/ subprocess supervisor Element start: :video_source
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.217 [debug] <0.931.0>/:video_source/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.218 [debug] <0.931.0>/ Starting child: name: :video_parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.218 [debug] <0.931.0>/:video_source/ Component initialized
     
     10:29:58.218 [debug] <0.931.0>/ subprocess supervisor Element start: :video_parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0},
     method: start
     
     
     10:29:58.218 [debug] <0.931.0>/:video_parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}
     
     10:29:58.219 [debug] <0.931.0>/:video_parser/ Component initialized
     
     10:29:58.219 [debug] <0.931.0>/ Starting child: name: :video_payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.219 [debug] <0.931.0>/ subprocess supervisor Element start: :video_payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.219 [debug] <0.931.0>/:video_payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.219 [debug] <0.931.0>/:video_payloader/ Component initialized
     
     10:29:58.219 [debug] <0.931.0>/ Starting children: [%Membrane.ChildEntry{name: :cmaf, module: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: nil}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.56066>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :media_finalization_sender, module: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender, options: %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.927.0>}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.56066>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.56066>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.219 [debug] <0.931.0>/ Starting child: name: :cmaf, module: Membrane.MP4.Muxer.CMAF in children group: nil
     
     10:29:58.219 [debug] <0.931.0>/ subprocess supervisor Element start: :cmaf
     node: ,
     module: Membrane.MP4.Muxer.CMAF,
     element options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: nil},
     method: start
     
     
     10:29:58.219 [debug] <0.931.0>/:cmaf/ Initializing element: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: nil}
     
     10:29:58.219 [debug] <0.931.0>/:cmaf/ Component initialized
     
     10:29:58.219 [debug] <0.931.0>/ Starting child: name: :media_finalization_sender, module: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender in children group: nil
     
     10:29:58.219 [debug] <0.931.0>/ subprocess supervisor Element start: :media_finalization_sender
     node: ,
     module: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender,
     element options: %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.927.0>},
     method: start
     
     
     10:29:58.220 [debug] <0.931.0>/:media_finalization_sender/ Initializing element: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender, options: %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.927.0>}
     
     10:29:58.220 [debug] <0.931.0>/:media_finalization_sender/ Component initialized
     
     10:29:58.220 [debug] <0.931.0>/ Starting child: name: :sink, module: Membrane.Testing.Sink in children group: nil
     
     10:29:58.220 [debug] <0.931.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.Testing.Sink,
     element options: %Membrane.Testing.Sink{autodemand: true},
     method: start
     
     
     10:29:58.220 [debug] <0.931.0>/:sink/ Initializing element: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}
     
     10:29:58.220 [debug] <0.931.0>/:sink/ Component initialized
     
     10:29:58.220 [debug] <0.931.0>/ Starting children: [%Membrane.ChildEntry{name: :audio_limiter, module: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.927.0>, tag: :audio}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.56066>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.220 [debug] <0.931.0>/ Starting child: name: :audio_limiter, module: Membrane.MP4.BufferLimiter in children group: nil
     
     10:29:58.220 [debug] <0.931.0>/ subprocess supervisor Element start: :audio_limiter
     node: ,
     module: Membrane.MP4.BufferLimiter,
     element options: %Membrane.MP4.BufferLimiter{parent: #PID<0.927.0>, tag: :audio},
     method: start
     
     
     10:29:58.220 [debug] <0.931.0>/:audio_limiter/ Initializing element: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.927.0>, tag: :audio}
     
     10:29:58.220 [debug] <0.931.0>/:audio_limiter/ Component initialized
     
     10:29:58.220 [debug] <0.931.0>/ Starting children: [%Membrane.ChildEntry{name: :video_limiter, module: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.927.0>, tag: :video}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.56066>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.220 [debug] <0.931.0>/ Starting child: name: :video_limiter, module: Membrane.MP4.BufferLimiter in children group: nil
     
     10:29:58.220 [debug] <0.931.0>/ subprocess supervisor Element start: :video_limiter
     node: ,
     module: Membrane.MP4.BufferLimiter,
     element options: %Membrane.MP4.BufferLimiter{parent: #PID<0.927.0>, tag: :video},
     method: start
     
     
     10:29:58.220 [debug] <0.931.0>/:video_limiter/ Initializing element: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.927.0>, tag: :video}
     
     10:29:58.220 [debug] <0.931.0>/:video_limiter/ Component initialized
     
     10:29:58.220 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Setup
     
     10:29:58.221 [debug] <0.931.0>/ Component initialized
     
     10:29:58.221 [debug] <0.931.0>/ Parent play
     
     10:29:58.221 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Proceeding spec #Reference<0.2846893677.1757413382.56066> startup: initializing, dependent specs: []
     
     10:29:58.221 [debug] <0.931.0>/ Spec #Reference<0.2846893677.1757413382.56066> status changed to initialized
     
     10:29:58.221 [debug] <0.931.0>/ Spec #Reference<0.2846893677.1757413382.56066> status changed to linking internally
     
     10:29:58.221 [debug] <0.931.0>/:audio_source/ Element handle link on pad :output with pad :input of child :audio_parser
     
     10:29:58.221 [debug] <0.931.0>/:audio_parser/ Element handle link on pad :input with pad :output of child :audio_source
     
     10:29:58.221 [debug] <0.931.0>/:audio_parser/ Element handle link on pad :output with pad :input of child :audio_payloader
     
     10:29:58.221 [debug] <0.931.0>/:audio_payloader/ Element handle link on pad :input with pad :output of child :audio_parser
     
     10:29:58.221 [debug] <0.931.0>/:video_source/ Element handle link on pad :output with pad :input of child :video_parser
     
     10:29:58.221 [debug] <0.931.0>/:video_parser/ Element handle link on pad :input with pad :output of child :video_source
     
     10:29:58.221 [debug] <0.931.0>/:video_parser/ Element handle link on pad :output with pad :input of child :video_payloader
     
     10:29:58.222 [debug] <0.931.0>/:video_payloader/ Element handle link on pad :input with pad :output of child :video_parser
     
     10:29:58.223 [debug] <0.931.0>/:cmaf/ Element handle link on pad :output with pad :input of child :media_finalization_sender
     
     10:29:58.223 [debug] <0.931.0>/:media_finalization_sender/ Element handle link on pad :input with pad :output of child :cmaf
     
     10:29:58.223 [debug] <0.931.0>/:media_finalization_sender/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.223 [debug] <0.931.0>/:sink/ Element handle link on pad :input with pad :output of child :media_finalization_sender
     
     10:29:58.223 [debug] <0.755.0>/ Removing children: [:file, :muxer, :parser, :payloader, :sink]
     
     10:29:58.223 [debug] <0.755.0>/:parser/ Received terminate request
     
     10:29:58.223 [debug] <0.755.0>/:parser/ Terminating with reason :normal
     
     10:29:58.224 [debug] <0.755.0>/:payloader/ Received terminate request
     
     10:29:58.224 [debug] <0.755.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.224 [debug] <0.755.0>/:sink/ Received terminate request
     
     10:29:58.224 [debug] <0.755.0>/:sink/ Terminating with reason :normal
     
     10:29:58.224 [debug] <0.931.0>/:audio_payloader/ Element handle link on pad :output with pad :input of child :audio_limiter
     
     10:29:58.224 [debug] <0.755.0>/:file/ Received terminate request
     
     10:29:58.224 [debug] <0.755.0>/:muxer/ Received terminate request
     
     10:29:58.224 [debug] <0.755.0>/:muxer/ Terminating with reason :normal
     
     10:29:58.224 [debug] <0.755.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.224 [debug] <0.755.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.224 [debug] <0.755.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.224 [debug] <0.755.0>/:muxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.225 [debug] <0.755.0>/:file/ Terminating with reason :normal
     
     10:29:58.225 [debug] <0.755.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.225 [debug] <0.755.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.225 [debug] <0.755.0>/ subprocess supervisor exiting
     
     10:29:58.225 [debug] <0.755.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.227 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [test_process: #PID<0.996.0>, spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/dev/null"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video_vp.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]],
     process options: []
     
     
     10:29:58.227 [debug] <0.999.0>/ New spec with ref: #Reference<0.2846893677.1757413380.56444>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/dev/null"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video_vp.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.227 [debug] <0.999.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video_vp.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.56444>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.56444>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.56444>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :muxer, module: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.56444>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/dev/null"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.56444>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.227 [debug] <0.999.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.228 [debug] <0.999.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video_vp.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.228 [debug] <0.999.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video_vp.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.228 [debug] <0.931.0>/:audio_limiter/ Element handle link on pad :input with pad :output of child :audio_payloader
     
     10:29:58.228 [debug] <0.931.0>/:audio_limiter/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413382.56141>} of child :cmaf
     
     10:29:58.228 [debug] <0.999.0>/ Starting child: name: :parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.228 [debug] <0.931.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413382.56141>} with pad :output of child :audio_limiter
     
     10:29:58.228 [debug] <0.999.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15},
     method: start
     
     
     10:29:58.228 [debug] <0.999.0>/:parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}
     
     10:29:58.228 [debug] <0.931.0>/:video_payloader/ Element handle link on pad :output with pad :input of child :video_limiter
     
     10:29:58.228 [debug] <0.999.0>/:parser/ Component initialized
     
     10:29:58.228 [debug] <0.931.0>/:video_limiter/ Element handle link on pad :input with pad :output of child :video_payloader
     
     10:29:58.228 [debug] <0.999.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.229 [debug] <0.999.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.229 [debug] <0.931.0>/:video_limiter/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413382.56142>} of child :cmaf
     
     10:29:58.229 [debug] <0.999.0>/:file/ Component initialized
     
     10:29:58.229 [debug] <0.931.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413382.56142>} with pad :output of child :video_limiter
     
     10:29:58.229 [debug] <0.999.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.229 [debug] <0.999.0>/:payloader/ Component initialized
     
     10:29:58.229 [debug] <0.999.0>/ Starting child: name: :muxer, module: Membrane.MP4.Muxer.ISOM in children group: nil
     
     10:29:58.229 [debug] <0.931.0>/ Spec #Reference<0.2846893677.1757413382.56066> status changed to linked internally
     
     10:29:58.229 [debug] <0.931.0>/ Spec #Reference<0.2846893677.1757413382.56066> status changed to ready
     
     10:29:58.229 [debug] <0.999.0>/ subprocess supervisor Element start: :muxer
     node: ,
     module: Membrane.MP4.Muxer.ISOM,
     element options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000},
     method: start
     
     
     10:29:58.229 [debug] <0.931.0>/:video_limiter/ Got play request
     
     10:29:58.229 [debug] <0.931.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:audio_limiter, :audio_parser, :audio_payloader, :audio_source, :cmaf, :media_finalization_sender, :sink, :video_limiter, :video_parser, :video_payloader, :video_source]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413384.55627>, #Reference<0.2846893677.1757413384.55628>, #Reference<0.2846893677.1757413384.55629>, #Reference<0.2846893677.1757413384.55630>, #Reference<0.2846893677.1757413384.55631>, #Reference<0.2846893677.1757413384.55632>, #Reference<0.2846893677.1757413384.55633>, #Reference<0.2846893677.1757413384.55634>, #Reference<0.2846893677.1757413384.55635>, #Reference<0.2846893677.1757413384.55636>], status: :initializing}
     
     10:29:58.229 [debug] <0.931.0>/:audio_limiter/ Got play request
     
     10:29:58.229 [debug] <0.931.0>/:audio_parser/ Got play request
     
     10:29:58.229 [debug] <0.999.0>/:muxer/ Initializing element: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}
     
     10:29:58.229 [debug] <0.931.0>/:cmaf/ Got play request
     
     10:29:58.229 [debug] <0.999.0>/:muxer/ Component initialized
     
     10:29:58.229 [debug] <0.931.0>/:video_payloader/ Got play request
     
     10:29:58.229 [debug] <0.999.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.229 [debug] <0.999.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/dev/null"},
     method: start
     
     
     10:29:58.229 [debug] <0.931.0>/:audio_payloader/ Got play request
     
     10:29:58.229 [debug] <0.931.0>/:sink/ Got play request
     
     10:29:58.229 [debug] <0.931.0>/:audio_source/ Got play request
     
     10:29:58.229 [debug] <0.931.0>/:media_finalization_sender/ Got play request
     
     10:29:58.229 [debug] <0.931.0>/:video_parser/ Got play request
     
     10:29:58.229 [debug] <0.931.0>/:video_source/ Got play request
     
     10:29:58.230 [debug] <0.931.0>/:media_finalization_sender/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.230 [debug] <0.931.0>/:video_source/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.230 [debug] <0.931.0>/:audio_source/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.230 [debug] <0.931.0>/:video_parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.230 [debug] <0.999.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/dev/null"}
     
     10:29:58.231 [debug] <0.931.0>/:audio_parser/ received start of stream
     
     10:29:58.231 [debug] <0.931.0>/:video_parser/ received start of stream
     
     10:29:58.231 [debug] <0.931.0>/:audio_parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.231 [debug] <0.931.0>/:audio_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.231 [debug] <0.931.0>/:audio_payloader/ received start of stream
     
     10:29:58.231 [debug] <0.931.0>/:audio_limiter/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.231 [debug] <0.931.0>/:audio_limiter/ received start of stream
     
     10:29:58.231 [debug] <0.931.0>/:video_parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :unknown, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.232 [debug] <0.931.0>/:cmaf/ received start of stream
     
     10:29:58.232 [debug] <0.931.0>/:video_payloader/ received start of stream
     
     10:29:58.232 [debug] <0.931.0>/:video_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 244, 0, 10, 255, 225, 0, 25, 103, 244, 0, 10, 145, 155, 40, 231, 241, 177, 184, 8, 128, 0, 0, 3, 0, 128, 0, 0, 30, 7, 137, 18, 203, 1, 0, 6, 104, 235, 227, 196, 72, 68>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.232 [debug] <0.931.0>/:video_limiter/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 244, 0, 10, 255, 225, 0, 25, 103, 244, 0, 10, 145, 155, 40, 231, 241, 177, 184, 8, 128, 0, 0, 3, 0, 128, 0, 0, 30, 7, 137, 18, 203, 1, 0, 6, 104, 235, 227, 196, 72, 68>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.232 [debug] <0.931.0>/:video_limiter/ received start of stream
     
     10:29:58.233 [debug] <0.999.0>/ Proceeding spec #Reference<0.2846893677.1757413380.56444> startup: initializing, dependent specs: []
     
     10:29:58.233 [debug] <0.999.0>/ Setup
     
     10:29:58.233 [debug] <0.999.0>/ Component initialized
     
     10:29:58.233 [debug] <0.999.0>/ Parent play
     
     10:29:58.233 [debug] <0.999.0>/ Proceeding spec #Reference<0.2846893677.1757413380.56444> startup: initializing, dependent specs: []
     
     10:29:58.233 [debug] <0.999.0>/ Proceeding spec #Reference<0.2846893677.1757413380.56444> startup: initializing, dependent specs: []
     
     10:29:58.233 [debug] <0.999.0>/ Proceeding spec #Reference<0.2846893677.1757413380.56444> startup: initializing, dependent specs: []
     
     10:29:58.233 [debug] <0.999.0>/ Proceeding spec #Reference<0.2846893677.1757413380.56444> startup: initializing, dependent specs: []
     
     10:29:58.233 [debug] <0.931.0>/:cmaf/ Sending stream format through pad :output
     Stream format: %Membrane.CMAF.Track{content_type: [:audio, :video], header: <<0, 0, 0, 24, 102, 116, 121, 112, 105, 115, 111, 53, 0, 0, 2, 0, 105, 115, 111, 54, 109, 112, 52, 49, 0, 0, 4, 81, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, ...>>, resolution: {100, 100}, codecs: %{avc1: %{compatibility: 0, level: 10, profile: 244}, mp4a: %{aot_id: 2, channels: 1, frequency: 44100}}}
     
     
     10:29:58.233 [debug] <0.931.0>/:cmaf/ received start of stream
     
     10:29:58.234 [debug] <0.931.0>/:media_finalization_sender/ Sending stream format through pad :output
     Stream format: %Membrane.CMAF.Track{content_type: [:audio, :video], header: <<0, 0, 0, 24, 102, 116, 121, 112, 105, 115, 111, 53, 0, 0, 2, 0, 105, 115, 111, 54, 109, 112, 52, 49, 0, 0, 4, 81, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, ...>>, resolution: {100, 100}, codecs: %{avc1: %{compatibility: 0, level: 10, profile: 244}, mp4a: %{aot_id: 2, channels: 1, frequency: 44100}}}
     
     
     10:29:58.234 [debug] <0.999.0>/:sink/ Component initialized
     
     10:29:58.234 [debug] <0.999.0>/ Proceeding spec #Reference<0.2846893677.1757413380.56444> startup: initializing, dependent specs: []
     
     10:29:58.234 [debug] <0.999.0>/ Spec #Reference<0.2846893677.1757413380.56444> status changed to initialized
     
     10:29:58.234 [debug] <0.999.0>/ Spec #Reference<0.2846893677.1757413380.56444> status changed to linking internally
     
     10:29:58.234 [debug] <0.999.0>/:file/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.234 [debug] <0.999.0>/:parser/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.234 [debug] <0.999.0>/:parser/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.235 [debug] <0.999.0>/:payloader/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.235 [debug] <0.999.0>/:payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413384.55753>} of child :muxer
     
     10:29:58.235 [debug] <0.999.0>/:muxer/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413384.55753>} with pad :output of child :payloader
     
     10:29:58.235 [debug] <0.999.0>/:muxer/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.235 [debug] <0.999.0>/:sink/ Element handle link on pad :input with pad :output of child :muxer
     
     10:29:58.235 [debug] <0.999.0>/ Spec #Reference<0.2846893677.1757413380.56444> status changed to linked internally
     
     10:29:58.236 [debug] <0.999.0>/ Spec #Reference<0.2846893677.1757413380.56444> status changed to ready
     
     10:29:58.236 [debug] <0.999.0>/:file/ Got play request
     
     10:29:58.236 [debug] <0.999.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:file, :muxer, :parser, :payloader, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413380.56445>, #Reference<0.2846893677.1757413380.56446>, #Reference<0.2846893677.1757413380.56447>, #Reference<0.2846893677.1757413380.56448>], status: :initializing}
     
     10:29:58.236 [debug] <0.999.0>/:sink/ Got play request
     
     10:29:58.236 [debug] <0.999.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.236 [debug] <0.999.0>/:muxer/ Got play request
     
     10:29:58.236 [debug] <0.999.0>/:muxer/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: Membrane.MP4, type: :bytestream}
     
     
     10:29:58.236 [debug] <0.999.0>/:payloader/ Got play request
     
     10:29:58.236 [debug] <0.999.0>/:parser/ Got play request
     
     10:29:58.236 [debug] <0.999.0>/:parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.236 [debug] <0.999.0>/:sink/ received start of stream
     
     10:29:58.239 [debug] <0.999.0>/:parser/ received start of stream
     
     10:29:58.239 [debug] <0.999.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 640, height: 380, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.239 [debug] <0.999.0>/:payloader/ received start of stream
     
     10:29:58.240 [debug] <0.999.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 31, 255, 225, 0, 26, 103, 100, 0, 31, 172, 217, 64, 160, 49, 251, 192, 68, 0, 0, 3, 0, 4, 0, 0, 3, 1, 224, 60, 96, 198, 88, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 380, width: 640}
     
     
     10:29:58.240 [debug] <0.999.0>/:muxer/ received start of stream
     
     10:29:58.245 [debug] <0.931.0>/:media_finalization_sender/ received start of stream
     
     10:29:58.246 [debug] <0.931.0>/:sink/ received start of stream
     
     10:29:58.252 [debug] <0.931.0>/ Pipeline supervisor got exit from pipeline with reason :shutdown, stopping subprocess supervisor
     
     10:29:58.252 [debug] <0.931.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/ Pipeline supervisor got exit from a linked process, pipeline already dead, waiting for subprocess supervisor to exit
     
     10:29:58.252 [debug] <0.931.0>/:audio_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/:video_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/:cmaf/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/:video_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/:video_source/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/:video_limiter/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/:audio_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/:audio_source/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/:audio_limiter/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/:media_finalization_sender/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.252 [debug] <0.931.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.253 [debug] <0.999.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 320, height: 190, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.254 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:audio_payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:audio_parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:audio_source, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :audio_parser, from_pad: :output, from_pad_props: %{options: []}, to: :audio_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_source, from_pad: :output, from_pad_props: %{options: []}, to: :audio_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :audio_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:video_payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:video_parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:video_source, %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :video_parser, from_pad: :output, from_pad_props: %{options: []}, to: :video_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_source, from_pad: :output, from_pad_props: %{options: []}, to: :video_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :video_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:media_finalization_sender, %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.1057.0>}, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: nil}, %{get_if_exists: false}}], links: [%{from: :media_finalization_sender, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :media_finalization_sender, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}, %Membrane.ChildrenSpec.Builder{children: [{:audio_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.1057.0>, tag: :audio}, %{get_if_exists: false}}], links: [%{from: :audio_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :audio_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}, %Membrane.ChildrenSpec.Builder{children: [{:video_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.1057.0>, tag: :video}, %{get_if_exists: false}}], links: [%{from: :video_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :video_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}], test_process: #PID<0.1057.0>],
     process options: []
     
     
     10:29:58.255 [debug] <0.999.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 21, 255, 225, 0, 25, 103, 100, 0, 21, 172, 217, 65, 65, 159, 172, 4, 64, 0, 0, 3, 0, 64, 0, 0, 30, 3, 197, 139, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 190, width: 320}
     
     
     10:29:58.256 [debug] <0.1061.0>/ New spec with ref: #Reference<0.2846893677.1757413381.56258>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:audio_payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:audio_parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:audio_source, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :audio_parser, from_pad: :output, from_pad_props: %{options: []}, to: :audio_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_source, from_pad: :output, from_pad_props: %{options: []}, to: :audio_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :audio_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:video_payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:video_parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:video_source, %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :video_parser, from_pad: :output, from_pad_props: %{options: []}, to: :video_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_source, from_pad: :output, from_pad_props: %{options: []}, to: :video_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :video_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:media_finalization_sender, %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.1057.0>}, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: nil}, %{get_if_exists: false}}], links: [%{from: :media_finalization_sender, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :media_finalization_sender, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}, %Membrane.ChildrenSpec.Builder{children: [{:audio_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.1057.0>, tag: :audio}, %{get_if_exists: false}}], links: [%{from: :audio_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :audio_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}, %Membrane.ChildrenSpec.Builder{children: [{:video_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.1057.0>, tag: :video}, %{get_if_exists: false}}], links: [%{from: :video_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :video_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}]
     
     
     10:29:58.256 [debug] <0.1061.0>/ Starting children: [%Membrane.ChildEntry{name: :audio_source, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56258>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :audio_parser, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56258>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :audio_payloader, module: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56258>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.256 [debug] <0.1061.0>/ Starting child: name: :audio_source, module: Membrane.File.Source in children group: nil
     
     10:29:58.256 [debug] <0.1061.0>/ subprocess supervisor Element start: :audio_source
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.256 [debug] <0.1061.0>/:audio_source/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}
     
     10:29:58.257 [debug] <0.1061.0>/ Starting child: name: :audio_parser, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.257 [debug] <0.1061.0>/ subprocess supervisor Element start: :audio_parser
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS},
     method: start
     
     
     10:29:58.257 [debug] <0.1061.0>/:audio_parser/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}
     
     10:29:58.257 [debug] <0.1061.0>/:audio_parser/ Component initialized
     
     10:29:58.257 [debug] <0.1061.0>/ Starting child: name: :audio_payloader, module: Membrane.MP4.Payloader.AAC in children group: nil
     
     10:29:58.257 [debug] <0.1061.0>/:audio_source/ Component initialized
     
     10:29:58.257 [debug] <0.1061.0>/ subprocess supervisor Element start: :audio_payloader
     node: ,
     module: Membrane.MP4.Payloader.AAC,
     element options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0},
     method: start
     
     
     10:29:58.257 [debug] <0.1061.0>/:audio_payloader/ Initializing element: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}
     
     10:29:58.257 [debug] <0.1061.0>/:audio_payloader/ Component initialized
     
     10:29:58.257 [debug] <0.1061.0>/ Starting children: [%Membrane.ChildEntry{name: :video_source, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56258>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56258>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56258>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.257 [debug] <0.1061.0>/ Starting child: name: :video_source, module: Membrane.File.Source in children group: nil
     
     10:29:58.257 [debug] <0.1061.0>/ subprocess supervisor Element start: :video_source
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.258 [debug] <0.1061.0>/:video_source/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.258 [debug] <0.1061.0>/ Starting child: name: :video_parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.258 [debug] <0.1061.0>/ subprocess supervisor Element start: :video_parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0},
     method: start
     
     
     10:29:58.258 [debug] <0.1061.0>/:video_source/ Component initialized
     
     10:29:58.258 [debug] <0.1061.0>/:video_parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}
     
     10:29:58.258 [debug] <0.1061.0>/:video_parser/ Component initialized
     
     10:29:58.258 [debug] <0.1061.0>/ Starting child: name: :video_payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.258 [debug] <0.1061.0>/ subprocess supervisor Element start: :video_payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.258 [debug] <0.1061.0>/:video_payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.258 [debug] <0.1061.0>/:video_payloader/ Component initialized
     
     10:29:58.258 [debug] <0.1061.0>/ Starting children: [%Membrane.ChildEntry{name: :cmaf, module: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: nil}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56258>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :media_finalization_sender, module: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender, options: %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.1057.0>}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56258>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56258>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.258 [debug] <0.1061.0>/ Starting child: name: :cmaf, module: Membrane.MP4.Muxer.CMAF in children group: nil
     
     10:29:58.259 [debug] <0.1061.0>/ subprocess supervisor Element start: :cmaf
     node: ,
     module: Membrane.MP4.Muxer.CMAF,
     element options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: nil},
     method: start
     
     
     10:29:58.259 [debug] <0.1061.0>/:cmaf/ Initializing element: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: nil}
     
     10:29:58.259 [debug] <0.1061.0>/:cmaf/ Component initialized
     
     10:29:58.259 [debug] <0.1061.0>/ Starting child: name: :media_finalization_sender, module: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender in children group: nil
     
     10:29:58.259 [debug] <0.1061.0>/ subprocess supervisor Element start: :media_finalization_sender
     node: ,
     module: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender,
     element options: %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.1057.0>},
     method: start
     
     
     10:29:58.259 [debug] <0.1061.0>/:media_finalization_sender/ Initializing element: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender, options: %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.1057.0>}
     
     10:29:58.259 [debug] <0.1061.0>/:media_finalization_sender/ Component initialized
     
     10:29:58.259 [debug] <0.1061.0>/ Starting child: name: :sink, module: Membrane.Testing.Sink in children group: nil
     
     10:29:58.259 [debug] <0.1061.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.Testing.Sink,
     element options: %Membrane.Testing.Sink{autodemand: true},
     method: start
     
     
     10:29:58.259 [debug] <0.1061.0>/:sink/ Initializing element: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}
     
     10:29:58.259 [debug] <0.1061.0>/:sink/ Component initialized
     
     10:29:58.259 [debug] <0.1061.0>/ Starting children: [%Membrane.ChildEntry{name: :audio_limiter, module: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1057.0>, tag: :audio}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56258>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.259 [debug] <0.1061.0>/ Starting child: name: :audio_limiter, module: Membrane.MP4.BufferLimiter in children group: nil
     
     10:29:58.259 [debug] <0.1061.0>/ subprocess supervisor Element start: :audio_limiter
     node: ,
     module: Membrane.MP4.BufferLimiter,
     element options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1057.0>, tag: :audio},
     method: start
     
     
     10:29:58.259 [debug] <0.1061.0>/:audio_limiter/ Initializing element: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1057.0>, tag: :audio}
     
     10:29:58.259 [debug] <0.1061.0>/:audio_limiter/ Component initialized
     
     10:29:58.259 [debug] <0.1061.0>/ Starting children: [%Membrane.ChildEntry{name: :video_limiter, module: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1057.0>, tag: :video}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56258>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.259 [debug] <0.1061.0>/ Starting child: name: :video_limiter, module: Membrane.MP4.BufferLimiter in children group: nil
     
     10:29:58.259 [debug] <0.1061.0>/ subprocess supervisor Element start: :video_limiter
     node: ,
     module: Membrane.MP4.BufferLimiter,
     element options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1057.0>, tag: :video},
     method: start
     
     
     10:29:58.260 [debug] <0.1061.0>/:video_limiter/ Initializing element: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1057.0>, tag: :video}
     
     10:29:58.260 [debug] <0.1061.0>/:video_limiter/ Component initialized
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Setup
     
     10:29:58.260 [debug] <0.1061.0>/ Component initialized
     
     10:29:58.260 [debug] <0.1061.0>/ Parent play
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56258> startup: initializing, dependent specs: []
     
     10:29:58.260 [debug] <0.1061.0>/ Spec #Reference<0.2846893677.1757413381.56258> status changed to initialized
     
     10:29:58.260 [debug] <0.1061.0>/ Spec #Reference<0.2846893677.1757413381.56258> status changed to linking internally
     
     10:29:58.260 [debug] <0.1061.0>/:audio_source/ Element handle link on pad :output with pad :input of child :audio_parser
     
     10:29:58.260 [debug] <0.1061.0>/:audio_parser/ Element handle link on pad :input with pad :output of child :audio_source
     
     10:29:58.260 [debug] <0.1061.0>/:audio_parser/ Element handle link on pad :output with pad :input of child :audio_payloader
     
     10:29:58.260 [debug] <0.1061.0>/:audio_payloader/ Element handle link on pad :input with pad :output of child :audio_parser
     
     10:29:58.260 [debug] <0.1061.0>/:video_source/ Element handle link on pad :output with pad :input of child :video_parser
     
     10:29:58.260 [debug] <0.1061.0>/:video_parser/ Element handle link on pad :input with pad :output of child :video_source
     
     10:29:58.260 [debug] <0.1061.0>/:video_parser/ Element handle link on pad :output with pad :input of child :video_payloader
     
     10:29:58.260 [debug] <0.1061.0>/:video_payloader/ Element handle link on pad :input with pad :output of child :video_parser
     
     10:29:58.261 [debug] <0.1061.0>/:cmaf/ Element handle link on pad :output with pad :input of child :media_finalization_sender
     
     10:29:58.261 [debug] <0.1061.0>/:media_finalization_sender/ Element handle link on pad :input with pad :output of child :cmaf
     
     10:29:58.261 [debug] <0.1061.0>/:media_finalization_sender/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.261 [debug] <0.1061.0>/:sink/ Element handle link on pad :input with pad :output of child :media_finalization_sender
     
     10:29:58.261 [debug] <0.1061.0>/:audio_payloader/ Element handle link on pad :output with pad :input of child :audio_limiter
     
     10:29:58.261 [debug] <0.1061.0>/:audio_limiter/ Element handle link on pad :input with pad :output of child :audio_payloader
     
     10:29:58.261 [debug] <0.1061.0>/:audio_limiter/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56359>} of child :cmaf
     
     10:29:58.261 [debug] <0.1061.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56359>} with pad :output of child :audio_limiter
     
     10:29:58.261 [debug] <0.1061.0>/:video_payloader/ Element handle link on pad :output with pad :input of child :video_limiter
     
     10:29:58.261 [debug] <0.1061.0>/:video_limiter/ Element handle link on pad :input with pad :output of child :video_payloader
     
     10:29:58.262 [debug] <0.1061.0>/:video_limiter/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56360>} of child :cmaf
     
     10:29:58.262 [debug] <0.1061.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56360>} with pad :output of child :video_limiter
     
     10:29:58.262 [debug] <0.1061.0>/ Spec #Reference<0.2846893677.1757413381.56258> status changed to linked internally
     
     10:29:58.262 [debug] <0.1061.0>/ Spec #Reference<0.2846893677.1757413381.56258> status changed to ready
     
     10:29:58.262 [debug] <0.1061.0>/:media_finalization_sender/ Got play request
     
     10:29:58.262 [debug] <0.1061.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:audio_limiter, :audio_parser, :audio_payloader, :audio_source, :cmaf, :media_finalization_sender, :sink, :video_limiter, :video_parser, :video_payloader, :video_source]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413381.56259>, #Reference<0.2846893677.1757413381.56260>, #Reference<0.2846893677.1757413381.56261>, #Reference<0.2846893677.1757413381.56262>, #Reference<0.2846893677.1757413381.56263>, #Reference<0.2846893677.1757413381.56264>, #Reference<0.2846893677.1757413381.56265>, #Reference<0.2846893677.1757413381.56266>, #Reference<0.2846893677.1757413381.56267>, #Reference<0.2846893677.1757413381.56268>], status: :initializing}
     
     10:29:58.262 [debug] <0.1061.0>/:media_finalization_sender/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.262 [debug] <0.1061.0>/:video_limiter/ Got play request
     
     10:29:58.262 [debug] <0.1061.0>/:sink/ Got play request
     
     10:29:58.262 [debug] <0.1061.0>/:audio_payloader/ Got play request
     
     10:29:58.262 [debug] <0.1061.0>/:cmaf/ Got play request
     
     10:29:58.262 [debug] <0.1061.0>/:audio_limiter/ Got play request
     
     10:29:58.262 [debug] <0.1061.0>/:video_payloader/ Got play request
     
     10:29:58.262 [debug] <0.1061.0>/:video_parser/ Got play request
     
     10:29:58.262 [debug] <0.1061.0>/:video_parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.262 [debug] <0.1061.0>/:video_source/ Got play request
     
     10:29:58.262 [debug] <0.1061.0>/:video_source/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.262 [debug] <0.1061.0>/:audio_parser/ Got play request
     
     10:29:58.262 [debug] <0.1061.0>/:audio_source/ Got play request
     
     10:29:58.262 [debug] <0.1061.0>/:audio_source/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.263 [debug] <0.1061.0>/:audio_parser/ received start of stream
     
     10:29:58.263 [debug] <0.1061.0>/:video_parser/ received start of stream
     
     10:29:58.263 [debug] <0.1061.0>/:audio_parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.263 [debug] <0.1061.0>/:audio_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.263 [debug] <0.1061.0>/:audio_payloader/ received start of stream
     
     10:29:58.263 [debug] <0.1061.0>/:video_parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :unknown, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.263 [debug] <0.1061.0>/:video_payloader/ received start of stream
     
     10:29:58.263 [debug] <0.1061.0>/:video_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 244, 0, 10, 255, 225, 0, 25, 103, 244, 0, 10, 145, 155, 40, 231, 241, 177, 184, 8, 128, 0, 0, 3, 0, 128, 0, 0, 30, 7, 137, 18, 203, 1, 0, 6, 104, 235, 227, 196, 72, 68>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.264 [debug] <0.1061.0>/:audio_limiter/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.264 [debug] <0.1061.0>/:audio_limiter/ received start of stream
     
     10:29:58.264 [debug] <0.1061.0>/:cmaf/ received start of stream
     
     10:29:58.264 [debug] <0.1061.0>/:video_limiter/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 244, 0, 10, 255, 225, 0, 25, 103, 244, 0, 10, 145, 155, 40, 231, 241, 177, 184, 8, 128, 0, 0, 3, 0, 128, 0, 0, 30, 7, 137, 18, 203, 1, 0, 6, 104, 235, 227, 196, 72, 68>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.264 [debug] <0.1061.0>/:video_limiter/ received start of stream
     
     10:29:58.264 [debug] <0.1061.0>/:cmaf/ Sending stream format through pad :output
     Stream format: %Membrane.CMAF.Track{content_type: [:audio, :video], header: <<0, 0, 0, 24, 102, 116, 121, 112, 105, 115, 111, 53, 0, 0, 2, 0, 105, 115, 111, 54, 109, 112, 52, 49, 0, 0, 4, 81, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, ...>>, resolution: {100, 100}, codecs: %{avc1: %{compatibility: 0, level: 10, profile: 244}, mp4a: %{aot_id: 2, channels: 1, frequency: 44100}}}
     
     
     10:29:58.264 [debug] <0.1061.0>/:cmaf/ received start of stream
     
     10:29:58.265 [debug] <0.1061.0>/:media_finalization_sender/ Sending stream format through pad :output
     Stream format: %Membrane.CMAF.Track{content_type: [:audio, :video], header: <<0, 0, 0, 24, 102, 116, 121, 112, 105, 115, 111, 53, 0, 0, 2, 0, 105, 115, 111, 54, 109, 112, 52, 49, 0, 0, 4, 81, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, ...>>, resolution: {100, 100}, codecs: %{avc1: %{compatibility: 0, level: 10, profile: 244}, mp4a: %{aot_id: 2, channels: 1, frequency: 44100}}}
     
     
     10:29:58.269 [debug] <0.1061.0>/:media_finalization_sender/ received start of stream
     
     10:29:58.270 [debug] <0.1061.0>/:sink/ received start of stream
     
     10:29:58.279 [debug] <0.449.0>/ Pipeline supervisor got exit from pipeline with reason :shutdown, stopping subprocess supervisor
     
     10:29:58.279 [debug] <0.449.0>/ Pipeline supervisor got exit from a linked process, pipeline already dead, waiting for subprocess supervisor to exit
     
     10:29:58.280 [debug] <0.449.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.280 [debug] <0.449.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.280 [debug] <0.449.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.280 [debug] <0.449.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.280 [debug] <0.449.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.280 [debug] <0.449.0>/:depayloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.280 [debug] <0.449.0>/:depayloader/:remote_stream_depayloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.280 [debug] <0.449.0>/:depayloader/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.280 [debug] <0.449.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.281 [debug] <0.1061.0>/ Pipeline supervisor got exit from pipeline with reason :shutdown, stopping subprocess supervisor
     
     10:29:58.281 [debug] <0.1061.0>/ Pipeline supervisor got exit from a linked process, pipeline already dead, waiting for subprocess supervisor to exit
     
     10:29:58.281 [debug] <0.1061.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.281 [debug] <0.1061.0>/:video_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.281 [debug] <0.1061.0>/:cmaf/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.281 [debug] <0.1061.0>/:video_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.282 [debug] <0.1061.0>/:audio_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.282 [debug] <0.1061.0>/:media_finalization_sender/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.282 [debug] <0.1061.0>/:audio_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.282 [debug] <0.1061.0>/:video_limiter/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.282 [debug] <0.1061.0>/:video_source/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.282 [debug] <0.1061.0>/:audio_source/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.282 [debug] <0.1061.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.282 [debug] <0.1061.0>/:audio_limiter/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.268 [error] GenServer #PID<0.1025.0> terminating
     ** (RuntimeError) ISOM Muxer doesn't support variable parameters
         (membrane_mp4_plugin 0.25.0) lib/membrane_mp4/muxer/isom.ex:99: Membrane.MP4.Muxer.ISOM.handle_stream_format/4
         (membrane_core 0.12.5) lib/membrane/core/callback_handler.ex:139: Membrane.Core.CallbackHandler.exec_callback/4
         (membrane_core 0.12.5) lib/membrane/core/callback_handler.ex:69: Membrane.Core.CallbackHandler.exec_and_handle_callback/5
         (membrane_core 0.12.5) lib/membrane/core/element/stream_format_controller.ex:71: Membrane.Core.Element.StreamFormatController.exec_handle_stream_format/4
         (membrane_core 0.12.5) lib/membrane/core/element.ex:194: Membrane.Core.Element.handle_info/2
         (stdlib 4.3) gen_server.erl:1123: :gen_server.try_dispatch/4
         (stdlib 4.3) gen_server.erl:1200: :gen_server.handle_msg/6
         (stdlib 4.3) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
     Last message: {Membrane.Core.Message, :stream_format, %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 21, 255, 225, 0, 25, 103, 100, 0, 21, 172, 217, 65, 65, 159, 172, 4, 64, 0, 0, 3, 0, 64, 0, 0, 30, 3, 197, 139, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 190, width: 320}, [for_pad: {Membrane.Pad, :input, #Reference<0.2846893677.1757413384.55753>}]}
     State: %Membrane.Core.Element.State{module: Membrane.MP4.Muxer.ISOM, type: :filter, name: :muxer, internal_state: %{chunk_duration: 1000000000, fast_start: true, mdat_size: 108189, next_track_id: 2, pad_order: [#Reference<0.2846893677.1757413384.55753>], pad_to_track: %{#Reference<0.2846893677.1757413384.55753> => %Membrane.MP4.Track{id: 1, content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 31, 255, 225, 0, 26, 103, 100, 0, 31, 172, 217, 64, 160, 49, 251, 192, 68, 0, 0, 3, 0, 4, 0, 0, 3, 1, 224, 60, 96, 198, 88, 1, 0, ...>>, inband_parameters?: false}, height: 380, width: 640, timescale: 30720, sample_table: %Membrane.MP4.Track.SampleTable{timescale: 30720, chunk: [<<0, 0, 0, 50, 1, 158, 98, 106, 71, 255, 0, 0, 3, 0, 0, 248, 181, 5, 151, 212, 5, 240, 229, 102, 144, 212, 22, 15, 4, 21, ...>>, <<0, 0, 0, 40, 65, 158, 65, 69, 21, 44, 127, 0, 0, 88, 200, 31, 113, 133, 79, 89, 26, 85, 157, 152, 16, 200, 124, 68, 94, ...>>, <<0, 0, 0, 215, 65, 154, 35, 73, 168, 65, 108, 153, 76, 8, 255, 252, 132, 0, 0, 3, 0, 2, 141, 199, 223, 228, 119, 205, ...>>, <<0, 0, 0, 35, 1, 158, 63, 106, 71, 255, 0, 0, 88, 179, 79, 34, 248, 108, 47, 174, 120, 179, 181, 253, 168, 43, 150, ...>>, <<0, 0, 0, 40, 1, 158, 61, 116, 71, 255, 0, 0, 88, 133, 189, 197, 118, 245, 13, 52, 240, 12, 90, 112, 183, 115, ...>>, <<0, 0, 0, 61, 65, 158, 30, 69, 21, 44, 35, 255, 0, 0, 55, 91, 190, 240, 99, 39, 44, 60, 208, 206, 128, ...>>, <<0, 0, 1, 54, 65, 155, 224, 73, 168, 65, 108, 153, 76, 8, 79, 255, 253, 241, 0, 0, 3, 0, 0, 121, ...>>, <<0, 0, 0, 38, 1, 159, 251, 106, 71, 255, 0, 0, 88, 179, 79, 34, 248, 108, 77, 69, 89, 113, 162, ...>>, <<0, 0, 0, 54, 1, 159, 249, 116, 71, 255, 0, 0, 88, 133, 189, 197, 118, 245, 241, 15, 59, 50, ...>>, <<0, 0, 0, 65, 65, 159, 218, 69, 21, 44, 35, 255, 0, 0, 55, 91, 190, 240, 99, 39, 47, ...>>, <<0, 0, 1, 105, 65, 155, 188, 73, 168, 65, 108, 153, 76, 8, 87, 255, 254, 56, 64, 0, ...>>], chunk_first_dts: 19133333333, last_dts: 19466666666, sample_description: %{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 31, 255, 225, 0, 26, 103, 100, 0, 31, 172, 217, 64, 160, 49, 251, 192, 68, 0, 0, 3, 0, 4, 0, ...>>, inband_parameters?: false}, height: 380, width: 640}, sample_count: 600, sample_sizes: [54, 44, 219, 39, 44, 65, 314, 42, 58, 69, 365, 42, 55, 70, 355, 47, 57, 72, 383, 50, 54, 59, 392, 48, 40, 57, ...], sync_samples: [501, 251, 1], chunk_offsets: [104145, 99348, 89122, 84081, 79004, 73476, 68537, 63921, 58839, 53932, 44594, 39939, 35713, 30369, 25331, 20413, 15846, 10536, 40], decoding_deltas: [%{sample_count: 2, sample_delta: 33333333}, %{sample_count: 1, sample_delta: 33333334}, %{sample_count: 2, sample_delta: 33333333}, %{sample_count: 1, sample_delta: 33333334}, %{sample_count: 2, sample_delta: 33333333}, %{sample_count: 1, sample_delta: 33333334}, %{sample_count: 2, sample_delta: 33333333}, %{sample_count: 1, sample_delta: 33333334}, %{sample_count: 2, sample_delta: 33333333}, %{sample_count: 1, sample_delta: 33333334}, %{sample_count: 2, sample_delta: 33333333}, %{sample_count: 1, sample_delta: 33333334}, %{sample_count: 2, sample_delta: 33333333}, %{sample_count: 1, sample_delta: 33333334}, %{sample_count: 2, sample_delta: 33333333}, %{sample_count: 1, sample_delta: 33333334}, %{sample_count: 2, sample_delta: 33333333}, %{sample_count: 1, sample_delta: 33333334}, %{sample_count: 2, sample_delta: 33333333}, %{sample_count: 1, sample_delta: 33333334}, %{sample_count: 2, sample_delta: 33333333}, %{sample_count: 1, ...}, %{...}, ...], composition_offsets: [], samples_per_chunk: [%{first_chunk: 1, sample_count: 31}]}, duration: nil, movie_duration: nil}}}, pads_info: %{input: %{accepted_formats_str: ["Membrane.MP4.Payload"], availability: :on_request, demand_unit: :buffers, direction: :input, flow_control: :manual, name: :input, options: nil}, output: %{accepted_formats_str: ["%RemoteStream{type: :bytestream, content_format: MP4}"], availability: :always, demand_unit: nil, direction: :output, flow_control: :manual, name: :output, options: nil}}, pads_data: %{:output => %Membrane.Element.PadData{availability: :always, stream_format: %Membrane.RemoteStream{content_format: Membrane.MP4, type: :bytestream}, direction: :output, flow_control: :manual, name: :output, ref: :output, options: %{}, pid: #PID<0.1028.0>, other_ref: :input, input_queue: nil, demand: 20, incoming_demand: 40, demand_unit: :buffers, start_of_stream?: true, end_of_stream?: false, auto_demand_size: nil, sticky_messages: [], atomic_demand: %Membrane.Core.Element.AtomicDemand{counter: %Membrane.Core.Element.AtomicDemand.DistributedAtomic{worker: #PID<0.1040.0>, atomic_ref: #Reference<0.2846893677.1757544450.57380>}, receiver_status: %Membrane.Core.Element.AtomicDemand.DistributedAtomic{worker: #PID<0.1041.0>, atomic_ref: #Reference<0.2846893677.1757544456.55765>}, receiver_process: #PID<0.1028.0>, sender_status: %Membrane.Core.Element.AtomicDemand.DistributedAtomic{worker: #PID<0.1042.0>, atomic_ref: #Reference<0.2846893677.1757544456.55767>}, sender_process: #PID<0.1025.0>, sender_pad_ref: :output, throttling_factor: 1, toilet_capacity: 200, receiver_demand_unit: :buffers, buffered_decrementation: 0, toilet_overflowed?: false}, manual_demand_size: 0, associated_pads: [], sticky_events: [], stream_format_validation_params: [], other_demand_unit: :buffers, other_effective_flow_control: :push}, {Membrane.Pad, :input, #Reference<0.2846893677.1757413384.55753>} => %Membrane.Element.PadData{availability: :on_request, stream_format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 31, 255, 225, 0, 26, 103, 100, 0, 31, 172, 217, 64, 160, 49, 251, 192, 68, 0, 0, 3, 0, 4, 0, 0, 3, 1, 224, 60, 96, 198, 88, 1, 0, 6, 104, ...>>, inband_parameters?: false}, timescale: 30720, height: 380, width: 640}, direction: :input, flow_control: :manual, name: :input, ref: {Membrane.Pad, :input, #Reference<0.2846893677.1757413384.55753>}, options: %{}, pid: #PID<0.1017.0>, other_ref: :output, input_queue: %Membrane.Core.Element.InputQueue{q: #Qex<[]>, log_tag: "{Membrane.Pad, :input, #Reference<0.2846893677.1757413384.55753>}", target_size: 40, atomic_demand: %Membrane.Core.Element.AtomicDemand{counter: %Membrane.Core.Element.AtomicDemand.DistributedAtomic{worker: #PID<0.1037.0>, atomic_ref: #Reference<0.2846893677.1757544450.57372>}, receiver_status: %Membrane.Core.Element.AtomicDemand.DistributedAtomic{worker: #PID<0.1038.0>, atomic_ref: #Reference<0.2846893677.1757544450.57374>}, receiver_process: #PID<0.1025.0>, sender_status: %Membrane.Core.Element.AtomicDemand.DistributedAtomic{worker: #PID<0.1039.0>, atomic_ref: #Reference<0.2846893677.1757544450.57376>}, sender_process: #PID<0.1017.0>, sender_pad_ref: :output, throttling_factor: 1, toilet_capac (truncated)
     
     10:29:58.282 [debug] <0.1061.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.283 [debug] <0.999.0>/:muxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.283 [debug] <0.999.0>/ Child :muxer crashed but was not a member of any crash group.
     Terminating.
     
     
     10:29:58.283 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1151.0>],
     process options: []
     
     
     10:29:58.283 [error] <0.999.0>/ Terminating with reason: {:membrane_child_crash, :muxer}
     
     10:29:58.283 [debug] <0.999.0>/ Pipeline supervisor got exit from pipeline with reason {:membrane_child_crash, :muxer}, stopping subprocess supervisor
     
     10:29:58.283 [debug] <0.999.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.283 [debug] <0.999.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.283 [debug] <0.1158.0>/ New spec with ref: #Reference<0.2846893677.1757413379.59882>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.283 [debug] <0.999.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.284 [debug] <0.999.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.284 [debug] <0.1158.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.59882>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.59882>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.59882>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :cmaf, module: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.59882>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.59882>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.284 [debug] <0.1158.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.284 [debug] <0.1158.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.284 [debug] <0.999.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.284 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.PayloaderDepayloaderTest/test-if-an-AAC-track,-after-payloading,-is-depayloaded-to-the-original-stream-2ee30206/out.aac"}, %{get_if_exists: false}}, {{:parser, :out}, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :ADTS, in_encapsulation: :none}, %{get_if_exists: false}}, {:depayloader, Membrane.MP4.Depayloader.AAC, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {{:parser, :in}, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: {:parser, :out}, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :depayloader, from_pad: :output, from_pad_props: %{options: []}, to: {:parser, :out}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :depayloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: {:parser, :in}, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: {:parser, :in}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1161.0>],
     process options: []
     
     
     10:29:58.284 [debug] <0.999.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.284 [debug] <0.1158.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.284 [debug] <0.1158.0>/ Starting child: name: :parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.284 [debug] <0.1158.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0},
     method: start
     
     
     10:29:58.284 [debug] <0.1173.0>/ New spec with ref: #Reference<0.2846893677.1757413380.57068>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.PayloaderDepayloaderTest/test-if-an-AAC-track,-after-payloading,-is-depayloaded-to-the-original-stream-2ee30206/out.aac"}, %{get_if_exists: false}}, {{:parser, :out}, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :ADTS, in_encapsulation: :none}, %{get_if_exists: false}}, {:depayloader, Membrane.MP4.Depayloader.AAC, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {{:parser, :in}, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: {:parser, :out}, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :depayloader, from_pad: :output, from_pad_props: %{options: []}, to: {:parser, :out}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :depayloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: {:parser, :in}, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: {:parser, :in}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.284 [debug] <0.1158.0>/:parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}
     
     10:29:58.284 [debug] <0.1158.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.284 [debug] <0.1158.0>/:parser/ Component initialized
     
     10:29:58.284 [debug] <0.1158.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.284 [debug] <0.1158.0>/:file/ Component initialized
     
     10:29:58.284 [debug] <0.1158.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.284 [debug] <0.1158.0>/:payloader/ Component initialized
     
     10:29:58.284 [debug] <0.1173.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57068>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: {:parser, :in}, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57068>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57068>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :depayloader, module: Membrane.MP4.Depayloader.AAC, options: nil, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57068>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: {:parser, :out}, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :ADTS, in_encapsulation: :none}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57068>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.PayloaderDepayloaderTest/test-if-an-AAC-track,-after-payloading,-is-depayloaded-to-the-original-stream-2ee30206/out.aac"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57068>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.284 [debug] <0.1173.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.284 [debug] <0.1173.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.284 [debug] <0.1158.0>/ Starting child: name: :cmaf, module: Membrane.MP4.Muxer.CMAF in children group: nil
     
     10:29:58.284 [debug] <0.1158.0>/ subprocess supervisor Element start: :cmaf
     node: ,
     module: Membrane.MP4.Muxer.CMAF,
     element options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil},
     method: start
     
     
     10:29:58.284 [debug] <0.1173.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}
     
     10:29:58.284 [debug] <0.1158.0>/:cmaf/ Initializing element: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil}
     
     10:29:58.284 [debug] <0.1158.0>/:cmaf/ Component initialized
     
     10:29:58.284 [debug] <0.1158.0>/ Starting child: name: :sink, module: Membrane.Testing.Sink in children group: nil
     
     10:29:58.285 [debug] <0.1158.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.Testing.Sink,
     element options: %Membrane.Testing.Sink{autodemand: true},
     method: start
     
     
     10:29:58.285 [debug] <0.1158.0>/:sink/ Initializing element: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}
     
     10:29:58.285 [debug] <0.1158.0>/:sink/ Component initialized
     
     10:29:58.285 [debug] <0.1173.0>/ Starting child: name: {:parser, :in}, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.285 [debug] <0.1173.0>/ subprocess supervisor Element start: {:parser, :in}
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS},
     method: start
     
     
     10:29:58.285 [debug] <0.1173.0>/{:parser, :in}/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}
     
     10:29:58.285 [debug] <0.1173.0>/{:parser, :in}/ Component initialized
     
     10:29:58.285 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:video_payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:video_parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:video_file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :video_parser, from_pad: :output, from_pad_props: %{options: []}, to: :video_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_file, from_pad: :output, from_pad_props: %{options: []}, to: :video_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :video_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:audio_payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:audio_parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:audio_file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :audio_parser, from_pad: :output, from_pad_props: %{options: []}, to: :audio_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_file, from_pad: :output, from_pad_props: %{options: []}, to: :audio_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :audio_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_two_tracks_fast_start.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}, %Membrane.ChildrenSpec.Builder{children: [], links: [%{from: :video_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :muxer}, %Membrane.ChildrenSpec.Builder{children: [], links: [%{from: :audio_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :muxer}], test_process: #PID<0.1181.0>],
     process options: []
     
     
     10:29:58.286 [debug] <0.1202.0>/ New spec with ref: #Reference<0.2846893677.1757413377.57538>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:video_payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:video_parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:video_file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :video_parser, from_pad: :output, from_pad_props: %{options: []}, to: :video_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_file, from_pad: :output, from_pad_props: %{options: []}, to: :video_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :video_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:audio_payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:audio_parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:audio_file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :audio_parser, from_pad: :output, from_pad_props: %{options: []}, to: :audio_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_file, from_pad: :output, from_pad_props: %{options: []}, to: :audio_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :audio_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_two_tracks_fast_start.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}, %Membrane.ChildrenSpec.Builder{children: [], links: [%{from: :video_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :muxer}, %Membrane.ChildrenSpec.Builder{children: [], links: [%{from: :audio_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :muxer}]
     
     
     10:29:58.286 [debug] <0.1202.0>/ Starting children: [%Membrane.ChildEntry{name: :video_file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413377.57538>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413377.57538>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413377.57538>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.286 [debug] <0.1202.0>/ Starting child: name: :video_file, module: Membrane.File.Source in children group: nil
     
     10:29:58.286 [debug] <0.1202.0>/ subprocess supervisor Element start: :video_file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.287 [debug] <0.1202.0>/:video_file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.287 [debug] <0.1173.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.AAC in children group: nil
     
     10:29:58.287 [debug] <0.1173.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.AAC,
     element options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0},
     method: start
     
     
     10:29:58.287 [debug] <0.1158.0>/ Proceeding spec #Reference<0.2846893677.1757413379.59882> startup: initializing, dependent specs: []
     
     10:29:58.287 [debug] <0.1158.0>/ Setup
     
     10:29:58.287 [debug] <0.1158.0>/ Component initialized
     
     10:29:58.287 [debug] <0.1158.0>/ Parent play
     
     10:29:58.287 [debug] <0.1158.0>/ Proceeding spec #Reference<0.2846893677.1757413379.59882> startup: initializing, dependent specs: []
     
     10:29:58.287 [debug] <0.1158.0>/ Proceeding spec #Reference<0.2846893677.1757413379.59882> startup: initializing, dependent specs: []
     
     10:29:58.287 [debug] <0.1158.0>/ Proceeding spec #Reference<0.2846893677.1757413379.59882> startup: initializing, dependent specs: []
     
     10:29:58.287 [debug] <0.1158.0>/ Proceeding spec #Reference<0.2846893677.1757413379.59882> startup: initializing, dependent specs: []
     
     10:29:58.287 [debug] <0.1158.0>/ Proceeding spec #Reference<0.2846893677.1757413379.59882> startup: initializing, dependent specs: []
     
     10:29:58.287 [debug] <0.1158.0>/ Spec #Reference<0.2846893677.1757413379.59882> status changed to initialized
     
     10:29:58.287 [debug] <0.1158.0>/ Spec #Reference<0.2846893677.1757413379.59882> status changed to linking internally
     
     10:29:58.287 [debug] <0.1173.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}
     
     10:29:58.287 [debug] <0.1158.0>/:file/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.287 [debug] <0.1173.0>/:payloader/ Component initialized
     
     10:29:58.287 [debug] <0.1158.0>/:parser/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.287 [debug] <0.1173.0>/ Starting child: name: :depayloader, module: Membrane.MP4.Depayloader.AAC in children group: nil
     
     10:29:58.287 [debug] <0.1173.0>/ subprocess supervisor Element start: :depayloader
     node: ,
     module: Membrane.MP4.Depayloader.AAC,
     element options: nil,
     method: start
     
     
     10:29:58.288 [debug] <0.1158.0>/:parser/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.288 [debug] <0.1173.0>/:depayloader/ Initializing element: Membrane.MP4.Depayloader.AAC, options: nil
     
     10:29:58.288 [debug] <0.1158.0>/:payloader/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.288 [debug] <0.1173.0>/:depayloader/ Component initialized
     
     10:29:58.288 [debug] <0.1173.0>/ Starting child: name: {:parser, :out}, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.288 [debug] <0.1158.0>/:payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56486>} of child :cmaf
     
     10:29:58.288 [debug] <0.1173.0>/ subprocess supervisor Element start: {:parser, :out}
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :ADTS, in_encapsulation: :none},
     method: start
     
     
     10:29:58.288 [debug] <0.1158.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56486>} with pad :output of child :payloader
     
     10:29:58.288 [debug] <0.1173.0>/{:parser, :out}/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :ADTS, in_encapsulation: :none}
     
     10:29:58.288 [debug] <0.1173.0>/{:parser, :out}/ Component initialized
     
     10:29:58.288 [debug] <0.1158.0>/:cmaf/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.288 [debug] <0.1158.0>/:sink/ Element handle link on pad :input with pad :output of child :cmaf
     
     10:29:58.288 [debug] <0.1173.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.288 [debug] <0.1158.0>/ Spec #Reference<0.2846893677.1757413379.59882> status changed to linked internally
     
     10:29:58.288 [debug] <0.1158.0>/ Spec #Reference<0.2846893677.1757413379.59882> status changed to ready
     
     10:29:58.288 [debug] <0.1173.0>/:file/ Component initialized
     
     10:29:58.288 [debug] <0.1158.0>/:parser/ Got play request
     
     10:29:58.288 [debug] <0.1158.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:cmaf, :file, :parser, :payloader, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413379.59883>, #Reference<0.2846893677.1757413379.59884>, #Reference<0.2846893677.1757413379.59885>, #Reference<0.2846893677.1757413379.59886>], status: :initializing}
     
     10:29:58.288 [debug] <0.1158.0>/:parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.288 [debug] <0.1173.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.PayloaderDepayloaderTest/test-if-an-AAC-track,-after-payloading,-is-depayloaded-to-the-original-stream-2ee30206/out.aac"},
     method: start
     
     
     10:29:58.288 [debug] <0.1158.0>/:cmaf/ Got play request
     
     10:29:58.288 [debug] <0.1158.0>/:file/ Got play request
     
     10:29:58.288 [debug] <0.1158.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.288 [debug] <0.1158.0>/:payloader/ Got play request
     
     10:29:58.288 [debug] <0.1158.0>/:sink/ Got play request
     
     10:29:58.288 [debug] <0.1173.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.PayloaderDepayloaderTest/test-if-an-AAC-track,-after-payloading,-is-depayloaded-to-the-original-stream-2ee30206/out.aac"}
     
     10:29:58.289 [debug] <0.1158.0>/:parser/ received start of stream
     
     10:29:58.289 [debug] <0.1202.0>/ Starting child: name: :video_parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.289 [debug] <0.1202.0>/ subprocess supervisor Element start: :video_parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15},
     method: start
     
     
     10:29:58.289 [debug] <0.1202.0>/:video_parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}
     
     10:29:58.289 [debug] <0.1158.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.289 [debug] <0.1202.0>/:video_parser/ Component initialized
     
     10:29:58.289 [debug] <0.1202.0>/:video_file/ Component initialized
     
     10:29:58.289 [debug] <0.1158.0>/:payloader/ received start of stream
     
     10:29:58.289 [debug] <0.1202.0>/ Starting child: name: :video_payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.289 [debug] <0.1158.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 10, 255, 225, 0, 25, 103, 100, 0, 10, 172, 217, 71, 63, 158, 124, 4, 64, 0, 0, 3, 0, 64, 0, 0, 15, 3, 196, 137, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.289 [debug] <0.1202.0>/ subprocess supervisor Element start: :video_payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.289 [debug] <0.1202.0>/:video_payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.289 [debug] <0.1202.0>/:video_payloader/ Component initialized
     
     10:29:58.289 [debug] <0.1158.0>/:cmaf/ Sending stream format through pad :output
     Stream format: %Membrane.CMAF.Track{content_type: :video, header: <<0, 0, 0, 24, 102, 116, 121, 112, 105, 115, 111, 53, 0, 0, 2, 0, 105, 115, 111, 54, 109, 112, 52, 49, 0, 0, 2, 137, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, ...>>, resolution: {100, 100}, codecs: %{avc1: %{compatibility: 0, level: 10, profile: 100}}}
     
     
     10:29:58.289 [debug] <0.1158.0>/:cmaf/ received start of stream
     
     10:29:58.289 [debug] <0.1202.0>/ Starting children: [%Membrane.ChildEntry{name: :audio_file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413377.57538>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :audio_parser, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413377.57538>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :audio_payloader, module: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413377.57538>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.289 [debug] <0.1202.0>/ Starting child: name: :audio_file, module: Membrane.File.Source in children group: nil
     
     10:29:58.289 [debug] <0.1202.0>/ subprocess supervisor Element start: :audio_file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.289 [debug] <0.1202.0>/:audio_file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}
     
     10:29:58.290 [debug] <0.1173.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57068> startup: initializing, dependent specs: []
     
     10:29:58.290 [debug] <0.1173.0>/ Setup
     
     10:29:58.290 [debug] <0.1173.0>/ Component initialized
     
     10:29:58.290 [debug] <0.1173.0>/ Parent play
     
     10:29:58.290 [debug] <0.1173.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57068> startup: initializing, dependent specs: []
     
     10:29:58.290 [debug] <0.1173.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57068> startup: initializing, dependent specs: []
     
     10:29:58.290 [debug] <0.1173.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57068> startup: initializing, dependent specs: []
     
     10:29:58.290 [debug] <0.1173.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57068> startup: initializing, dependent specs: []
     
     10:29:58.290 [debug] <0.1173.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57068> startup: initializing, dependent specs: []
     
     10:29:58.291 [debug] <0.1202.0>/ Starting child: name: :audio_parser, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.291 [debug] <0.1202.0>/ subprocess supervisor Element start: :audio_parser
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS},
     method: start
     
     
     10:29:58.291 [debug] <0.1202.0>/:audio_parser/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}
     
     10:29:58.291 [debug] <0.1202.0>/:audio_parser/ Component initialized
     
     10:29:58.291 [debug] <0.1202.0>/ Starting child: name: :audio_payloader, module: Membrane.MP4.Payloader.AAC in children group: nil
     
     10:29:58.291 [debug] <0.1202.0>/ subprocess supervisor Element start: :audio_payloader
     node: ,
     module: Membrane.MP4.Payloader.AAC,
     element options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0},
     method: start
     
     
     10:29:58.291 [debug] <0.1202.0>/:audio_payloader/ Initializing element: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}
     
     10:29:58.291 [debug] <0.1202.0>/:audio_payloader/ Component initialized
     
     10:29:58.292 [debug] <0.1202.0>/ Starting children: [%Membrane.ChildEntry{name: :muxer, module: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413377.57538>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_two_tracks_fast_start.mp4"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413377.57538>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.292 [debug] <0.1202.0>/ Starting child: name: :muxer, module: Membrane.MP4.Muxer.ISOM in children group: nil
     
     10:29:58.292 [debug] <0.1202.0>/ subprocess supervisor Element start: :muxer
     node: ,
     module: Membrane.MP4.Muxer.ISOM,
     element options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000},
     method: start
     
     
     10:29:58.292 [debug] <0.1202.0>/:muxer/ Initializing element: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}
     
     10:29:58.292 [debug] <0.1202.0>/:muxer/ Component initialized
     
     10:29:58.292 [debug] <0.1202.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.292 [debug] <0.1202.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/tmp/out_two_tracks_fast_start.mp4"},
     method: start
     
     
     10:29:58.292 [debug] <0.1202.0>/:audio_file/ Component initialized
     
     10:29:58.292 [debug] <0.1202.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_two_tracks_fast_start.mp4"}
     
     10:29:58.292 [debug] <0.1173.0>/:sink/ Component initialized
     
     10:29:58.292 [debug] <0.1173.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57068> startup: initializing, dependent specs: []
     
     10:29:58.292 [debug] <0.1173.0>/ Spec #Reference<0.2846893677.1757413380.57068> status changed to initialized
     
     10:29:58.292 [debug] <0.1173.0>/ Spec #Reference<0.2846893677.1757413380.57068> status changed to linking internally
     
     10:29:58.292 [debug] <0.1202.0>/ Proceeding spec #Reference<0.2846893677.1757413377.57538> startup: initializing, dependent specs: []
     
     10:29:58.292 [debug] <0.1202.0>/ Setup
     
     10:29:58.292 [debug] <0.1202.0>/ Component initialized
     
     10:29:58.292 [debug] <0.1202.0>/ Parent play
     
     10:29:58.293 [debug] <0.1202.0>/ Proceeding spec #Reference<0.2846893677.1757413377.57538> startup: initializing, dependent specs: []
     
     10:29:58.293 [debug] <0.1202.0>/ Proceeding spec #Reference<0.2846893677.1757413377.57538> startup: initializing, dependent specs: []
     
     10:29:58.293 [debug] <0.1202.0>/ Proceeding spec #Reference<0.2846893677.1757413377.57538> startup: initializing, dependent specs: []
     
     10:29:58.293 [debug] <0.1202.0>/ Proceeding spec #Reference<0.2846893677.1757413377.57538> startup: initializing, dependent specs: []
     
     10:29:58.293 [debug] <0.1202.0>/ Proceeding spec #Reference<0.2846893677.1757413377.57538> startup: initializing, dependent specs: []
     
     10:29:58.293 [debug] <0.1202.0>/ Proceeding spec #Reference<0.2846893677.1757413377.57538> startup: initializing, dependent specs: []
     
     10:29:58.293 [debug] <0.1202.0>/ Proceeding spec #Reference<0.2846893677.1757413377.57538> startup: initializing, dependent specs: []
     
     10:29:58.292 [debug] <0.1173.0>/:file/ Element handle link on pad :output with pad :input of child {:parser, :in}
     
     10:29:58.294 [debug] <0.1173.0>/{:parser, :in}/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.294 [debug] <0.1173.0>/{:parser, :in}/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.294 [debug] <0.1158.0>/:sink/ received start of stream
     
     10:29:58.294 [debug] <0.1173.0>/:payloader/ Element handle link on pad :input with pad :output of child {:parser, :in}
     
     10:29:58.295 [debug] <0.1173.0>/:payloader/ Element handle link on pad :output with pad :input of child :depayloader
     
     10:29:58.295 [debug] <0.1202.0>/:sink/ Component initialized
     
     10:29:58.295 [debug] <0.1173.0>/:depayloader/ Element handle link on pad :input with pad :output of child :payloader
     
     10:29:58.295 [debug] <0.1202.0>/ Proceeding spec #Reference<0.2846893677.1757413377.57538> startup: initializing, dependent specs: []
     
     10:29:58.295 [debug] <0.1202.0>/ Spec #Reference<0.2846893677.1757413377.57538> status changed to initialized
     
     10:29:58.295 [debug] <0.1202.0>/ Spec #Reference<0.2846893677.1757413377.57538> status changed to linking internally
     
     10:29:58.295 [debug] <0.1202.0>/:video_file/ Element handle link on pad :output with pad :input of child :video_parser
     
     10:29:58.295 [debug] <0.1202.0>/:video_parser/ Element handle link on pad :input with pad :output of child :video_file
     
     10:29:58.295 [debug] <0.1173.0>/:depayloader/ Element handle link on pad :output with pad :input of child {:parser, :out}
     
     10:29:58.295 [debug] <0.1202.0>/:video_parser/ Element handle link on pad :output with pad :input of child :video_payloader
     
     10:29:58.295 [debug] <0.1173.0>/{:parser, :out}/ Element handle link on pad :input with pad :output of child :depayloader
     
     10:29:58.295 [debug] <0.1202.0>/:video_payloader/ Element handle link on pad :input with pad :output of child :video_parser
     
     10:29:58.295 [debug] <0.1173.0>/{:parser, :out}/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.295 [debug] <0.1173.0>/:sink/ Element handle link on pad :input with pad :output of child {:parser, :out}
     
     10:29:58.295 [debug] <0.1202.0>/:audio_file/ Element handle link on pad :output with pad :input of child :audio_parser
     
     10:29:58.295 [debug] <0.1202.0>/:audio_parser/ Element handle link on pad :input with pad :output of child :audio_file
     
     10:29:58.295 [debug] <0.1173.0>/ Spec #Reference<0.2846893677.1757413380.57068> status changed to linked internally
     
     10:29:58.295 [debug] <0.1173.0>/ Spec #Reference<0.2846893677.1757413380.57068> status changed to ready
     
     10:29:58.295 [debug] <0.1173.0>/:sink/ Got play request
     
     10:29:58.295 [debug] <0.1173.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:depayloader, :file, :payloader, :sink, {:parser, :in}, {:parser, :out}]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413380.57069>, #Reference<0.2846893677.1757413380.57070>, #Reference<0.2846893677.1757413380.57071>, #Reference<0.2846893677.1757413380.57072>, #Reference<0.2846893677.1757413380.57073>], status: :initializing}
     
     10:29:58.295 [debug] <0.1173.0>/:payloader/ Got play request
     
     10:29:58.295 [debug] <0.1173.0>/:depayloader/ Got play request
     
     10:29:58.295 [debug] <0.1173.0>/{:parser, :out}/ Got play request
     
     10:29:58.295 [debug] <0.1173.0>/:depayloader/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.295 [debug] <0.1173.0>/:file/ Got play request
     
     10:29:58.295 [debug] <0.1173.0>/{:parser, :in}/ Got play request
     
     10:29:58.295 [debug] <0.1173.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.295 [debug] <0.1173.0>/{:parser, :in}/ received start of stream
     
     10:29:58.295 [debug] <0.1202.0>/:audio_parser/ Element handle link on pad :output with pad :input of child :audio_payloader
     
     10:29:58.295 [debug] <0.1202.0>/:audio_payloader/ Element handle link on pad :input with pad :output of child :audio_parser
     
     10:29:58.295 [debug] <0.1158.0>/ Removing children: [:cmaf, :file, :parser, :payloader, :sink]
     
     10:29:58.295 [debug] <0.1173.0>/{:parser, :in}/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.295 [debug] <0.1158.0>/:cmaf/ Received terminate request
     
     10:29:58.295 [debug] <0.1158.0>/:parser/ Received terminate request
     
     10:29:58.296 [debug] <0.1158.0>/:cmaf/ Terminating with reason :normal
     
     10:29:58.296 [debug] <0.1158.0>/:parser/ Terminating with reason :normal
     
     10:29:58.296 [debug] <0.1158.0>/:file/ Received terminate request
     
     10:29:58.296 [debug] <0.1202.0>/:muxer/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.296 [debug] <0.1158.0>/:sink/ Received terminate request
     
     10:29:58.296 [debug] <0.1158.0>/:payloader/ Received terminate request
     
     10:29:58.296 [debug] <0.1158.0>/:sink/ Terminating with reason :normal
     
     10:29:58.296 [debug] <0.1158.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.296 [debug] <0.1173.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.296 [debug] <0.1173.0>/:payloader/ received start of stream
     
     10:29:58.296 [debug] <0.1173.0>/:depayloader/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.296 [debug] <0.1202.0>/:sink/ Element handle link on pad :input with pad :output of child :muxer
     
     10:29:58.296 [debug] <0.1173.0>/:depayloader/ received start of stream
     
     10:29:58.296 [debug] <0.1202.0>/:video_payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413384.56098>} of child :muxer
     
     10:29:58.296 [debug] <0.1173.0>/{:parser, :out}/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :ADTS}
     
     
     10:29:58.296 [debug] <0.1202.0>/:muxer/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413384.56098>} with pad :output of child :video_payloader
     
     10:29:58.296 [debug] <0.1173.0>/{:parser, :out}/ received start of stream
     
     10:29:58.296 [debug] <0.1173.0>/:sink/ received start of stream
     
     10:29:58.296 [debug] <0.1202.0>/:audio_payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413384.56099>} of child :muxer
     
     10:29:58.296 [debug] <0.1202.0>/:muxer/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413384.56099>} with pad :output of child :audio_payloader
     
     10:29:58.296 [debug] <0.1202.0>/ Spec #Reference<0.2846893677.1757413377.57538> status changed to linked internally
     
     10:29:58.296 [debug] <0.1202.0>/ Spec #Reference<0.2846893677.1757413377.57538> status changed to ready
     
     10:29:58.296 [debug] <0.1202.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:audio_file, :audio_parser, :audio_payloader, :muxer, :sink, :video_file, :video_parser, :video_payloader]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413377.57539>, #Reference<0.2846893677.1757413377.57540>, #Reference<0.2846893677.1757413377.57541>, #Reference<0.2846893677.1757413377.57542>, #Reference<0.2846893677.1757413377.57543>, #Reference<0.2846893677.1757413377.57544>, #Reference<0.2846893677.1757413377.57545>], status: :initializing}
     
     10:29:58.296 [debug] <0.1158.0>/:file/ Terminating with reason :normal
     
     10:29:58.296 [debug] <0.1202.0>/:audio_file/ Got play request
     
     10:29:58.296 [debug] <0.1202.0>/:video_file/ Got play request
     
     10:29:58.296 [debug] <0.1202.0>/:audio_file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.296 [debug] <0.1202.0>/:audio_parser/ Got play request
     
     10:29:58.296 [debug] <0.1202.0>/:video_file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.296 [debug] <0.1202.0>/:video_parser/ Got play request
     
     10:29:58.296 [debug] <0.1202.0>/:muxer/ Got play request
     
     10:29:58.296 [debug] <0.1202.0>/:video_parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.296 [debug] <0.1202.0>/:muxer/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: Membrane.MP4, type: :bytestream}
     
     
     10:29:58.296 [debug] <0.1202.0>/:audio_payloader/ Got play request
     
     10:29:58.296 [debug] <0.1202.0>/:sink/ Got play request
     
     10:29:58.296 [debug] <0.1202.0>/:sink/ received start of stream
     
     10:29:58.296 [debug] <0.1202.0>/:video_payloader/ Got play request
     
     10:29:58.297 [debug] <0.1158.0>/:cmaf/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.297 [debug] <0.1158.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.297 [debug] <0.1202.0>/:audio_parser/ received start of stream
     
     10:29:58.297 [debug] <0.1158.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.297 [debug] <0.1158.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.297 [debug] <0.1158.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.297 [debug] <0.1158.0>/ Pipeline supervisor got exit from a linked process, pipeline already dead, waiting for subprocess supervisor to exit
     
     10:29:58.297 [debug] <0.1158.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.297 [debug] <0.1202.0>/:video_parser/ received start of stream
     
     10:29:58.297 [debug] <0.1158.0>/:file/ subprocess supervisor exiting
     
     10:29:58.297 [debug] <0.1158.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.297 [debug] <0.1202.0>/:video_parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.297 [debug] <0.1202.0>/:video_payloader/ received start of stream
     
     10:29:58.297 [debug] <0.1202.0>/:video_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 10, 255, 225, 0, 25, 103, 100, 0, 10, 172, 217, 71, 63, 158, 124, 4, 64, 0, 0, 3, 0, 64, 0, 0, 15, 3, 196, 137, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.297 [debug] <0.1202.0>/:audio_parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.297 [debug] <0.1202.0>/:muxer/ received start of stream
     
     10:29:58.298 [debug] <0.1202.0>/:audio_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.298 [debug] <0.1202.0>/:audio_payloader/ received start of stream
     
     10:29:58.298 [debug] <0.1202.0>/:muxer/ received start of stream
     
     10:29:58.299 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:audio_payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:audio_parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:audio_source, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :audio_parser, from_pad: :output, from_pad_props: %{options: []}, to: :audio_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_source, from_pad: :output, from_pad_props: %{options: []}, to: :audio_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :audio_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:video_payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:video_parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:video_source, %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :video_parser, from_pad: :output, from_pad_props: %{options: []}, to: :video_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_source, from_pad: :output, from_pad_props: %{options: []}, to: :video_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :video_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:media_finalization_sender, %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.1301.0>}, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: 400000000}, %{get_if_exists: false}}], links: [%{from: :media_finalization_sender, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :media_finalization_sender, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}, %Membrane.ChildrenSpec.Builder{children: [{:audio_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.1301.0>, tag: :audio}, %{get_if_exists: false}}], links: [%{from: :audio_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :audio_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}, %Membrane.ChildrenSpec.Builder{children: [{:video_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.1301.0>, tag: :video}, %{get_if_exists: false}}], links: [%{from: :video_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :video_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}], test_process: #PID<0.1301.0>],
     process options: []
     
     
     10:29:58.300 [debug] <0.1305.0>/ New spec with ref: #Reference<0.2846893677.1757413378.57859>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:audio_payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:audio_parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:audio_source, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :audio_parser, from_pad: :output, from_pad_props: %{options: []}, to: :audio_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_source, from_pad: :output, from_pad_props: %{options: []}, to: :audio_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :audio_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:video_payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:video_parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:video_source, %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :video_parser, from_pad: :output, from_pad_props: %{options: []}, to: :video_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_source, from_pad: :output, from_pad_props: %{options: []}, to: :video_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :video_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:media_finalization_sender, %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.1301.0>}, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: 400000000}, %{get_if_exists: false}}], links: [%{from: :media_finalization_sender, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :media_finalization_sender, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}, %Membrane.ChildrenSpec.Builder{children: [{:audio_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.1301.0>, tag: :audio}, %{get_if_exists: false}}], links: [%{from: :audio_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :audio_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}, %Membrane.ChildrenSpec.Builder{children: [{:video_limiter, %Membrane.MP4.BufferLimiter{parent: #PID<0.1301.0>, tag: :video}, %{get_if_exists: false}}], links: [%{from: :video_limiter, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :video_limiter, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :cmaf}]
     
     
     10:29:58.300 [debug] <0.1305.0>/ Starting children: [%Membrane.ChildEntry{name: :audio_source, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413378.57859>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :audio_parser, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413378.57859>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :audio_payloader, module: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413378.57859>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.300 [debug] <0.1305.0>/ Starting child: name: :audio_source, module: Membrane.File.Source in children group: nil
     
     10:29:58.300 [debug] <0.1305.0>/ subprocess supervisor Element start: :audio_source
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.300 [debug] <0.1305.0>/:audio_source/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}
     
     10:29:58.303 [debug] <0.1305.0>/ Starting child: name: :audio_parser, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.303 [debug] <0.1305.0>/ subprocess supervisor Element start: :audio_parser
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS},
     method: start
     
     
     10:29:58.303 [debug] <0.1305.0>/:audio_parser/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}
     
     10:29:58.303 [debug] <0.1305.0>/:audio_parser/ Component initialized
     
     10:29:58.303 [debug] <0.1305.0>/ Starting child: name: :audio_payloader, module: Membrane.MP4.Payloader.AAC in children group: nil
     
     10:29:58.303 [debug] <0.1305.0>/ subprocess supervisor Element start: :audio_payloader
     node: ,
     module: Membrane.MP4.Payloader.AAC,
     element options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0},
     method: start
     
     
     10:29:58.303 [debug] <0.1305.0>/:audio_payloader/ Initializing element: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}
     
     10:29:58.303 [debug] <0.1305.0>/:audio_payloader/ Component initialized
     
     10:29:58.303 [debug] <0.1305.0>/ Starting children: [%Membrane.ChildEntry{name: :video_source, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413378.57859>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413378.57859>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413378.57859>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.303 [debug] <0.1305.0>/ Starting child: name: :video_source, module: Membrane.File.Source in children group: nil
     
     10:29:58.303 [debug] <0.1305.0>/ subprocess supervisor Element start: :video_source
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.303 [debug] <0.1305.0>/:video_source/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video_gop_30.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.304 [debug] <0.1305.0>/:audio_source/ Component initialized
     
     10:29:58.305 [debug] <0.1305.0>/ Starting child: name: :video_parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.305 [debug] <0.1305.0>/ subprocess supervisor Element start: :video_parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0},
     method: start
     
     
     10:29:58.305 [debug] <0.1305.0>/:video_parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}
     
     10:29:58.305 [debug] <0.1305.0>/:video_parser/ Component initialized
     
     10:29:58.305 [debug] <0.1305.0>/ Starting child: name: :video_payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.305 [debug] <0.1305.0>/ subprocess supervisor Element start: :video_payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.305 [debug] <0.1305.0>/:video_payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.305 [debug] <0.1305.0>/:video_payloader/ Component initialized
     
     10:29:58.306 [debug] <0.1305.0>/ Starting children: [%Membrane.ChildEntry{name: :cmaf, module: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: 400000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413378.57859>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :media_finalization_sender, module: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender, options: %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.1301.0>}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413378.57859>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413378.57859>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.306 [debug] <0.1305.0>/ Starting child: name: :cmaf, module: Membrane.MP4.Muxer.CMAF in children group: nil
     
     10:29:58.306 [debug] <0.1305.0>/ subprocess supervisor Element start: :cmaf
     node: ,
     module: Membrane.MP4.Muxer.CMAF,
     element options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: 400000000},
     method: start
     
     
     10:29:58.306 [debug] <0.1305.0>/:cmaf/ Initializing element: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 6000000000, chunk_target_duration: 400000000}
     
     10:29:58.306 [debug] <0.1305.0>/:cmaf/ Component initialized
     
     10:29:58.306 [debug] <0.1305.0>/ Starting child: name: :media_finalization_sender, module: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender in children group: nil
     
     10:29:58.306 [debug] <0.1305.0>/ subprocess supervisor Element start: :media_finalization_sender
     node: ,
     module: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender,
     element options: %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.1301.0>},
     method: start
     
     
     10:29:58.306 [debug] <0.1305.0>/:media_finalization_sender/ Initializing element: Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender, options: %Membrane.MP4.Muxer.CMAF.RequestMediaFinalizeSender{parent: #PID<0.1301.0>}
     
     10:29:58.306 [debug] <0.1305.0>/:media_finalization_sender/ Component initialized
     
     10:29:58.306 [debug] <0.1305.0>/ Starting child: name: :sink, module: Membrane.Testing.Sink in children group: nil
     
     10:29:58.306 [debug] <0.1305.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.Testing.Sink,
     element options: %Membrane.Testing.Sink{autodemand: true},
     method: start
     
     
     10:29:58.306 [debug] <0.1305.0>/:video_source/ Component initialized
     
     10:29:58.306 [debug] <0.1305.0>/:sink/ Initializing element: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}
     
     10:29:58.306 [debug] <0.1305.0>/:sink/ Component initialized
     
     10:29:58.307 [debug] <0.1305.0>/ Starting children: [%Membrane.ChildEntry{name: :audio_limiter, module: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1301.0>, tag: :audio}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413378.57859>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.307 [debug] <0.1305.0>/ Starting child: name: :audio_limiter, module: Membrane.MP4.BufferLimiter in children group: nil
     
     10:29:58.307 [debug] <0.1305.0>/ subprocess supervisor Element start: :audio_limiter
     node: ,
     module: Membrane.MP4.BufferLimiter,
     element options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1301.0>, tag: :audio},
     method: start
     
     
     10:29:58.307 [debug] <0.1305.0>/:audio_limiter/ Initializing element: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1301.0>, tag: :audio}
     
     10:29:58.307 [debug] <0.1305.0>/:audio_limiter/ Component initialized
     
     10:29:58.307 [debug] <0.1305.0>/ Starting children: [%Membrane.ChildEntry{name: :video_limiter, module: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1301.0>, tag: :video}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413378.57859>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.307 [debug] <0.1305.0>/ Starting child: name: :video_limiter, module: Membrane.MP4.BufferLimiter in children group: nil
     
     10:29:58.307 [debug] <0.1305.0>/ subprocess supervisor Element start: :video_limiter
     node: ,
     module: Membrane.MP4.BufferLimiter,
     element options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1301.0>, tag: :video},
     method: start
     
     
     10:29:58.307 [debug] <0.1305.0>/:video_limiter/ Initializing element: Membrane.MP4.BufferLimiter, options: %Membrane.MP4.BufferLimiter{parent: #PID<0.1301.0>, tag: :video}
     
     10:29:58.307 [debug] <0.1305.0>/:video_limiter/ Component initialized
     
     10:29:58.307 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.307 [debug] <0.1305.0>/ Setup
     
     10:29:58.307 [debug] <0.1305.0>/ Component initialized
     
     10:29:58.307 [debug] <0.1305.0>/ Parent play
     
     10:29:58.307 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.307 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.307 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.307 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.307 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.307 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.307 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.307 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.308 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.308 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.308 [debug] <0.1305.0>/ Proceeding spec #Reference<0.2846893677.1757413378.57859> startup: initializing, dependent specs: []
     
     10:29:58.308 [debug] <0.1305.0>/ Spec #Reference<0.2846893677.1757413378.57859> status changed to initialized
     
     10:29:58.308 [debug] <0.1305.0>/ Spec #Reference<0.2846893677.1757413378.57859> status changed to linking internally
     
     10:29:58.308 [debug] <0.1305.0>/:audio_source/ Element handle link on pad :output with pad :input of child :audio_parser
     
     10:29:58.308 [debug] <0.1305.0>/:audio_parser/ Element handle link on pad :input with pad :output of child :audio_source
     
     10:29:58.308 [debug] <0.1305.0>/:audio_parser/ Element handle link on pad :output with pad :input of child :audio_payloader
     
     10:29:58.308 [debug] <0.1305.0>/:audio_payloader/ Element handle link on pad :input with pad :output of child :audio_parser
     
     10:29:58.309 [debug] <0.1305.0>/:video_source/ Element handle link on pad :output with pad :input of child :video_parser
     
     10:29:58.309 [debug] <0.1305.0>/:video_parser/ Element handle link on pad :input with pad :output of child :video_source
     
     10:29:58.309 [debug] <0.1305.0>/:video_parser/ Element handle link on pad :output with pad :input of child :video_payloader
     
     10:29:58.309 [debug] <0.1305.0>/:video_payloader/ Element handle link on pad :input with pad :output of child :video_parser
     
     10:29:58.309 [debug] <0.1305.0>/:cmaf/ Element handle link on pad :output with pad :input of child :media_finalization_sender
     
     10:29:58.309 [debug] <0.1305.0>/:media_finalization_sender/ Element handle link on pad :input with pad :output of child :cmaf
     
     10:29:58.310 [debug] <0.1305.0>/:media_finalization_sender/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.310 [debug] <0.1305.0>/:sink/ Element handle link on pad :input with pad :output of child :media_finalization_sender
     
     10:29:58.310 [debug] <0.1305.0>/:audio_payloader/ Element handle link on pad :output with pad :input of child :audio_limiter
     
     10:29:58.310 [debug] <0.1305.0>/:audio_limiter/ Element handle link on pad :input with pad :output of child :audio_payloader
     
     10:29:58.310 [debug] <0.1305.0>/:audio_limiter/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56600>} of child :cmaf
     
     10:29:58.310 [debug] <0.1305.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56600>} with pad :output of child :audio_limiter
     
     10:29:58.310 [debug] <0.1305.0>/:video_payloader/ Element handle link on pad :output with pad :input of child :video_limiter
     
     10:29:58.310 [debug] <0.1305.0>/:video_limiter/ Element handle link on pad :input with pad :output of child :video_payloader
     
     10:29:58.311 [debug] <0.1305.0>/:video_limiter/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56601>} of child :cmaf
     
     10:29:58.311 [debug] <0.1305.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56601>} with pad :output of child :video_limiter
     
     10:29:58.311 [debug] <0.1305.0>/ Spec #Reference<0.2846893677.1757413378.57859> status changed to linked internally
     
     10:29:58.311 [debug] <0.1305.0>/ Spec #Reference<0.2846893677.1757413378.57859> status changed to ready
     
     10:29:58.311 [debug] <0.1305.0>/:audio_parser/ Got play request
     
     10:29:58.311 [debug] <0.1305.0>/:audio_limiter/ Got play request
     
     10:29:58.311 [debug] <0.1305.0>/:media_finalization_sender/ Got play request
     
     10:29:58.311 [debug] <0.1305.0>/:media_finalization_sender/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.311 [debug] <0.1305.0>/:audio_source/ Got play request
     
     10:29:58.311 [debug] <0.1305.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:audio_limiter, :audio_parser, :audio_payloader, :audio_source, :cmaf, :media_finalization_sender, :sink, :video_limiter, :video_parser, :video_payloader, :video_source]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413378.57860>, #Reference<0.2846893677.1757413378.57861>, #Reference<0.2846893677.1757413378.57862>, #Reference<0.2846893677.1757413378.57863>, #Reference<0.2846893677.1757413378.57864>, #Reference<0.2846893677.1757413378.57865>, #Reference<0.2846893677.1757413378.57866>, #Reference<0.2846893677.1757413378.57867>, #Reference<0.2846893677.1757413378.57868>, #Reference<0.2846893677.1757413378.57869>], status: :initializing}
     
     10:29:58.311 [debug] <0.1305.0>/:video_limiter/ Got play request
     
     10:29:58.311 [debug] <0.1305.0>/:sink/ Got play request
     
     10:29:58.311 [debug] <0.1305.0>/:audio_source/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.311 [debug] <0.1305.0>/:video_source/ Got play request
     
     10:29:58.311 [debug] <0.1305.0>/:cmaf/ Got play request
     
     10:29:58.311 [debug] <0.1305.0>/:video_source/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.311 [debug] <0.1305.0>/:video_payloader/ Got play request
     
     10:29:58.311 [debug] <0.1305.0>/:video_parser/ Got play request
     
     10:29:58.311 [debug] <0.1305.0>/:video_parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.311 [debug] <0.1305.0>/:audio_payloader/ Got play request
     
     10:29:58.311 [debug] <0.1305.0>/:video_parser/ received start of stream
     
     10:29:58.311 [debug] <0.1305.0>/:audio_parser/ received start of stream
     
     10:29:58.311 [debug] <0.1305.0>/:audio_parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.311 [debug] <0.1305.0>/:audio_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.311 [debug] <0.1305.0>/:audio_payloader/ received start of stream
     
     10:29:58.311 [debug] <0.1305.0>/:audio_limiter/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.311 [debug] <0.1305.0>/:video_parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :unknown, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.311 [debug] <0.1305.0>/:audio_limiter/ received start of stream
     
     10:29:58.312 [debug] <0.1305.0>/:cmaf/ received start of stream
     
     10:29:58.312 [debug] <0.1305.0>/:video_payloader/ received start of stream
     
     10:29:58.312 [debug] <0.1305.0>/:video_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 244, 0, 10, 255, 225, 0, 25, 103, 244, 0, 10, 145, 155, 40, 231, 241, 177, 184, 8, 128, 0, 0, 3, 0, 128, 0, 0, 30, 7, 137, 18, 203, 1, 0, 6, 104, 235, 227, 196, 72, 68>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.312 [debug] <0.1305.0>/:video_limiter/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 244, 0, 10, 255, 225, 0, 25, 103, 244, 0, 10, 145, 155, 40, 231, 241, 177, 184, 8, 128, 0, 0, 3, 0, 128, 0, 0, 30, 7, 137, 18, 203, 1, 0, 6, 104, 235, 227, 196, 72, 68>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.312 [debug] <0.1305.0>/:video_limiter/ received start of stream
     
     10:29:58.312 [debug] <0.1305.0>/:cmaf/ Sending stream format through pad :output
     Stream format: %Membrane.CMAF.Track{content_type: [:audio, :video], header: <<0, 0, 0, 24, 102, 116, 121, 112, 105, 115, 111, 53, 0, 0, 2, 0, 105, 115, 111, 54, 109, 112, 52, 49, 0, 0, 4, 81, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, ...>>, resolution: {100, 100}, codecs: %{avc1: %{compatibility: 0, level: 10, profile: 244}, mp4a: %{aot_id: 2, channels: 1, frequency: 44100}}}
     
     
     10:29:58.312 [debug] <0.1305.0>/:cmaf/ received start of stream
     
     10:29:58.313 [debug] <0.1305.0>/:media_finalization_sender/ Sending stream format through pad :output
     Stream format: %Membrane.CMAF.Track{content_type: [:audio, :video], header: <<0, 0, 0, 24, 102, 116, 121, 112, 105, 115, 111, 53, 0, 0, 2, 0, 105, 115, 111, 54, 109, 112, 52, 49, 0, 0, 4, 81, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, ...>>, resolution: {100, 100}, codecs: %{avc1: %{compatibility: 0, level: 10, profile: 244}, mp4a: %{aot_id: 2, channels: 1, frequency: 44100}}}
     
     
     10:29:58.313 [debug] <0.1305.0>/:media_finalization_sender/ received start of stream
     
     10:29:58.313 [debug] <0.1305.0>/:sink/ received start of stream
     
     10:29:58.322 [debug] <0.1202.0>/ Removing children: [:audio_file, :audio_parser, :audio_payloader, :muxer, :sink, :video_file, :video_parser, :video_payloader]
     
     10:29:58.322 [debug] <0.1202.0>/:audio_payloader/ Received terminate request
     
     10:29:58.322 [debug] <0.1202.0>/:audio_file/ Received terminate request
     
     10:29:58.322 [debug] <0.1202.0>/:muxer/ Received terminate request
     
     10:29:58.322 [debug] <0.1202.0>/:video_payloader/ Received terminate request
     
     10:29:58.322 [debug] <0.1202.0>/:muxer/ Terminating with reason :normal
     
     10:29:58.322 [debug] <0.1202.0>/:video_parser/ Received terminate request
     
     10:29:58.322 [debug] <0.1202.0>/:audio_payloader/ Terminating with reason :normal
     
     10:29:58.322 [debug] <0.1202.0>/:video_payloader/ Terminating with reason :normal
     
     10:29:58.322 [debug] <0.1202.0>/:video_parser/ Terminating with reason :normal
     
     10:29:58.322 [debug] <0.1202.0>/:sink/ Received terminate request
     
     10:29:58.322 [debug] <0.1202.0>/:sink/ Terminating with reason :normal
     
     10:29:58.322 [debug] <0.1202.0>/:audio_parser/ Received terminate request
     
     10:29:58.322 [debug] <0.1202.0>/:video_file/ Received terminate request
     
     10:29:58.322 [debug] <0.1202.0>/:audio_parser/ Terminating with reason :normal
     
     10:29:58.322 [debug] <0.1202.0>/:audio_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.322 [debug] <0.1202.0>/:video_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.322 [debug] <0.1202.0>/:muxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.322 [debug] <0.1202.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.322 [debug] <0.1202.0>/:audio_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.322 [debug] <0.1202.0>/:video_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.322 [debug] <0.1202.0>/:audio_file/ Terminating with reason :normal
     
     10:29:58.322 [debug] <0.1202.0>/:video_file/ Terminating with reason :normal
     
     10:29:58.322 [debug] <0.1202.0>/:audio_file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.322 [debug] <0.1202.0>/:video_file/ subprocess supervisor exiting
     
     10:29:58.323 [debug] <0.1202.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.323 [debug] <0.1202.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.323 [debug] <0.1202.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.326 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_video.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1386.0>],
     process options: []
     
     
     10:29:58.326 [debug] <0.1390.0>/ New spec with ref: #Reference<0.2846893677.1757413383.56524>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_video.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.327 [debug] <0.1390.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.56524>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.56524>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.56524>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :muxer, module: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.56524>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_video.mp4"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.56524>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.327 [debug] <0.1390.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.327 [debug] <0.1390.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.327 [debug] <0.1390.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.327 [debug] <0.1390.0>/ Starting child: name: :parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.327 [debug] <0.1390.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15},
     method: start
     
     
     10:29:58.327 [debug] <0.1390.0>/:parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}
     
     10:29:58.327 [debug] <0.1390.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.327 [debug] <0.1390.0>/:parser/ Component initialized
     
     10:29:58.327 [debug] <0.1390.0>/:file/ Component initialized
     
     10:29:58.328 [debug] <0.1390.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.328 [debug] <0.1390.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.328 [debug] <0.1390.0>/:payloader/ Component initialized
     
     10:29:58.328 [debug] <0.1390.0>/ Starting child: name: :muxer, module: Membrane.MP4.Muxer.ISOM in children group: nil
     
     10:29:58.328 [debug] <0.1390.0>/ subprocess supervisor Element start: :muxer
     node: ,
     module: Membrane.MP4.Muxer.ISOM,
     element options: %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000},
     method: start
     
     
     10:29:58.328 [debug] <0.1390.0>/:muxer/ Initializing element: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}
     
     10:29:58.328 [debug] <0.1390.0>/:muxer/ Component initialized
     
     10:29:58.328 [debug] <0.1390.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.328 [debug] <0.1390.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/tmp/out_video.mp4"},
     method: start
     
     
     10:29:58.328 [debug] <0.1390.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_video.mp4"}
     
     10:29:58.328 [debug] <0.1390.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56524> startup: initializing, dependent specs: []
     
     10:29:58.329 [debug] <0.1390.0>/ Setup
     
     10:29:58.329 [debug] <0.1390.0>/ Component initialized
     
     10:29:58.329 [debug] <0.1390.0>/ Parent play
     
     10:29:58.329 [debug] <0.1390.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56524> startup: initializing, dependent specs: []
     
     10:29:58.329 [debug] <0.1390.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56524> startup: initializing, dependent specs: []
     
     10:29:58.329 [debug] <0.1390.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56524> startup: initializing, dependent specs: []
     
     10:29:58.329 [debug] <0.1390.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56524> startup: initializing, dependent specs: []
     
     10:29:58.329 [debug] <0.1390.0>/:sink/ Component initialized
     
     10:29:58.329 [debug] <0.1390.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56524> startup: initializing, dependent specs: []
     
     10:29:58.329 [debug] <0.1390.0>/ Spec #Reference<0.2846893677.1757413383.56524> status changed to initialized
     
     10:29:58.329 [debug] <0.1390.0>/ Spec #Reference<0.2846893677.1757413383.56524> status changed to linking internally
     
     10:29:58.329 [debug] <0.1390.0>/:file/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.329 [debug] <0.1390.0>/:parser/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.329 [debug] <0.1390.0>/:parser/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.329 [debug] <0.1390.0>/:payloader/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.329 [debug] <0.1390.0>/:payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413382.57019>} of child :muxer
     
     10:29:58.329 [debug] <0.1390.0>/:muxer/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413382.57019>} with pad :output of child :payloader
     
     10:29:58.329 [debug] <0.1390.0>/:muxer/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.329 [debug] <0.1390.0>/:sink/ Element handle link on pad :input with pad :output of child :muxer
     
     10:29:58.330 [debug] <0.1390.0>/ Spec #Reference<0.2846893677.1757413383.56524> status changed to linked internally
     
     10:29:58.330 [debug] <0.1390.0>/ Spec #Reference<0.2846893677.1757413383.56524> status changed to ready
     
     10:29:58.330 [debug] <0.1390.0>/:file/ Got play request
     
     10:29:58.330 [debug] <0.1390.0>/:muxer/ Got play request
     
     10:29:58.330 [debug] <0.1390.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:file, :muxer, :parser, :payloader, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413383.56525>, #Reference<0.2846893677.1757413383.56526>, #Reference<0.2846893677.1757413383.56527>, #Reference<0.2846893677.1757413383.56528>], status: :initializing}
     
     10:29:58.330 [debug] <0.1390.0>/:parser/ Got play request
     
     10:29:58.330 [debug] <0.1390.0>/:parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.330 [debug] <0.1390.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.330 [debug] <0.1390.0>/:payloader/ Got play request
     
     10:29:58.330 [debug] <0.1390.0>/:muxer/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: Membrane.MP4, type: :bytestream}
     
     
     10:29:58.330 [debug] <0.1390.0>/:sink/ Got play request
     
     10:29:58.330 [debug] <0.1390.0>/:sink/ received start of stream
     
     10:29:58.330 [debug] <0.1390.0>/:parser/ received start of stream
     
     10:29:58.330 [debug] <0.1305.0>/ Pipeline supervisor got exit from pipeline with reason :shutdown, stopping subprocess supervisor
     
     10:29:58.330 [debug] <0.1390.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.330 [debug] <0.1305.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.330 [debug] <0.1305.0>/:audio_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.330 [debug] <0.1390.0>/:payloader/ received start of stream
     
     10:29:58.330 [debug] <0.1390.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 10, 255, 225, 0, 25, 103, 100, 0, 10, 172, 217, 71, 63, 158, 124, 4, 64, 0, 0, 3, 0, 64, 0, 0, 15, 3, 196, 137, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.330 [debug] <0.722.0>/ Removing children: [:audio_parser, :demuxer, :depayloader_audio, :depayloader_video, :file, :sink_audio, :sink_video]
     
     10:29:58.330 [debug] <0.1305.0>/:audio_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.330 [debug] <0.722.0>/:demuxer/ Received terminate request
     
     10:29:58.330 [debug] <0.722.0>/:audio_parser/ Received terminate request
     
     10:29:58.330 [debug] <0.722.0>/:demuxer/ Terminating with reason :normal
     
     10:29:58.331 [debug] <0.722.0>/:audio_parser/ Terminating with reason :normal
     
     10:29:58.331 [debug] <0.722.0>/:depayloader_video/ Removing children: [:parser, :remote_stream_depayloader]
     
     10:29:58.331 [debug] <0.1305.0>/:cmaf/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.1305.0>/:media_finalization_sender/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.722.0>/:file/ Received terminate request
     
     10:29:58.331 [debug] <0.722.0>/:sink_audio/ Received terminate request
     
     10:29:58.331 [debug] <0.722.0>/:sink_audio/ Terminating with reason :normal
     
     10:29:58.331 [debug] <0.722.0>/:sink_video/ Received terminate request
     
     10:29:58.331 [debug] <0.722.0>/:sink_video/ Terminating with reason :normal
     
     10:29:58.331 [debug] <0.1305.0>/:video_source/ subprocess supervisor exiting
     
     10:29:58.331 [debug] <0.1305.0>/:audio_limiter/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.1305.0>/:audio_source/ subprocess supervisor exiting
     
     10:29:58.331 [debug] <0.722.0>/:sink_video/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.722.0>/:depayloader_video/:remote_stream_depayloader/ Received terminate request
     
     10:29:58.331 [debug] <0.722.0>/:demuxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.722.0>/:depayloader_video/:parser/ Received terminate request
     
     10:29:58.331 [debug] <0.722.0>/:sink_audio/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.722.0>/:depayloader_audio/ Received terminate request
     
     10:29:58.331 [debug] <0.722.0>/:audio_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.1305.0>/ Pipeline supervisor got exit from a linked process, pipeline already dead, waiting for subprocess supervisor to exit
     
     10:29:58.331 [debug] <0.1305.0>/:video_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.1305.0>/:video_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.1305.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.1305.0>/:video_limiter/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.722.0>/:depayloader_video/:remote_stream_depayloader/ Terminating with reason :normal
     
     10:29:58.331 [debug] <0.722.0>/:depayloader_audio/ Terminating with reason :normal
     
     10:29:58.331 [debug] <0.722.0>/:depayloader_video/:parser/ Terminating with reason :normal
     
     10:29:58.331 [debug] <0.1390.0>/:muxer/ received start of stream
     
     10:29:58.331 [debug] <0.722.0>/:depayloader_audio/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.722.0>/:depayloader_video/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.331 [debug] <0.722.0>/:depayloader_video/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.332 [debug] <0.722.0>/:depayloader_video/:remote_stream_depayloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.332 [debug] <0.1305.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.332 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1444.0>],
     process options: []
     
     
     10:29:58.333 [debug] <0.1448.0>/ New spec with ref: #Reference<0.2846893677.1757413382.57076>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.333 [debug] <0.722.0>/:file/ Terminating with reason :normal
     
     10:29:58.334 [debug] <0.722.0>/:file/ subprocess supervisor exiting
     
     10:29:58.334 [debug] <0.1448.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.57076>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.57076>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.57076>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :cmaf, module: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.57076>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.57076>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.334 [debug] <0.1448.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.334 [debug] <0.1448.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.334 [debug] <0.722.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.334 [debug] <0.722.0>/ subprocess supervisor exiting
     
     10:29:58.334 [debug] <0.722.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.335 [debug] <0.1448.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}
     
     10:29:58.335 [debug] <0.1448.0>/ Starting child: name: :parser, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.336 [debug] <0.1448.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS},
     method: start
     
     
     10:29:58.336 [debug] <0.1448.0>/:parser/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}
     
     10:29:58.336 [debug] <0.1448.0>/:parser/ Component initialized
     
     10:29:58.336 [debug] <0.1448.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.AAC in children group: nil
     
     10:29:58.336 [debug] <0.1448.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.AAC,
     element options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0},
     method: start
     
     
     10:29:58.336 [debug] <0.1448.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}
     
     10:29:58.336 [debug] <0.1448.0>/:payloader/ Component initialized
     
     10:29:58.336 [debug] <0.1448.0>/ Starting child: name: :cmaf, module: Membrane.MP4.Muxer.CMAF in children group: nil
     
     10:29:58.336 [debug] <0.1448.0>/ subprocess supervisor Element start: :cmaf
     node: ,
     module: Membrane.MP4.Muxer.CMAF,
     element options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil},
     method: start
     
     
     10:29:58.336 [debug] <0.1448.0>/:cmaf/ Initializing element: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: nil}
     
     10:29:58.336 [debug] <0.1448.0>/:cmaf/ Component initialized
     
     10:29:58.336 [debug] <0.1448.0>/ Starting child: name: :sink, module: Membrane.Testing.Sink in children group: nil
     
     10:29:58.336 [debug] <0.1448.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.Testing.Sink,
     element options: %Membrane.Testing.Sink{autodemand: true},
     method: start
     
     
     10:29:58.336 [debug] <0.1448.0>/:sink/ Initializing element: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}
     
     10:29:58.336 [debug] <0.1448.0>/:sink/ Component initialized
     
     10:29:58.336 [debug] <0.1448.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57076> startup: initializing, dependent specs: []
     
     10:29:58.336 [debug] <0.1448.0>/ Setup
     
     10:29:58.336 [debug] <0.1448.0>/ Component initialized
     
     10:29:58.336 [debug] <0.1448.0>/ Parent play
     
     10:29:58.336 [debug] <0.1448.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57076> startup: initializing, dependent specs: []
     
     10:29:58.336 [debug] <0.1448.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57076> startup: initializing, dependent specs: []
     
     10:29:58.336 [debug] <0.1448.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57076> startup: initializing, dependent specs: []
     
     10:29:58.336 [debug] <0.1448.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57076> startup: initializing, dependent specs: []
     
     10:29:58.337 [debug] <0.1448.0>/:file/ Component initialized
     
     10:29:58.337 [debug] <0.1448.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57076> startup: initializing, dependent specs: []
     
     10:29:58.337 [debug] <0.1448.0>/ Spec #Reference<0.2846893677.1757413382.57076> status changed to initialized
     
     10:29:58.337 [debug] <0.1448.0>/ Spec #Reference<0.2846893677.1757413382.57076> status changed to linking internally
     
     10:29:58.337 [debug] <0.1448.0>/:file/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.337 [debug] <0.1448.0>/:parser/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.337 [debug] <0.1448.0>/:parser/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.337 [debug] <0.1448.0>/:payloader/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.338 [debug] <0.1448.0>/:payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413382.57279>} of child :cmaf
     
     10:29:58.338 [debug] <0.1448.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413382.57279>} with pad :output of child :payloader
     
     10:29:58.338 [debug] <0.1448.0>/:cmaf/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.338 [debug] <0.1448.0>/:sink/ Element handle link on pad :input with pad :output of child :cmaf
     
     10:29:58.338 [debug] <0.1448.0>/ Spec #Reference<0.2846893677.1757413382.57076> status changed to linked internally
     
     10:29:58.338 [debug] <0.1448.0>/ Spec #Reference<0.2846893677.1757413382.57076> status changed to ready
     
     10:29:58.338 [debug] <0.1448.0>/:parser/ Got play request
     
     10:29:58.338 [debug] <0.1448.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:cmaf, :file, :parser, :payloader, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413382.57077>, #Reference<0.2846893677.1757413382.57078>, #Reference<0.2846893677.1757413382.57079>, #Reference<0.2846893677.1757413382.57080>], status: :initializing}
     
     10:29:58.338 [debug] <0.1448.0>/:cmaf/ Got play request
     
     10:29:58.338 [debug] <0.1448.0>/:file/ Got play request
     
     10:29:58.338 [debug] <0.1448.0>/:sink/ Got play request
     
     10:29:58.338 [debug] <0.1448.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.338 [debug] <0.1448.0>/:payloader/ Got play request
     
     10:29:58.338 [debug] <0.1448.0>/:parser/ received start of stream
     
     10:29:58.338 [debug] <0.1448.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.338 [debug] <0.1448.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.338 [debug] <0.1448.0>/:payloader/ received start of stream
     
     10:29:58.339 [debug] <0.1448.0>/:cmaf/ Sending stream format through pad :output
     Stream format: %Membrane.CMAF.Track{content_type: :audio, header: <<0, 0, 0, 24, 102, 116, 121, 112, 105, 115, 111, 53, 0, 0, 2, 0, 105, 115, 111, 54, 109, 112, 52, 49, 0, 0, 2, 68, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, ...>>, resolution: nil, codecs: %{mp4a: %{aot_id: 2, channels: 1, frequency: 44100}}}
     
     
     10:29:58.339 [debug] <0.1448.0>/:cmaf/ received start of stream
     
     10:29:58.339 [debug] <0.1390.0>/ Removing children: [:file, :muxer, :parser, :payloader, :sink]
     
     10:29:58.339 [debug] <0.1390.0>/:muxer/ Received terminate request
     
     10:29:58.339 [debug] <0.1390.0>/:muxer/ Terminating with reason :normal
     
     10:29:58.339 [debug] <0.1390.0>/:sink/ Received terminate request
     
     10:29:58.339 [debug] <0.1390.0>/:sink/ Terminating with reason :normal
     
     10:29:58.339 [debug] <0.1390.0>/:file/ Received terminate request
     
     10:29:58.340 [debug] <0.1390.0>/:muxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.340 [debug] <0.1390.0>/:payloader/ Received terminate request
     
     10:29:58.340 [debug] <0.1390.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.340 [debug] <0.1390.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.340 [debug] <0.1390.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.340 [debug] <0.1390.0>/:parser/ Received terminate request
     
     10:29:58.340 [debug] <0.1390.0>/:parser/ Terminating with reason :normal
     
     10:29:58.340 [debug] <0.1390.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.340 [debug] <0.1390.0>/:file/ Terminating with reason :normal
     
     10:29:58.341 [debug] <0.1390.0>/:file/ subprocess supervisor exiting
     
     10:29:58.341 [debug] <0.1390.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.342 [debug] <0.1390.0>/ subprocess supervisor exiting
     
     10:29:58.342 [debug] <0.1390.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.342 [debug] <0.1448.0>/:sink/ received start of stream
     
     10:29:58.345 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1493.0>],
     process options: []
     
     
     10:29:58.345 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_video_variable_parameters.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, %Membrane.MP4.Payloader.H264{parameters_in_band?: true}, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video_vp.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1490.0>],
     process options: []
     
     
     10:29:58.345 [debug] <0.1498.0>/ New spec with ref: #Reference<0.2846893677.1757413382.57343>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.345 [debug] <0.1498.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.57343>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.57343>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.57343>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :muxer, module: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.57343>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out.mp4"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.57343>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.345 [debug] <0.1498.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.345 [debug] <0.1503.0>/ New spec with ref: #Reference<0.2846893677.1757413381.56717>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_video_variable_parameters.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, %Membrane.MP4.Payloader.H264{parameters_in_band?: true}, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video_vp.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.345 [debug] <0.1498.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.345 [debug] <0.1498.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.345 [debug] <0.1503.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video_vp.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56717>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56717>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56717>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :muxer, module: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56717>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_video_variable_parameters.mp4"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.56717>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.346 [debug] <0.1503.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.346 [debug] <0.1503.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video_vp.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.346 [debug] <0.1503.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video_vp.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.346 [debug] <0.1498.0>/ Starting child: name: :parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.346 [debug] <0.1498.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15},
     method: start
     
     
     10:29:58.346 [debug] <0.1503.0>/ Starting child: name: :parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.346 [debug] <0.1498.0>/:parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}
     
     10:29:58.346 [debug] <0.1498.0>/:parser/ Component initialized
     
     10:29:58.346 [debug] <0.1503.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15},
     method: start
     
     
     10:29:58.346 [debug] <0.1498.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.346 [debug] <0.1498.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.346 [debug] <0.1498.0>/:file/ Component initialized
     
     10:29:58.346 [debug] <0.1498.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.346 [debug] <0.1498.0>/:payloader/ Component initialized
     
     10:29:58.346 [debug] <0.1498.0>/ Starting child: name: :muxer, module: Membrane.MP4.Muxer.ISOM in children group: nil
     
     10:29:58.346 [debug] <0.1498.0>/ subprocess supervisor Element start: :muxer
     node: ,
     module: Membrane.MP4.Muxer.ISOM,
     element options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000},
     method: start
     
     
     10:29:58.347 [debug] <0.1498.0>/:muxer/ Initializing element: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}
     
     10:29:58.347 [debug] <0.1498.0>/:muxer/ Component initialized
     
     10:29:58.347 [debug] <0.1498.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.347 [debug] <0.1498.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out.mp4"},
     method: start
     
     
     10:29:58.347 [debug] <0.1498.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out.mp4"}
     
     10:29:58.348 [debug] <0.1503.0>/:file/ Component initialized
     
     10:29:58.348 [debug] <0.1503.0>/:parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}
     
     10:29:58.348 [debug] <0.1503.0>/:parser/ Component initialized
     
     10:29:58.348 [debug] <0.1503.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.348 [debug] <0.1503.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: true},
     method: start
     
     
     10:29:58.349 [debug] <0.1503.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: true}
     
     10:29:58.349 [debug] <0.1503.0>/:payloader/ Component initialized
     
     10:29:58.349 [debug] <0.1503.0>/ Starting child: name: :muxer, module: Membrane.MP4.Muxer.ISOM in children group: nil
     
     10:29:58.349 [debug] <0.1503.0>/ subprocess supervisor Element start: :muxer
     node: ,
     module: Membrane.MP4.Muxer.ISOM,
     element options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000},
     method: start
     
     
     10:29:58.349 [debug] <0.1503.0>/:muxer/ Initializing element: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}
     
     10:29:58.349 [debug] <0.1503.0>/:muxer/ Component initialized
     
     10:29:58.349 [debug] <0.1503.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.349 [debug] <0.1503.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/tmp/out_video_variable_parameters.mp4"},
     method: start
     
     
     10:29:58.349 [debug] <0.1503.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_video_variable_parameters.mp4"}
     
     10:29:58.350 [debug] <0.1498.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57343> startup: initializing, dependent specs: []
     
     10:29:58.350 [debug] <0.1498.0>/ Setup
     
     10:29:58.350 [debug] <0.1498.0>/ Component initialized
     
     10:29:58.350 [debug] <0.1498.0>/ Parent play
     
     10:29:58.350 [debug] <0.1498.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57343> startup: initializing, dependent specs: []
     
     10:29:58.350 [debug] <0.1498.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57343> startup: initializing, dependent specs: []
     
     10:29:58.350 [debug] <0.1498.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57343> startup: initializing, dependent specs: []
     
     10:29:58.350 [debug] <0.1498.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57343> startup: initializing, dependent specs: []
     
     10:29:58.350 [debug] <0.1503.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56717> startup: initializing, dependent specs: []
     
     10:29:58.350 [debug] <0.1503.0>/ Setup
     
     10:29:58.350 [debug] <0.1503.0>/ Component initialized
     
     10:29:58.350 [debug] <0.1503.0>/ Parent play
     
     10:29:58.350 [debug] <0.1503.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56717> startup: initializing, dependent specs: []
     
     10:29:58.350 [debug] <0.1503.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56717> startup: initializing, dependent specs: []
     
     10:29:58.350 [debug] <0.1503.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56717> startup: initializing, dependent specs: []
     
     10:29:58.350 [debug] <0.1503.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56717> startup: initializing, dependent specs: []
     
     10:29:58.350 [debug] <0.1498.0>/:sink/ Component initialized
     
     10:29:58.351 [debug] <0.1498.0>/ Proceeding spec #Reference<0.2846893677.1757413382.57343> startup: initializing, dependent specs: []
     
     10:29:58.351 [debug] <0.1498.0>/ Spec #Reference<0.2846893677.1757413382.57343> status changed to initialized
     
     10:29:58.351 [debug] <0.1498.0>/ Spec #Reference<0.2846893677.1757413382.57343> status changed to linking internally
     
     10:29:58.351 [debug] <0.1448.0>/ Removing children: [:cmaf, :file, :parser, :payloader, :sink]
     
     10:29:58.351 [debug] <0.1448.0>/:file/ Received terminate request
     
     10:29:58.351 [debug] <0.1448.0>/:payloader/ Received terminate request
     
     10:29:58.351 [debug] <0.1448.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.351 [debug] <0.1448.0>/:cmaf/ Received terminate request
     
     10:29:58.351 [debug] <0.1448.0>/:cmaf/ Terminating with reason :normal
     
     10:29:58.351 [debug] <0.1448.0>/:parser/ Received terminate request
     
     10:29:58.351 [debug] <0.1448.0>/:parser/ Terminating with reason :normal
     
     10:29:58.351 [debug] <0.1448.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.351 [debug] <0.1448.0>/:sink/ Received terminate request
     
     10:29:58.351 [debug] <0.1448.0>/:sink/ Terminating with reason :normal
     
     10:29:58.351 [debug] <0.1498.0>/:file/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.351 [debug] <0.1448.0>/:cmaf/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.351 [debug] <0.1498.0>/:parser/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.352 [debug] <0.1448.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.352 [debug] <0.1448.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.352 [debug] <0.1498.0>/:parser/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.352 [debug] <0.1498.0>/:payloader/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.352 [debug] <0.1448.0>/:file/ Terminating with reason :normal
     
     10:29:58.352 [debug] <0.1503.0>/:sink/ Component initialized
     
     10:29:58.352 [debug] <0.1448.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.352 [debug] <0.1503.0>/ Proceeding spec #Reference<0.2846893677.1757413381.56717> startup: initializing, dependent specs: []
     
     10:29:58.352 [debug] <0.1503.0>/ Spec #Reference<0.2846893677.1757413381.56717> status changed to initialized
     
     10:29:58.352 [debug] <0.1503.0>/ Spec #Reference<0.2846893677.1757413381.56717> status changed to linking internally
     
     10:29:58.352 [debug] <0.1448.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.352 [debug] <0.1448.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.352 [debug] <0.1498.0>/:payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56785>} of child :muxer
     
     10:29:58.352 [debug] <0.1448.0>/ Pipeline supervisor got exit from a linked process, pipeline already dead, waiting for subprocess supervisor to exit
     
     10:29:58.352 [debug] <0.1498.0>/:muxer/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56785>} with pad :output of child :payloader
     
     10:29:58.352 [debug] <0.1448.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.352 [debug] <0.1498.0>/:muxer/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.352 [debug] <0.1498.0>/:sink/ Element handle link on pad :input with pad :output of child :muxer
     
     10:29:58.352 [debug] <0.1498.0>/ Spec #Reference<0.2846893677.1757413382.57343> status changed to linked internally
     
     10:29:58.352 [debug] <0.1498.0>/ Spec #Reference<0.2846893677.1757413382.57343> status changed to ready
     
     10:29:58.352 [debug] <0.1498.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:file, :muxer, :parser, :payloader, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413382.57344>, #Reference<0.2846893677.1757413382.57345>, #Reference<0.2846893677.1757413382.57346>, #Reference<0.2846893677.1757413382.57347>], status: :initializing}
     
     10:29:58.352 [debug] <0.1498.0>/:muxer/ Got play request
     
     10:29:58.353 [debug] <0.1498.0>/:muxer/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: Membrane.MP4, type: :bytestream}
     
     
     10:29:58.353 [debug] <0.1498.0>/:file/ Got play request
     
     10:29:58.353 [debug] <0.1498.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.353 [debug] <0.1498.0>/:parser/ Got play request
     
     10:29:58.353 [debug] <0.1498.0>/:parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.353 [debug] <0.1498.0>/:payloader/ Got play request
     
     10:29:58.353 [debug] <0.1498.0>/:sink/ Got play request
     
     10:29:58.353 [debug] <0.1498.0>/:sink/ received start of stream
     
     10:29:58.353 [debug] <0.1503.0>/:file/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.353 [debug] <0.1503.0>/:parser/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.353 [debug] <0.1503.0>/:parser/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.353 [debug] <0.1503.0>/:payloader/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.353 [debug] <0.1503.0>/:payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56788>} of child :muxer
     
     10:29:58.353 [debug] <0.1503.0>/:muxer/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.56788>} with pad :output of child :payloader
     
     10:29:58.353 [debug] <0.1498.0>/:parser/ received start of stream
     
     10:29:58.353 [debug] <0.1503.0>/:muxer/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.353 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: 500000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1561.0>],
     process options: []
     
     
     10:29:58.353 [debug] <0.1503.0>/:sink/ Element handle link on pad :input with pad :output of child :muxer
     
     10:29:58.354 [debug] <0.1498.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.354 [debug] <0.1503.0>/ Spec #Reference<0.2846893677.1757413381.56717> status changed to linked internally
     
     10:29:58.354 [debug] <0.1503.0>/ Spec #Reference<0.2846893677.1757413381.56717> status changed to ready
     
     10:29:58.354 [debug] <0.1503.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:file, :muxer, :parser, :payloader, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413381.56718>, #Reference<0.2846893677.1757413381.56719>, #Reference<0.2846893677.1757413381.56720>, #Reference<0.2846893677.1757413381.56721>], status: :initializing}
     
     10:29:58.354 [debug] <0.1503.0>/:muxer/ Got play request
     
     10:29:58.354 [debug] <0.1503.0>/:muxer/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: Membrane.MP4, type: :bytestream}
     
     
     10:29:58.354 [debug] <0.1574.0>/ New spec with ref: #Reference<0.2846893677.1757413383.56779>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: 500000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.354 [debug] <0.1503.0>/:parser/ Got play request
     
     10:29:58.354 [debug] <0.1503.0>/:parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.354 [debug] <0.1503.0>/:payloader/ Got play request
     
     10:29:58.354 [debug] <0.1498.0>/:payloader/ received start of stream
     
     10:29:58.354 [debug] <0.1503.0>/:sink/ Got play request
     
     10:29:58.354 [debug] <0.1503.0>/:sink/ received start of stream
     
     10:29:58.354 [debug] <0.1498.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 10, 255, 225, 0, 25, 103, 100, 0, 10, 172, 217, 71, 63, 158, 124, 4, 64, 0, 0, 3, 0, 64, 0, 0, 15, 3, 196, 137, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.354 [debug] <0.1574.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.56779>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.56779>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.56779>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :cmaf, module: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: 500000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.56779>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413383.56779>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.354 [debug] <0.1574.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.354 [debug] <0.1498.0>/:muxer/ received start of stream
     
     10:29:58.355 [debug] <0.1574.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.355 [debug] <0.1574.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.355 [debug] <0.1503.0>/:file/ Got play request
     
     10:29:58.355 [debug] <0.1503.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.355 [debug] <0.1503.0>/:parser/ received start of stream
     
     10:29:58.356 [debug] <0.1503.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 640, height: 380, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.357 [debug] <0.1503.0>/:payloader/ received start of stream
     
     10:29:58.357 [debug] <0.1503.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 31, 255, 225, 0, 26, 103, 100, 0, 31, 172, 217, 64, 160, 49, 251, 192, 68, 0, 0, 3, 0, 4, 0, 0, 3, 1, 224, 60, 96, 198, 88, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: true}, timescale: 30720, height: 380, width: 640}
     
     
     10:29:58.358 [debug] <0.1503.0>/:muxer/ received start of stream
     
     10:29:58.358 [debug] <0.1574.0>/ Starting child: name: :parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.358 [debug] <0.1574.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0},
     method: start
     
     
     10:29:58.358 [debug] <0.1574.0>/:parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}
     
     10:29:58.358 [debug] <0.1574.0>/:parser/ Component initialized
     
     10:29:58.358 [debug] <0.1574.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.358 [debug] <0.1574.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.359 [debug] <0.1574.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.359 [debug] <0.1574.0>/:payloader/ Component initialized
     
     10:29:58.359 [debug] <0.1574.0>/ Starting child: name: :cmaf, module: Membrane.MP4.Muxer.CMAF in children group: nil
     
     10:29:58.359 [debug] <0.1574.0>/ subprocess supervisor Element start: :cmaf
     node: ,
     module: Membrane.MP4.Muxer.CMAF,
     element options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: 500000000},
     method: start
     
     
     10:29:58.359 [debug] <0.1574.0>/:cmaf/ Initializing element: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: 500000000}
     
     10:29:58.359 [debug] <0.1574.0>/:cmaf/ Component initialized
     
     10:29:58.359 [debug] <0.1574.0>/ Starting child: name: :sink, module: Membrane.Testing.Sink in children group: nil
     
     10:29:58.359 [debug] <0.1574.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.Testing.Sink,
     element options: %Membrane.Testing.Sink{autodemand: true},
     method: start
     
     
     10:29:58.359 [debug] <0.1574.0>/:sink/ Initializing element: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}
     
     10:29:58.359 [debug] <0.1574.0>/:sink/ Component initialized
     
     10:29:58.359 [debug] <0.1574.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56779> startup: initializing, dependent specs: []
     
     10:29:58.359 [debug] <0.1574.0>/ Setup
     
     10:29:58.359 [debug] <0.1574.0>/ Component initialized
     
     10:29:58.359 [debug] <0.1574.0>/ Parent play
     
     10:29:58.359 [debug] <0.1574.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56779> startup: initializing, dependent specs: []
     
     10:29:58.359 [debug] <0.1574.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56779> startup: initializing, dependent specs: []
     
     10:29:58.359 [debug] <0.1574.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56779> startup: initializing, dependent specs: []
     
     10:29:58.359 [debug] <0.1574.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56779> startup: initializing, dependent specs: []
     
     10:29:58.360 [debug] <0.1574.0>/:file/ Component initialized
     
     10:29:58.360 [debug] <0.1574.0>/ Proceeding spec #Reference<0.2846893677.1757413383.56779> startup: initializing, dependent specs: []
     
     10:29:58.360 [debug] <0.1574.0>/ Spec #Reference<0.2846893677.1757413383.56779> status changed to initialized
     
     10:29:58.360 [debug] <0.1574.0>/ Spec #Reference<0.2846893677.1757413383.56779> status changed to linking internally
     
     10:29:58.360 [debug] <0.1574.0>/:file/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.360 [debug] <0.1574.0>/:parser/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.361 [debug] <0.1574.0>/:parser/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.361 [debug] <0.1574.0>/:payloader/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.361 [debug] <0.1574.0>/:payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413378.58204>} of child :cmaf
     
     10:29:58.361 [debug] <0.1574.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413378.58204>} with pad :output of child :payloader
     
     10:29:58.361 [debug] <0.1574.0>/:cmaf/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.361 [debug] <0.1574.0>/:sink/ Element handle link on pad :input with pad :output of child :cmaf
     
     10:29:58.361 [debug] <0.1574.0>/ Spec #Reference<0.2846893677.1757413383.56779> status changed to linked internally
     
     10:29:58.361 [debug] <0.1574.0>/ Spec #Reference<0.2846893677.1757413383.56779> status changed to ready
     
     10:29:58.361 [debug] <0.1574.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:cmaf, :file, :parser, :payloader, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413383.56780>, #Reference<0.2846893677.1757413383.56781>, #Reference<0.2846893677.1757413383.56782>, #Reference<0.2846893677.1757413383.56783>], status: :initializing}
     
     10:29:58.361 [debug] <0.1574.0>/:sink/ Got play request
     
     10:29:58.362 [debug] <0.1574.0>/:cmaf/ Got play request
     
     10:29:58.362 [debug] <0.1574.0>/:file/ Got play request
     
     10:29:58.362 [debug] <0.1574.0>/:parser/ Got play request
     
     10:29:58.362 [debug] <0.1574.0>/:payloader/ Got play request
     
     10:29:58.362 [debug] <0.1574.0>/:parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.362 [debug] <0.1574.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.362 [debug] <0.1574.0>/:parser/ received start of stream
     
     10:29:58.362 [debug] <0.1574.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.362 [debug] <0.1574.0>/:payloader/ received start of stream
     
     10:29:58.362 [debug] <0.1574.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 10, 255, 225, 0, 25, 103, 100, 0, 10, 172, 217, 71, 63, 158, 124, 4, 64, 0, 0, 3, 0, 64, 0, 0, 15, 3, 196, 137, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.363 [debug] <0.1574.0>/:cmaf/ Sending stream format through pad :output
     Stream format: %Membrane.CMAF.Track{content_type: :video, header: <<0, 0, 0, 24, 102, 116, 121, 112, 105, 115, 111, 53, 0, 0, 2, 0, 105, 115, 111, 54, 109, 112, 52, 49, 0, 0, 2, 137, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, ...>>, resolution: {100, 100}, codecs: %{avc1: %{compatibility: 0, level: 10, profile: 100}}}
     
     
     10:29:58.363 [debug] <0.1574.0>/:cmaf/ received start of stream
     
     10:29:58.363 [debug] <0.1574.0>/:sink/ received start of stream
     
     10:29:58.371 [debug] <0.1574.0>/ Removing children: [:cmaf, :file, :parser, :payloader, :sink]
     
     10:29:58.371 [debug] <0.1574.0>/:cmaf/ Received terminate request
     
     10:29:58.371 [debug] <0.1574.0>/:cmaf/ Terminating with reason :normal
     
     10:29:58.371 [debug] <0.1574.0>/:file/ Received terminate request
     
     10:29:58.371 [debug] <0.1574.0>/:parser/ Received terminate request
     
     10:29:58.371 [debug] <0.1574.0>/:parser/ Terminating with reason :normal
     
     10:29:58.371 [debug] <0.1574.0>/:cmaf/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.371 [debug] <0.1574.0>/:sink/ Received terminate request
     
     10:29:58.371 [debug] <0.1574.0>/:sink/ Terminating with reason :normal
     
     10:29:58.371 [debug] <0.1574.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.371 [debug] <0.1574.0>/:payloader/ Received terminate request
     
     10:29:58.371 [debug] <0.1574.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.371 [debug] <0.1574.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.372 [debug] <0.1574.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.372 [debug] <0.1503.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 320, height: 190, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.372 [debug] <0.1574.0>/:file/ Terminating with reason :normal
     
     10:29:58.373 [debug] <0.1503.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 21, 255, 225, 0, 25, 103, 100, 0, 21, 172, 217, 65, 65, 159, 172, 4, 64, 0, 0, 3, 0, 64, 0, 0, 30, 3, 197, 139, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: true}, timescale: 30720, height: 190, width: 320}
     
     
     10:29:58.374 [debug] <0.1574.0>/:file/ subprocess supervisor exiting
     
     10:29:58.374 [debug] <0.1574.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.374 [debug] <0.1574.0>/ Pipeline supervisor got exit from a linked process, pipeline already dead, waiting for subprocess supervisor to exit
     
     10:29:58.374 [debug] <0.1574.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.374 [debug] <0.1574.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.375 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: 500000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1616.0>],
     process options: []
     
     
     10:29:58.375 [debug] <0.1620.0>/ New spec with ref: #Reference<0.2846893677.1757413380.57892>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, Membrane.Testing.Sink, %{get_if_exists: false}}, {:cmaf, %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: 500000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :cmaf, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :cmaf, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.376 [debug] <0.1620.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57892>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57892>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57892>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :cmaf, module: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: 500000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57892>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57892>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.376 [debug] <0.1620.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.376 [debug] <0.1620.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.376 [debug] <0.1620.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.376 [debug] <0.1620.0>/:file/ Component initialized
     
     10:29:58.376 [debug] <0.1620.0>/ Starting child: name: :parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.377 [debug] <0.1620.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0},
     method: start
     
     
     10:29:58.377 [debug] <0.1620.0>/:parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 0}
     
     10:29:58.377 [debug] <0.1620.0>/:parser/ Component initialized
     
     10:29:58.377 [debug] <0.1620.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.377 [debug] <0.1620.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.377 [debug] <0.1620.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.377 [debug] <0.1620.0>/:payloader/ Component initialized
     
     10:29:58.377 [debug] <0.1620.0>/ Starting child: name: :cmaf, module: Membrane.MP4.Muxer.CMAF in children group: nil
     
     10:29:58.377 [debug] <0.1620.0>/ subprocess supervisor Element start: :cmaf
     node: ,
     module: Membrane.MP4.Muxer.CMAF,
     element options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: 500000000},
     method: start
     
     
     10:29:58.377 [debug] <0.1620.0>/:cmaf/ Initializing element: Membrane.MP4.Muxer.CMAF, options: %Membrane.MP4.Muxer.CMAF{segment_min_duration: 2000000000, chunk_target_duration: 500000000}
     
     10:29:58.377 [debug] <0.1620.0>/:cmaf/ Component initialized
     
     10:29:58.377 [debug] <0.1620.0>/ Starting child: name: :sink, module: Membrane.Testing.Sink in children group: nil
     
     10:29:58.377 [debug] <0.1620.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.Testing.Sink,
     element options: %Membrane.Testing.Sink{autodemand: true},
     method: start
     
     
     10:29:58.378 [debug] <0.1620.0>/:sink/ Initializing element: Membrane.Testing.Sink, options: %Membrane.Testing.Sink{autodemand: true}
     
     10:29:58.378 [debug] <0.1620.0>/:sink/ Component initialized
     
     10:29:58.378 [debug] <0.1620.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57892> startup: initializing, dependent specs: []
     
     10:29:58.378 [debug] <0.1620.0>/ Setup
     
     10:29:58.378 [debug] <0.1620.0>/ Component initialized
     
     10:29:58.378 [debug] <0.1620.0>/ Parent play
     
     10:29:58.378 [debug] <0.1620.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57892> startup: initializing, dependent specs: []
     
     10:29:58.378 [debug] <0.1620.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57892> startup: initializing, dependent specs: []
     
     10:29:58.378 [debug] <0.1620.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57892> startup: initializing, dependent specs: []
     
     10:29:58.378 [debug] <0.1620.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57892> startup: initializing, dependent specs: []
     
     10:29:58.378 [debug] <0.1620.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57892> startup: initializing, dependent specs: []
     
     10:29:58.378 [debug] <0.1620.0>/ Spec #Reference<0.2846893677.1757413380.57892> status changed to initialized
     
     10:29:58.378 [debug] <0.1620.0>/ Spec #Reference<0.2846893677.1757413380.57892> status changed to linking internally
     
     10:29:58.378 [debug] <0.1620.0>/:file/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.378 [debug] <0.1620.0>/:parser/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.378 [debug] <0.1620.0>/:parser/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.378 [debug] <0.1620.0>/:payloader/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.378 [debug] <0.1620.0>/:payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413383.57001>} of child :cmaf
     
     10:29:58.378 [debug] <0.1620.0>/:cmaf/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413383.57001>} with pad :output of child :payloader
     
     10:29:58.378 [debug] <0.1620.0>/:cmaf/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.379 [debug] <0.1620.0>/:sink/ Element handle link on pad :input with pad :output of child :cmaf
     
     10:29:58.379 [debug] <0.1620.0>/ Spec #Reference<0.2846893677.1757413380.57892> status changed to linked internally
     
     10:29:58.379 [debug] <0.1620.0>/ Spec #Reference<0.2846893677.1757413380.57892> status changed to ready
     
     10:29:58.379 [debug] <0.1620.0>/:file/ Got play request
     
     10:29:58.379 [debug] <0.1620.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:cmaf, :file, :parser, :payloader, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413380.57893>, #Reference<0.2846893677.1757413380.57894>, #Reference<0.2846893677.1757413380.57895>, #Reference<0.2846893677.1757413380.57896>], status: :initializing}
     
     10:29:58.379 [debug] <0.1620.0>/:sink/ Got play request
     
     10:29:58.379 [debug] <0.1620.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.379 [debug] <0.1620.0>/:payloader/ Got play request
     
     10:29:58.379 [debug] <0.1620.0>/:cmaf/ Got play request
     
     10:29:58.379 [debug] <0.1620.0>/:parser/ Got play request
     
     10:29:58.379 [debug] <0.1620.0>/:parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.379 [debug] <0.1620.0>/:parser/ received start of stream
     
     10:29:58.380 [debug] <0.1620.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.380 [debug] <0.1620.0>/:payloader/ received start of stream
     
     10:29:58.381 [debug] <0.1620.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 10, 255, 225, 0, 25, 103, 100, 0, 10, 172, 217, 71, 63, 158, 124, 4, 64, 0, 0, 3, 0, 64, 0, 0, 15, 3, 196, 137, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.381 [debug] <0.1620.0>/:cmaf/ Sending stream format through pad :output
     Stream format: %Membrane.CMAF.Track{content_type: :video, header: <<0, 0, 0, 24, 102, 116, 121, 112, 105, 115, 111, 53, 0, 0, 2, 0, 105, 115, 111, 54, 109, 112, 52, 49, 0, 0, 2, 137, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, ...>>, resolution: {100, 100}, codecs: %{avc1: %{compatibility: 0, level: 10, profile: 100}}}
     
     
     10:29:58.381 [debug] <0.1620.0>/:cmaf/ received start of stream
     
     10:29:58.381 [debug] <0.1498.0>/ Removing children: [:file, :muxer, :parser, :payloader, :sink]
     
     10:29:58.381 [debug] <0.1498.0>/:sink/ Received terminate request
     
     10:29:58.381 [debug] <0.1498.0>/:sink/ Terminating with reason :normal
     
     10:29:58.381 [debug] <0.1498.0>/:muxer/ Received terminate request
     
     10:29:58.381 [debug] <0.1498.0>/:muxer/ Terminating with reason :normal
     
     10:29:58.381 [debug] <0.1498.0>/:file/ Received terminate request
     
     10:29:58.381 [debug] <0.1498.0>/:parser/ Received terminate request
     
     10:29:58.381 [debug] <0.1498.0>/:payloader/ Received terminate request
     
     10:29:58.381 [debug] <0.1498.0>/:parser/ Terminating with reason :normal
     
     10:29:58.381 [debug] <0.1498.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.382 [debug] <0.1498.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.382 [debug] <0.1620.0>/:sink/ received start of stream
     
     10:29:58.382 [debug] <0.1498.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.382 [debug] <0.1498.0>/:muxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.382 [debug] <0.1498.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.383 [debug] <0.1498.0>/:file/ Terminating with reason :normal
     
     10:29:58.383 [debug] <0.1498.0>/:file/ subprocess supervisor exiting
     
     10:29:58.383 [debug] <0.1498.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.383 [debug] <0.1498.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.384 [debug] <0.1498.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.384 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out_video.h264"}, %{get_if_exists: false}}, {:depayloader, Membrane.MP4.Depayloader.H264, %{get_if_exists: false}}, {:demuxer, Membrane.MP4.Demuxer.ISOM, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out.mp4", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :depayloader, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :demuxer, from_pad: {Membrane.Pad, :output, 1}, from_pad_props: %{options: []}, to: :depayloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :demuxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1493.0>],
     process options: []
     
     
     10:29:58.384 [debug] <0.1659.0>/ New spec with ref: #Reference<0.2846893677.1757413380.57998>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out_video.h264"}, %{get_if_exists: false}}, {:depayloader, Membrane.MP4.Depayloader.H264, %{get_if_exists: false}}, {:demuxer, Membrane.MP4.Demuxer.ISOM, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out.mp4", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :depayloader, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :demuxer, from_pad: {Membrane.Pad, :output, 1}, from_pad_props: %{options: []}, to: :depayloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :demuxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.385 [debug] <0.1659.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out.mp4", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57998>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :demuxer, module: Membrane.MP4.Demuxer.ISOM, options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57998>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :depayloader, module: Membrane.MP4.Depayloader.H264, options: nil, component_type: :bin, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57998>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out_video.h264"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.57998>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.385 [debug] <0.1659.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.385 [debug] <0.1659.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out.mp4", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.385 [debug] <0.1659.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out.mp4", chunk_size: 2048, seekable?: false}
     
     10:29:58.385 [debug] <0.1659.0>/ Starting child: name: :demuxer, module: Membrane.MP4.Demuxer.ISOM in children group: nil
     
     10:29:58.385 [debug] <0.1659.0>/ subprocess supervisor Element start: :demuxer
     node: ,
     module: Membrane.MP4.Demuxer.ISOM,
     element options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: false},
     method: start
     
     
     10:29:58.385 [debug] <0.1659.0>/:file/ Component initialized
     
     10:29:58.385 [debug] <0.1659.0>/:demuxer/ Initializing element: Membrane.MP4.Demuxer.ISOM, options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: false}
     
     10:29:58.385 [debug] <0.1659.0>/:demuxer/ Component initialized
     
     10:29:58.385 [debug] <0.1659.0>/ Starting child: name: :depayloader, module: Membrane.MP4.Depayloader.H264 in children group: nil
     
     10:29:58.386 [debug] <0.1659.0>/ subprocess supervisor Bin start: :depayloader
     node: ,
     module: Membrane.MP4.Depayloader.H264,
     bin options: nil
     
     
     10:29:58.386 [debug] <0.1659.0>/:depayloader/ New spec with ref: #Reference<0.2846893677.1757413380.58017>
     specification: %Membrane.ChildrenSpec.Builder{children: [{:parser, Membrane.H264.Parser, %{get_if_exists: false}}, {:remote_stream_depayloader, Membrane.MP4.Depayloader.H264.Filter, %{get_if_exists: false}}], links: [%{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: {Membrane.Bin, :itself}, to_pad: :output, to_pad_props: %{}}, %{from: :remote_stream_depayloader, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: {Membrane.Bin, :itself}, from_pad: :input, from_pad_props: %{}, to: :remote_stream_depayloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :output, to_pad_props: %{}, link_starting_child: {Membrane.Bin, :itself}}
     
     
     10:29:58.386 [debug] <0.1659.0>/:depayloader/ Starting children: [%Membrane.ChildEntry{name: :remote_stream_depayloader, module: Membrane.MP4.Depayloader.H264.Filter, options: nil, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.58017>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.Parser, options: %Membrane.H264.Parser{sps: "", pps: "", framerate: nil}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.58017>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.386 [debug] <0.1659.0>/:depayloader/ Starting child: name: :remote_stream_depayloader, module: Membrane.MP4.Depayloader.H264.Filter in children group: nil
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ subprocess supervisor Element start: :remote_stream_depayloader
     node: ,
     module: Membrane.MP4.Depayloader.H264.Filter,
     element options: nil,
     method: start
     
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/:remote_stream_depayloader/ Initializing element: Membrane.MP4.Depayloader.H264.Filter, options: nil
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/:remote_stream_depayloader/ Component initialized
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ Starting child: name: :parser, module: Membrane.H264.Parser in children group: nil
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.H264.Parser,
     element options: %Membrane.H264.Parser{sps: "", pps: "", framerate: nil},
     method: start
     
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/:parser/ Initializing element: Membrane.H264.Parser, options: %Membrane.H264.Parser{sps: "", pps: "", framerate: nil}
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/:parser/ Component initialized
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ Proceeding spec #Reference<0.2846893677.1757413380.58017> startup: initializing, dependent specs: []
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ Setup
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ Component initialized
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ Proceeding spec #Reference<0.2846893677.1757413380.58017> startup: initializing, dependent specs: []
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ Proceeding spec #Reference<0.2846893677.1757413380.58017> startup: initializing, dependent specs: []
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ Spec #Reference<0.2846893677.1757413380.58017> status changed to initialized
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ Got internal link request, pad ref :input, child :remote_stream_depayloader, spec #Reference<0.2846893677.1757413380.58017>
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ Got internal link request, pad ref :output, child :parser, spec #Reference<0.2846893677.1757413380.58017>
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/ Spec #Reference<0.2846893677.1757413380.58017> status changed to linking internally
     
     10:29:58.387 [debug] <0.1659.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.387 [debug] <0.1659.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out_video.h264"},
     method: start
     
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/:remote_stream_depayloader/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.387 [debug] <0.1659.0>/:depayloader/:parser/ Element handle link on pad :input with pad :output of child :remote_stream_depayloader
     
     10:29:58.387 [debug] <0.1659.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-H264-track-4b9712a4/out_video.h264"}
     
     10:29:58.388 [debug] <0.1659.0>/:depayloader/ Spec #Reference<0.2846893677.1757413380.58017> status changed to linked internally
     
     10:29:58.388 [debug] <0.1659.0>/:depayloader/ Spec #Reference<0.2846893677.1757413380.58017> status changed to linking externally
     
     10:29:58.389 [debug] <0.1659.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57998> startup: initializing, dependent specs: []
     
     10:29:58.389 [debug] <0.1659.0>/ Setup
     
     10:29:58.389 [debug] <0.1659.0>/ Component initialized
     
     10:29:58.389 [debug] <0.1659.0>/ Parent play
     
     10:29:58.389 [debug] <0.1659.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57998> startup: initializing, dependent specs: []
     
     10:29:58.389 [debug] <0.1659.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57998> startup: initializing, dependent specs: []
     
     10:29:58.389 [debug] <0.1659.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57998> startup: initializing, dependent specs: []
     
     10:29:58.390 [debug] <0.1659.0>/:sink/ Component initialized
     
     10:29:58.390 [debug] <0.1620.0>/ Removing children: [:cmaf, :file, :parser, :payloader, :sink]
     
     10:29:58.390 [debug] <0.1659.0>/ Proceeding spec #Reference<0.2846893677.1757413380.57998> startup: initializing, dependent specs: []
     
     10:29:58.390 [debug] <0.1659.0>/ Spec #Reference<0.2846893677.1757413380.57998> status changed to initialized
     
     10:29:58.390 [debug] <0.1620.0>/:file/ Received terminate request
     
     10:29:58.390 [debug] <0.1659.0>/ Spec #Reference<0.2846893677.1757413380.57998> status changed to linking internally
     
     10:29:58.390 [debug] <0.1620.0>/:sink/ Received terminate request
     
     10:29:58.390 [debug] <0.1620.0>/:sink/ Terminating with reason :normal
     
     10:29:58.390 [debug] <0.1620.0>/:parser/ Received terminate request
     
     10:29:58.390 [debug] <0.1620.0>/:payloader/ Received terminate request
     
     10:29:58.390 [debug] <0.1620.0>/:cmaf/ Received terminate request
     
     10:29:58.390 [debug] <0.1620.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.390 [debug] <0.1620.0>/:parser/ Terminating with reason :normal
     
     10:29:58.390 [debug] <0.1620.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.390 [debug] <0.1620.0>/:cmaf/ Terminating with reason :normal
     
     10:29:58.390 [debug] <0.1659.0>/:depayloader/ Got external link request, link id: #Reference<0.2846893677.1757413380.58000>, pad ref: :input
     
     10:29:58.390 [debug] <0.1659.0>/:depayloader/ Sending link response, link_id: #Reference<0.2846893677.1757413380.58000>, pad: :input
     
     10:29:58.390 [debug] <0.1620.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.390 [debug] <0.1659.0>/:depayloader/ Got external link request, link id: #Reference<0.2846893677.1757413380.58001>, pad ref: :output
     
     10:29:58.390 [debug] <0.1659.0>/:depayloader/ Sending link response, link_id: #Reference<0.2846893677.1757413380.58001>, pad: :output
     
     10:29:58.390 [debug] <0.1620.0>/:cmaf/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.390 [debug] <0.1620.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.390 [debug] <0.1659.0>/:file/ Element handle link on pad :output with pad :input of child :demuxer
     
     10:29:58.390 [debug] <0.1620.0>/:file/ Terminating with reason :normal
     
     10:29:58.390 [debug] <0.1659.0>/:demuxer/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.390 [debug] <0.1620.0>/:file/ subprocess supervisor exiting
     
     10:29:58.390 [debug] <0.1620.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.390 [debug] <0.1620.0>/ subprocess supervisor exiting
     
     10:29:58.390 [debug] <0.1620.0>/ Pipeline supervisor got exit from a linked process, pipeline already dead, waiting for subprocess supervisor to exit
     
     10:29:58.390 [debug] <0.1620.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.390 [debug] <0.1659.0>/:demuxer/ Element handle link on pad {Membrane.Pad, :output, 1} with pad :input of child :depayloader
     
     10:29:58.390 [debug] <0.1659.0>/:depayloader/ Handle link %Membrane.Core.Parent.Link.Endpoint{
       child: :depayloader,
       pad_spec: :input,
       pad_ref: :input,
       pid: #PID<0.1671.0>,
       pad_props: %{
         auto_demand_size: nil,
         min_demand_factor: nil,
         options: [],
         target_queue_size: nil,
         throttling_factor: nil,
         toilet_capacity: nil
       },
       pad_info: %{
         accepted_formats_str: ["Membrane.MP4.Payload"],
         availability: :always,
         direction: :input,
         name: :input,
         options: nil
       },
       child_spec_ref: #Reference<0.2846893677.1757413380.57998>
     }
     
     10:29:58.390 [debug] <0.1659.0>/:depayloader/:remote_stream_depayloader/ Element handle link on pad :input with pad {Membrane.Pad, :output, 1} of child :demuxer
     
     10:29:58.391 [debug] <0.1659.0>/:depayloader/ Handle link %Membrane.Core.Parent.Link.Endpoint{
       child: :depayloader,
       pad_spec: :output,
       pad_ref: :output,
       pid: #PID<0.1671.0>,
       pad_props: %{options: []},
       pad_info: %{
         accepted_formats_str: ["%Membrane.H264{alignment: :au, nalu_in_metadata?: true}"],
         availability: :always,
         direction: :output,
         name: :output,
         options: nil
       },
       child_spec_ref: #Reference<0.2846893677.1757413380.57998>
     }
     
     10:29:58.391 [debug] <0.1659.0>/:depayloader/:parser/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.391 [debug] <0.1659.0>/:sink/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.391 [debug] <0.1659.0>/:depayloader/ Spec #Reference<0.2846893677.1757413380.58017> status changed to ready
     
     10:29:58.391 [debug] <0.1659.0>/:depayloader/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:parser, :remote_stream_depayloader]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413380.58018>, #Reference<0.2846893677.1757413380.58019>, #Reference<0.2846893677.1757413380.58020>], status: :linking_externally}
     
     10:29:58.391 [debug] <0.1659.0>/ Spec #Reference<0.2846893677.1757413380.57998> status changed to linked internally
     
     10:29:58.391 [debug] <0.1659.0>/ Spec #Reference<0.2846893677.1757413380.57998> status changed to ready
     
     10:29:58.391 [debug] <0.1659.0>/:file/ Got play request
     
     10:29:58.391 [debug] <0.1659.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.391 [debug] <0.1659.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:demuxer, :depayloader, :file, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413380.57999>, #Reference<0.2846893677.1757413380.58000>, #Reference<0.2846893677.1757413380.58001>], status: :linking_internally}
     
     10:29:58.391 [debug] <0.1659.0>/:demuxer/ Got play request
     
     10:29:58.391 [debug] <0.1659.0>/:sink/ Got play request
     
     10:29:58.391 [debug] <0.1659.0>/:depayloader/ Parent play
     
     10:29:58.391 [debug] <0.1659.0>/:depayloader/:parser/ Got play request
     
     10:29:58.391 [debug] <0.1659.0>/:demuxer/ received start of stream
     
     10:29:58.391 [debug] <0.1659.0>/:depayloader/:remote_stream_depayloader/ Got play request
     
     10:29:58.391 [debug] <0.1659.0>/:depayloader/:remote_stream_depayloader/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.391 [debug] <0.1659.0>/:depayloader/:parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.391 [debug] <0.1659.0>/:demuxer/ Sending stream format through pad {Membrane.Pad, :output, 1}
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 10, 255, 225, 0, 25, 103, 100, 0, 10, 172, 217, 71, 63, 158, 124, 4, 64, 0, 0, 3, 0, 64, 0, 0, 15, 3, 196, 137, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.392 [debug] <0.1659.0>/:depayloader/:remote_stream_depayloader/ Sending stream format through pad :output
     Stream format: %Membrane.H264.RemoteStream{alignment: :au, decoder_configuration_record: nil}
     
     
     10:29:58.392 [debug] <0.1659.0>/:depayloader/:remote_stream_depayloader/ received start of stream
     
     10:29:58.392 [debug] <0.1659.0>/:depayloader/:parser/ received start of stream
     
     10:29:58.392 [debug] <0.1659.0>/:depayloader/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: nil}
     
     
     10:29:58.392 [debug] <0.1659.0>/:sink/ received start of stream
     
     10:29:58.393 [debug] <0.1503.0>/ Removing children: [:file, :muxer, :parser, :payloader, :sink]
     
     10:29:58.393 [debug] <0.1503.0>/:muxer/ Received terminate request
     
     10:29:58.393 [debug] <0.1503.0>/:payloader/ Received terminate request
     
     10:29:58.393 [debug] <0.1503.0>/:muxer/ Terminating with reason :normal
     
     10:29:58.393 [debug] <0.1503.0>/:parser/ Received terminate request
     
     10:29:58.393 [debug] <0.1503.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.393 [debug] <0.1503.0>/:parser/ Terminating with reason :normal
     
     10:29:58.393 [debug] <0.1503.0>/:muxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.393 [debug] <0.1503.0>/:file/ Received terminate request
     
     10:29:58.393 [debug] <0.1503.0>/:sink/ Received terminate request
     
     10:29:58.393 [debug] <0.1503.0>/:sink/ Terminating with reason :normal
     
     10:29:58.393 [debug] <0.1503.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.393 [debug] <0.1503.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.393 [debug] <0.1503.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.394 [debug] <0.1503.0>/:file/ Terminating with reason :normal
     
     10:29:58.394 [debug] <0.1503.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.394 [debug] <0.1503.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.394 [debug] <0.1503.0>/ subprocess supervisor exiting
     
     10:29:58.394 [debug] <0.1503.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.397 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_aac.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1711.0>],
     process options: []
     
     
     10:29:58.397 [debug] <0.1715.0>/ New spec with ref: #Reference<0.2846893677.1757413384.56763>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_aac.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.397 [debug] <0.1715.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413384.56763>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413384.56763>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413384.56763>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :muxer, module: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413384.56763>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_aac.mp4"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413384.56763>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.397 [debug] <0.1715.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.397 [debug] <0.1715.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.397 [debug] <0.1715.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}
     
     10:29:58.398 [debug] <0.1715.0>/ Starting child: name: :parser, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.398 [debug] <0.1715.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS},
     method: start
     
     
     10:29:58.398 [debug] <0.1715.0>/:parser/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}
     
     10:29:58.398 [debug] <0.1715.0>/:file/ Component initialized
     
     10:29:58.398 [debug] <0.1715.0>/:parser/ Component initialized
     
     10:29:58.398 [debug] <0.1715.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.AAC in children group: nil
     
     10:29:58.398 [debug] <0.1715.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.AAC,
     element options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0},
     method: start
     
     
     10:29:58.398 [debug] <0.1715.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}
     
     10:29:58.398 [debug] <0.1715.0>/:payloader/ Component initialized
     
     10:29:58.398 [debug] <0.1715.0>/ Starting child: name: :muxer, module: Membrane.MP4.Muxer.ISOM in children group: nil
     
     10:29:58.398 [debug] <0.1715.0>/ subprocess supervisor Element start: :muxer
     node: ,
     module: Membrane.MP4.Muxer.ISOM,
     element options: %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000},
     method: start
     
     
     10:29:58.398 [debug] <0.1715.0>/:muxer/ Initializing element: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}
     
     10:29:58.398 [debug] <0.1715.0>/:muxer/ Component initialized
     
     10:29:58.398 [debug] <0.1715.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.398 [debug] <0.1715.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/tmp/out_aac.mp4"},
     method: start
     
     
     10:29:58.398 [debug] <0.1715.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_aac.mp4"}
     
     10:29:58.399 [debug] <0.1715.0>/ Proceeding spec #Reference<0.2846893677.1757413384.56763> startup: initializing, dependent specs: []
     
     10:29:58.399 [debug] <0.1715.0>/ Setup
     
     10:29:58.399 [debug] <0.1715.0>/ Component initialized
     
     10:29:58.399 [debug] <0.1715.0>/ Parent play
     
     10:29:58.399 [debug] <0.1715.0>/ Proceeding spec #Reference<0.2846893677.1757413384.56763> startup: initializing, dependent specs: []
     
     10:29:58.399 [debug] <0.1715.0>/ Proceeding spec #Reference<0.2846893677.1757413384.56763> startup: initializing, dependent specs: []
     
     10:29:58.399 [debug] <0.1715.0>/ Proceeding spec #Reference<0.2846893677.1757413384.56763> startup: initializing, dependent specs: []
     
     10:29:58.399 [debug] <0.1715.0>/ Proceeding spec #Reference<0.2846893677.1757413384.56763> startup: initializing, dependent specs: []
     
     10:29:58.399 [debug] <0.1715.0>/:sink/ Component initialized
     
     10:29:58.399 [debug] <0.1715.0>/ Proceeding spec #Reference<0.2846893677.1757413384.56763> startup: initializing, dependent specs: []
     
     10:29:58.399 [debug] <0.1715.0>/ Spec #Reference<0.2846893677.1757413384.56763> status changed to initialized
     
     10:29:58.399 [debug] <0.1715.0>/ Spec #Reference<0.2846893677.1757413384.56763> status changed to linking internally
     
     10:29:58.399 [debug] <0.1715.0>/:file/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.399 [debug] <0.1715.0>/:parser/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.399 [debug] <0.1715.0>/:parser/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.399 [debug] <0.1715.0>/:payloader/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.400 [debug] <0.1715.0>/:payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413380.58149>} of child :muxer
     
     10:29:58.400 [debug] <0.1715.0>/:muxer/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413380.58149>} with pad :output of child :payloader
     
     10:29:58.400 [debug] <0.1715.0>/:muxer/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.400 [debug] <0.1715.0>/:sink/ Element handle link on pad :input with pad :output of child :muxer
     
     10:29:58.400 [debug] <0.1715.0>/ Spec #Reference<0.2846893677.1757413384.56763> status changed to linked internally
     
     10:29:58.400 [debug] <0.1715.0>/ Spec #Reference<0.2846893677.1757413384.56763> status changed to ready
     
     10:29:58.400 [debug] <0.1715.0>/:file/ Got play request
     
     10:29:58.400 [debug] <0.1715.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:file, :muxer, :parser, :payloader, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413384.56764>, #Reference<0.2846893677.1757413384.56765>, #Reference<0.2846893677.1757413384.56766>, #Reference<0.2846893677.1757413384.56767>], status: :initializing}
     
     10:29:58.400 [debug] <0.1715.0>/:payloader/ Got play request
     
     10:29:58.400 [debug] <0.1715.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.400 [debug] <0.1715.0>/:muxer/ Got play request
     
     10:29:58.400 [debug] <0.1715.0>/:muxer/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: Membrane.MP4, type: :bytestream}
     
     
     10:29:58.400 [debug] <0.1715.0>/:parser/ Got play request
     
     10:29:58.400 [debug] <0.1715.0>/:sink/ Got play request
     
     10:29:58.400 [debug] <0.1715.0>/:sink/ received start of stream
     
     10:29:58.400 [debug] <0.1715.0>/:parser/ received start of stream
     
     10:29:58.400 [debug] <0.1715.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.400 [debug] <0.1715.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.400 [debug] <0.1715.0>/:payloader/ received start of stream
     
     10:29:58.400 [debug] <0.1715.0>/:muxer/ received start of stream
     
     10:29:58.406 [debug] <0.1715.0>/ Removing children: [:file, :muxer, :parser, :payloader, :sink]
     
     10:29:58.406 [debug] <0.1715.0>/:parser/ Received terminate request
     
     10:29:58.406 [debug] <0.1715.0>/:parser/ Terminating with reason :normal
     
     10:29:58.406 [debug] <0.1715.0>/:sink/ Received terminate request
     
     10:29:58.406 [debug] <0.1715.0>/:sink/ Terminating with reason :normal
     
     10:29:58.406 [debug] <0.1715.0>/:file/ Received terminate request
     
     10:29:58.406 [debug] <0.1715.0>/:muxer/ Received terminate request
     
     10:29:58.406 [debug] <0.1715.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.406 [debug] <0.1715.0>/:muxer/ Terminating with reason :normal
     
     10:29:58.406 [debug] <0.1715.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.406 [debug] <0.1715.0>/:payloader/ Received terminate request
     
     10:29:58.407 [debug] <0.1715.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.407 [debug] <0.1715.0>/:muxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.407 [debug] <0.1715.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.407 [debug] <0.1715.0>/:file/ Terminating with reason :normal
     
     10:29:58.407 [debug] <0.1715.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.407 [debug] <0.1715.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.407 [debug] <0.1715.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.407 [debug] <0.1715.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.409 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:video_payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:video_parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:video_file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :video_parser, from_pad: :output, from_pad_props: %{options: []}, to: :video_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_file, from_pad: :output, from_pad_props: %{options: []}, to: :video_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :video_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:audio_payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:audio_parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:audio_file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :audio_parser, from_pad: :output, from_pad_props: %{options: []}, to: :audio_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_file, from_pad: :output, from_pad_props: %{options: []}, to: :audio_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :audio_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_two_tracks.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}, %Membrane.ChildrenSpec.Builder{children: [], links: [%{from: :video_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :muxer}, %Membrane.ChildrenSpec.Builder{children: [], links: [%{from: :audio_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :muxer}], test_process: #PID<0.1756.0>],
     process options: []
     
     
     10:29:58.410 [debug] <0.1760.0>/ New spec with ref: #Reference<0.2846893677.1757413379.61521>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:video_payloader, Membrane.MP4.Payloader.H264, %{get_if_exists: false}}, {:video_parser, %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, %{get_if_exists: false}}, {:video_file, %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :video_parser, from_pad: :output, from_pad_props: %{options: []}, to: :video_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :video_file, from_pad: :output, from_pad_props: %{options: []}, to: :video_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :video_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:audio_payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:audio_parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:audio_file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :audio_parser, from_pad: :output, from_pad_props: %{options: []}, to: :audio_payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :audio_file, from_pad: :output, from_pad_props: %{options: []}, to: :audio_parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :audio_payloader}, %Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_two_tracks.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}, %Membrane.ChildrenSpec.Builder{children: [], links: [%{from: :video_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :muxer}, %Membrane.ChildrenSpec.Builder{children: [], links: [%{from: :audio_payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :muxer}]
     
     
     10:29:58.410 [debug] <0.1760.0>/ Starting children: [%Membrane.ChildEntry{name: :video_file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61521>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_parser, module: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61521>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :video_payloader, module: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61521>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.410 [debug] <0.1760.0>/ Starting child: name: :video_file, module: Membrane.File.Source in children group: nil
     
     10:29:58.410 [debug] <0.1760.0>/ subprocess supervisor Element start: :video_file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.410 [debug] <0.1760.0>/:video_file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_video.h264", chunk_size: 2048, seekable?: false}
     
     10:29:58.410 [debug] <0.1760.0>/ Starting child: name: :video_parser, module: Membrane.H264.FFmpeg.Parser in children group: nil
     
     10:29:58.410 [debug] <0.1760.0>/:video_file/ Component initialized
     
     10:29:58.410 [debug] <0.1760.0>/ subprocess supervisor Element start: :video_parser
     node: ,
     module: Membrane.H264.FFmpeg.Parser,
     element options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15},
     method: start
     
     
     10:29:58.410 [debug] <0.1760.0>/:video_parser/ Initializing element: Membrane.H264.FFmpeg.Parser, options: %Membrane.H264.FFmpeg.Parser{framerate: {30, 1}, sps: "", pps: "", alignment: :au, attach_nalus?: true, skip_until_keyframe?: false, skip_until_parameters?: true, max_frame_reorder: 15}
     
     10:29:58.410 [debug] <0.1760.0>/ Starting child: name: :video_payloader, module: Membrane.MP4.Payloader.H264 in children group: nil
     
     10:29:58.410 [debug] <0.1760.0>/:video_parser/ Component initialized
     
     10:29:58.410 [debug] <0.1760.0>/ subprocess supervisor Element start: :video_payloader
     node: ,
     module: Membrane.MP4.Payloader.H264,
     element options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false},
     method: start
     
     
     10:29:58.411 [debug] <0.1760.0>/:video_payloader/ Initializing element: Membrane.MP4.Payloader.H264, options: %Membrane.MP4.Payloader.H264{parameters_in_band?: false}
     
     10:29:58.411 [debug] <0.1760.0>/:video_payloader/ Component initialized
     
     10:29:58.411 [debug] <0.1760.0>/ Starting children: [%Membrane.ChildEntry{name: :audio_file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61521>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :audio_parser, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61521>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :audio_payloader, module: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61521>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.411 [debug] <0.1760.0>/ Starting child: name: :audio_file, module: Membrane.File.Source in children group: nil
     
     10:29:58.411 [debug] <0.1760.0>/ subprocess supervisor Element start: :audio_file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.411 [debug] <0.1760.0>/:audio_file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}
     
     10:29:58.411 [debug] <0.1760.0>/ Starting child: name: :audio_parser, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.411 [debug] <0.1760.0>/:audio_file/ Component initialized
     
     10:29:58.411 [debug] <0.1760.0>/ subprocess supervisor Element start: :audio_parser
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS},
     method: start
     
     
     10:29:58.411 [debug] <0.1760.0>/:audio_parser/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}
     
     10:29:58.411 [debug] <0.1760.0>/:audio_parser/ Component initialized
     
     10:29:58.411 [debug] <0.1760.0>/ Starting child: name: :audio_payloader, module: Membrane.MP4.Payloader.AAC in children group: nil
     
     10:29:58.411 [debug] <0.1760.0>/ subprocess supervisor Element start: :audio_payloader
     node: ,
     module: Membrane.MP4.Payloader.AAC,
     element options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0},
     method: start
     
     
     10:29:58.411 [debug] <0.1760.0>/:audio_payloader/ Initializing element: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}
     
     10:29:58.412 [debug] <0.1760.0>/:audio_payloader/ Component initialized
     
     10:29:58.412 [debug] <0.1760.0>/ Starting children: [%Membrane.ChildEntry{name: :muxer, module: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61521>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_two_tracks.mp4"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61521>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.412 [debug] <0.1760.0>/ Starting child: name: :muxer, module: Membrane.MP4.Muxer.ISOM in children group: nil
     
     10:29:58.412 [debug] <0.1760.0>/ subprocess supervisor Element start: :muxer
     node: ,
     module: Membrane.MP4.Muxer.ISOM,
     element options: %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000},
     method: start
     
     
     10:29:58.412 [debug] <0.1760.0>/:muxer/ Initializing element: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: false, chunk_duration: 1000000000}
     
     10:29:58.412 [debug] <0.1760.0>/:muxer/ Component initialized
     
     10:29:58.412 [debug] <0.1760.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.412 [debug] <0.1760.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/tmp/out_two_tracks.mp4"},
     method: start
     
     
     10:29:58.412 [debug] <0.1760.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_two_tracks.mp4"}
     
     10:29:58.413 [debug] <0.1760.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61521> startup: initializing, dependent specs: []
     
     10:29:58.413 [debug] <0.1760.0>/ Setup
     
     10:29:58.413 [debug] <0.1760.0>/ Component initialized
     
     10:29:58.413 [debug] <0.1760.0>/ Parent play
     
     10:29:58.413 [debug] <0.1760.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61521> startup: initializing, dependent specs: []
     
     10:29:58.413 [debug] <0.1760.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61521> startup: initializing, dependent specs: []
     
     10:29:58.413 [debug] <0.1760.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61521> startup: initializing, dependent specs: []
     
     10:29:58.413 [debug] <0.1760.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61521> startup: initializing, dependent specs: []
     
     10:29:58.413 [debug] <0.1760.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61521> startup: initializing, dependent specs: []
     
     10:29:58.413 [debug] <0.1760.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61521> startup: initializing, dependent specs: []
     
     10:29:58.413 [debug] <0.1760.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61521> startup: initializing, dependent specs: []
     
     10:29:58.413 [debug] <0.1760.0>/:sink/ Component initialized
     
     10:29:58.413 [debug] <0.1760.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61521> startup: initializing, dependent specs: []
     
     10:29:58.413 [debug] <0.1760.0>/ Spec #Reference<0.2846893677.1757413379.61521> status changed to initialized
     
     10:29:58.413 [debug] <0.1760.0>/ Spec #Reference<0.2846893677.1757413379.61521> status changed to linking internally
     
     10:29:58.413 [debug] <0.1760.0>/:video_file/ Element handle link on pad :output with pad :input of child :video_parser
     
     10:29:58.413 [debug] <0.1760.0>/:video_parser/ Element handle link on pad :input with pad :output of child :video_file
     
     10:29:58.414 [debug] <0.1760.0>/:video_parser/ Element handle link on pad :output with pad :input of child :video_payloader
     
     10:29:58.414 [debug] <0.1760.0>/:video_payloader/ Element handle link on pad :input with pad :output of child :video_parser
     
     10:29:58.414 [debug] <0.1760.0>/:audio_file/ Element handle link on pad :output with pad :input of child :audio_parser
     
     10:29:58.414 [debug] <0.1760.0>/:audio_parser/ Element handle link on pad :input with pad :output of child :audio_file
     
     10:29:58.414 [debug] <0.1760.0>/:audio_parser/ Element handle link on pad :output with pad :input of child :audio_payloader
     
     10:29:58.414 [debug] <0.1760.0>/:audio_payloader/ Element handle link on pad :input with pad :output of child :audio_parser
     
     10:29:58.414 [debug] <0.1760.0>/:muxer/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.414 [debug] <0.1760.0>/:sink/ Element handle link on pad :input with pad :output of child :muxer
     
     10:29:58.414 [debug] <0.1760.0>/:video_payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.58055>} of child :muxer
     
     10:29:58.414 [debug] <0.1760.0>/:muxer/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.58055>} with pad :output of child :video_payloader
     
     10:29:58.414 [debug] <0.1760.0>/:audio_payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.58056>} of child :muxer
     
     10:29:58.415 [debug] <0.1760.0>/:muxer/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.58056>} with pad :output of child :audio_payloader
     
     10:29:58.415 [debug] <0.1760.0>/ Spec #Reference<0.2846893677.1757413379.61521> status changed to linked internally
     
     10:29:58.415 [debug] <0.1760.0>/ Spec #Reference<0.2846893677.1757413379.61521> status changed to ready
     
     10:29:58.415 [debug] <0.1760.0>/:audio_file/ Got play request
     
     10:29:58.415 [debug] <0.1760.0>/:audio_payloader/ Got play request
     
     10:29:58.415 [debug] <0.1760.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:audio_file, :audio_parser, :audio_payloader, :muxer, :sink, :video_file, :video_parser, :video_payloader]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413379.61522>, #Reference<0.2846893677.1757413379.61523>, #Reference<0.2846893677.1757413379.61524>, #Reference<0.2846893677.1757413379.61525>, #Reference<0.2846893677.1757413379.61526>, #Reference<0.2846893677.1757413379.61527>, #Reference<0.2846893677.1757413379.61528>], status: :initializing}
     
     10:29:58.415 [debug] <0.1760.0>/:audio_file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.415 [debug] <0.1760.0>/:audio_parser/ Got play request
     
     10:29:58.415 [debug] <0.1760.0>/:video_file/ Got play request
     
     10:29:58.415 [debug] <0.1760.0>/:muxer/ Got play request
     
     10:29:58.415 [debug] <0.1760.0>/:video_file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.415 [debug] <0.1760.0>/:muxer/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: Membrane.MP4, type: :bytestream}
     
     
     10:29:58.415 [debug] <0.1760.0>/:video_payloader/ Got play request
     
     10:29:58.415 [debug] <0.1760.0>/:sink/ Got play request
     
     10:29:58.415 [debug] <0.1760.0>/:video_parser/ Got play request
     
     10:29:58.415 [debug] <0.1760.0>/:video_parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.415 [debug] <0.1760.0>/:sink/ received start of stream
     
     10:29:58.415 [debug] <0.1760.0>/:video_parser/ received start of stream
     
     10:29:58.415 [debug] <0.1760.0>/:audio_parser/ received start of stream
     
     10:29:58.415 [debug] <0.1760.0>/:audio_parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.415 [debug] <0.1760.0>/:audio_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.415 [debug] <0.1760.0>/:audio_payloader/ received start of stream
     
     10:29:58.415 [debug] <0.1760.0>/:video_parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: {30, 1}}
     
     
     10:29:58.415 [debug] <0.1760.0>/:muxer/ received start of stream
     
     10:29:58.416 [debug] <0.1760.0>/:video_payloader/ received start of stream
     
     10:29:58.416 [debug] <0.1760.0>/:video_payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 10, 255, 225, 0, 25, 103, 100, 0, 10, 172, 217, 71, 63, 158, 124, 4, 64, 0, 0, 3, 0, 64, 0, 0, 15, 3, 196, 137, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.416 [debug] <0.1760.0>/:muxer/ received start of stream
     
     10:29:58.418 [debug] <0.1173.0>/ Removing children: [:depayloader, :file, :payloader, :sink, {:parser, :in}, {:parser, :out}]
     
     10:29:58.418 [debug] <0.1173.0>/:depayloader/ Received terminate request
     
     10:29:58.418 [debug] <0.1173.0>/:sink/ Received terminate request
     
     10:29:58.418 [debug] <0.1173.0>/:depayloader/ Terminating with reason :normal
     
     10:29:58.418 [debug] <0.1173.0>/:sink/ Terminating with reason :normal
     
     10:29:58.418 [debug] <0.1173.0>/:file/ Received terminate request
     
     10:29:58.418 [debug] <0.1173.0>/{:parser, :in}/ Received terminate request
     
     10:29:58.418 [debug] <0.1173.0>/{:parser, :in}/ Terminating with reason :normal
     
     10:29:58.418 [debug] <0.1173.0>/{:parser, :out}/ Received terminate request
     
     10:29:58.418 [debug] <0.1173.0>/{:parser, :out}/ Terminating with reason :normal
     
     10:29:58.418 [debug] <0.1173.0>/:payloader/ Received terminate request
     
     10:29:58.418 [debug] <0.1173.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.419 [debug] <0.1173.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.419 [debug] <0.1173.0>/:depayloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.419 [debug] <0.1173.0>/{:parser, :out}/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.419 [debug] <0.1173.0>/{:parser, :in}/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.419 [debug] <0.1173.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.419 [debug] <0.1173.0>/:file/ Terminating with reason :normal
     
     10:29:58.419 [debug] <0.1173.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.419 [debug] <0.1173.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.419 [debug] <0.1173.0>/ subprocess supervisor exiting
     
     10:29:58.419 [debug] <0.1173.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.424 [debug] <0.1760.0>/ Removing children: [:audio_file, :audio_parser, :audio_payloader, :muxer, :sink, :video_file, :video_parser, :video_payloader]
     
     10:29:58.424 [debug] <0.1760.0>/:video_file/ Received terminate request
     
     10:29:58.424 [debug] <0.1760.0>/:muxer/ Received terminate request
     
     10:29:58.424 [debug] <0.1760.0>/:audio_parser/ Received terminate request
     
     10:29:58.424 [debug] <0.1760.0>/:muxer/ Terminating with reason :normal
     
     10:29:58.424 [debug] <0.1760.0>/:audio_payloader/ Received terminate request
     
     10:29:58.424 [debug] <0.1760.0>/:audio_parser/ Terminating with reason :normal
     
     10:29:58.425 [debug] <0.1760.0>/:audio_payloader/ Terminating with reason :normal
     
     10:29:58.425 [debug] <0.1760.0>/:video_payloader/ Received terminate request
     
     10:29:58.425 [debug] <0.1760.0>/:sink/ Received terminate request
     
     10:29:58.425 [debug] <0.1760.0>/:video_payloader/ Terminating with reason :normal
     
     10:29:58.425 [debug] <0.1760.0>/:sink/ Terminating with reason :normal
     
     10:29:58.425 [debug] <0.1760.0>/:video_parser/ Received terminate request
     
     10:29:58.425 [debug] <0.1760.0>/:video_parser/ Terminating with reason :normal
     
     10:29:58.425 [debug] <0.1760.0>/:audio_file/ Received terminate request
     
     10:29:58.425 [debug] <0.1760.0>/:audio_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.425 [debug] <0.1760.0>/:audio_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.425 [debug] <0.1760.0>/:video_payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.425 [debug] <0.1760.0>/:video_parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.425 [debug] <0.1760.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.425 [debug] <0.1760.0>/:muxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.425 [debug] <0.1760.0>/:video_file/ Terminating with reason :normal
     
     10:29:58.425 [debug] <0.1760.0>/:audio_file/ Terminating with reason :normal
     
     10:29:58.425 [debug] <0.1760.0>/:video_file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.425 [debug] <0.1760.0>/:audio_file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.425 [debug] <0.1760.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.425 [debug] <0.1760.0>/ subprocess supervisor exiting
     
     10:29:58.425 [debug] <0.1760.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.427 [debug] <0.1659.0>/ Removing children: [:demuxer, :depayloader, :file, :sink]
     
     10:29:58.427 [debug] <0.1659.0>/:demuxer/ Received terminate request
     
     10:29:58.427 [debug] <0.1659.0>/:demuxer/ Terminating with reason :normal
     
     10:29:58.427 [debug] <0.1659.0>/:depayloader/ Removing children: [:parser, :remote_stream_depayloader]
     
     10:29:58.427 [debug] <0.1659.0>/:depayloader/:parser/ Received terminate request
     
     10:29:58.427 [debug] <0.1659.0>/:depayloader/:remote_stream_depayloader/ Received terminate request
     
     10:29:58.427 [debug] <0.1659.0>/:depayloader/:remote_stream_depayloader/ Terminating with reason :normal
     
     10:29:58.427 [debug] <0.1659.0>/:depayloader/:parser/ Terminating with reason :normal
     
     10:29:58.427 [debug] <0.1659.0>/:sink/ Received terminate request
     
     10:29:58.427 [debug] <0.1659.0>/:file/ Received terminate request
     
     10:29:58.427 [debug] <0.1659.0>/:sink/ Terminating with reason :normal
     
     10:29:58.427 [debug] <0.1659.0>/:depayloader/:remote_stream_depayloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.427 [debug] <0.1659.0>/:depayloader/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.427 [debug] <0.1659.0>/:depayloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.427 [debug] <0.1659.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.427 [debug] <0.1659.0>/:demuxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.427 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_aac_fast_start.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1830.0>],
     process options: []
     
     
     10:29:58.427 [debug] <0.1659.0>/:file/ Terminating with reason :normal
     
     10:29:58.427 [debug] <0.1659.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.427 [debug] <0.1659.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.427 [debug] <0.1659.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.427 [debug] <0.1659.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.427 [debug] <0.1839.0>/ New spec with ref: #Reference<0.2846893677.1757413380.58379>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/tmp/out_aac_fast_start.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.428 [debug] <0.1839.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.58379>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.58379>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.58379>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :muxer, module: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.58379>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_aac_fast_start.mp4"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413380.58379>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.428 [debug] <0.1839.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.428 [debug] <0.1839.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.428 [debug] <0.1839.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}
     
     10:29:58.429 [debug] <0.1839.0>/ Starting child: name: :parser, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.429 [debug] <0.1839.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS},
     method: start
     
     
     10:29:58.429 [debug] <0.1839.0>/:parser/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}
     
     10:29:58.429 [debug] <0.1839.0>/:parser/ Component initialized
     
     10:29:58.429 [debug] <0.1839.0>/:file/ Component initialized
     
     10:29:58.429 [debug] <0.1839.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.AAC in children group: nil
     
     10:29:58.429 [debug] <0.1839.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.AAC,
     element options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0},
     method: start
     
     
     10:29:58.429 [debug] <0.1839.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}
     
     10:29:58.429 [debug] <0.1839.0>/:payloader/ Component initialized
     
     10:29:58.429 [debug] <0.1839.0>/ Starting child: name: :muxer, module: Membrane.MP4.Muxer.ISOM in children group: nil
     
     10:29:58.429 [debug] <0.1839.0>/ subprocess supervisor Element start: :muxer
     node: ,
     module: Membrane.MP4.Muxer.ISOM,
     element options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000},
     method: start
     
     
     10:29:58.429 [debug] <0.1839.0>/:muxer/ Initializing element: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}
     
     10:29:58.429 [debug] <0.1839.0>/:muxer/ Component initialized
     
     10:29:58.429 [debug] <0.1839.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.429 [debug] <0.1839.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/tmp/out_aac_fast_start.mp4"},
     method: start
     
     
     10:29:58.430 [debug] <0.1839.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/tmp/out_aac_fast_start.mp4"}
     
     10:29:58.430 [debug] <0.1839.0>/ Proceeding spec #Reference<0.2846893677.1757413380.58379> startup: initializing, dependent specs: []
     
     10:29:58.430 [debug] <0.1839.0>/ Setup
     
     10:29:58.430 [debug] <0.1839.0>/ Component initialized
     
     10:29:58.430 [debug] <0.1839.0>/ Parent play
     
     10:29:58.430 [debug] <0.1839.0>/ Proceeding spec #Reference<0.2846893677.1757413380.58379> startup: initializing, dependent specs: []
     
     10:29:58.430 [debug] <0.1839.0>/ Proceeding spec #Reference<0.2846893677.1757413380.58379> startup: initializing, dependent specs: []
     
     10:29:58.430 [debug] <0.1839.0>/ Proceeding spec #Reference<0.2846893677.1757413380.58379> startup: initializing, dependent specs: []
     
     10:29:58.430 [debug] <0.1839.0>/ Proceeding spec #Reference<0.2846893677.1757413380.58379> startup: initializing, dependent specs: []
     
     10:29:58.430 [debug] <0.1839.0>/:sink/ Component initialized
     
     10:29:58.430 [debug] <0.1839.0>/ Proceeding spec #Reference<0.2846893677.1757413380.58379> startup: initializing, dependent specs: []
     
     10:29:58.430 [debug] <0.1839.0>/ Spec #Reference<0.2846893677.1757413380.58379> status changed to initialized
     
     10:29:58.430 [debug] <0.1839.0>/ Spec #Reference<0.2846893677.1757413380.58379> status changed to linking internally
     
     10:29:58.430 [debug] <0.1839.0>/:file/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.430 [debug] <0.1839.0>/:parser/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.430 [debug] <0.1839.0>/:parser/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.430 [debug] <0.1839.0>/:payloader/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.430 [debug] <0.1839.0>/:payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413382.58472>} of child :muxer
     
     10:29:58.430 [debug] <0.1839.0>/:muxer/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413382.58472>} with pad :output of child :payloader
     
     10:29:58.431 [debug] <0.1839.0>/:muxer/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.431 [debug] <0.1839.0>/:sink/ Element handle link on pad :input with pad :output of child :muxer
     
     10:29:58.431 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1866.0>],
     process options: []
     
     
     10:29:58.431 [debug] <0.1839.0>/ Spec #Reference<0.2846893677.1757413380.58379> status changed to linked internally
     
     10:29:58.431 [debug] <0.1839.0>/ Spec #Reference<0.2846893677.1757413380.58379> status changed to ready
     
     10:29:58.431 [debug] <0.1839.0>/:sink/ Got play request
     
     10:29:58.431 [debug] <0.1839.0>/:file/ Got play request
     
     10:29:58.431 [debug] <0.1839.0>/:payloader/ Got play request
     
     10:29:58.431 [debug] <0.1839.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:file, :muxer, :parser, :payloader, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413381.58338>, #Reference<0.2846893677.1757413381.58339>, #Reference<0.2846893677.1757413381.58340>, #Reference<0.2846893677.1757413381.58341>], status: :initializing}
     
     10:29:58.431 [debug] <0.1839.0>/:muxer/ Got play request
     
     10:29:58.431 [debug] <0.1839.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.431 [debug] <0.1839.0>/:parser/ Got play request
     
     10:29:58.431 [debug] <0.1839.0>/:muxer/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: Membrane.MP4, type: :bytestream}
     
     
     10:29:58.431 [debug] <0.1839.0>/:sink/ received start of stream
     
     10:29:58.431 [debug] <0.1839.0>/:parser/ received start of stream
     
     10:29:58.431 [debug] <0.1879.0>/ New spec with ref: #Reference<0.2846893677.1757413379.61778>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out.mp4"}, %{get_if_exists: false}}, {:muxer, %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, %{get_if_exists: false}}, {:payloader, Membrane.MP4.Payloader.AAC, %{get_if_exists: false}}, {:parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :muxer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :payloader, from_pad: :output, from_pad_props: %{options: []}, to: :muxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :payloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.431 [debug] <0.1839.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.431 [debug] <0.1839.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.431 [debug] <0.1839.0>/:payloader/ received start of stream
     
     10:29:58.431 [debug] <0.1879.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61778>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61778>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :payloader, module: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61778>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :muxer, module: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61778>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out.mp4"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.61778>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.431 [debug] <0.1839.0>/:muxer/ received start of stream
     
     10:29:58.431 [debug] <0.1879.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.431 [debug] <0.1879.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.431 [debug] <0.1879.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/in_audio.aac", chunk_size: 2048, seekable?: false}
     
     10:29:58.432 [debug] <0.1879.0>/ Starting child: name: :parser, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.432 [debug] <0.1879.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS},
     method: start
     
     
     10:29:58.432 [debug] <0.1879.0>/:parser/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :none, in_encapsulation: :ADTS}
     
     10:29:58.432 [debug] <0.1879.0>/:parser/ Component initialized
     
     10:29:58.432 [debug] <0.1879.0>/:file/ Component initialized
     
     10:29:58.432 [debug] <0.1879.0>/ Starting child: name: :payloader, module: Membrane.MP4.Payloader.AAC in children group: nil
     
     10:29:58.432 [debug] <0.1879.0>/ subprocess supervisor Element start: :payloader
     node: ,
     module: Membrane.MP4.Payloader.AAC,
     element options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0},
     method: start
     
     
     10:29:58.432 [debug] <0.1879.0>/:payloader/ Initializing element: Membrane.MP4.Payloader.AAC, options: %Membrane.MP4.Payloader.AAC{avg_bit_rate: 0, max_bit_rate: 0}
     
     10:29:58.432 [debug] <0.1879.0>/:payloader/ Component initialized
     
     10:29:58.432 [debug] <0.1879.0>/ Starting child: name: :muxer, module: Membrane.MP4.Muxer.ISOM in children group: nil
     
     10:29:58.432 [debug] <0.1879.0>/ subprocess supervisor Element start: :muxer
     node: ,
     module: Membrane.MP4.Muxer.ISOM,
     element options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000},
     method: start
     
     
     10:29:58.432 [debug] <0.1879.0>/:muxer/ Initializing element: Membrane.MP4.Muxer.ISOM, options: %Membrane.MP4.Muxer.ISOM{fast_start: true, chunk_duration: 1000000000}
     
     10:29:58.432 [debug] <0.1879.0>/:muxer/ Component initialized
     
     10:29:58.432 [debug] <0.1879.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.432 [debug] <0.1879.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out.mp4"},
     method: start
     
     
     10:29:58.432 [debug] <0.1879.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out.mp4"}
     
     10:29:58.432 [debug] <0.1879.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61778> startup: initializing, dependent specs: []
     
     10:29:58.432 [debug] <0.1879.0>/ Setup
     
     10:29:58.432 [debug] <0.1879.0>/ Component initialized
     
     10:29:58.432 [debug] <0.1879.0>/ Parent play
     
     10:29:58.433 [debug] <0.1879.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61778> startup: initializing, dependent specs: []
     
     10:29:58.433 [debug] <0.1879.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61778> startup: initializing, dependent specs: []
     
     10:29:58.433 [debug] <0.1879.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61778> startup: initializing, dependent specs: []
     
     10:29:58.433 [debug] <0.1879.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61778> startup: initializing, dependent specs: []
     
     10:29:58.433 [debug] <0.1879.0>/:sink/ Component initialized
     
     10:29:58.433 [debug] <0.1879.0>/ Proceeding spec #Reference<0.2846893677.1757413379.61778> startup: initializing, dependent specs: []
     
     10:29:58.433 [debug] <0.1879.0>/ Spec #Reference<0.2846893677.1757413379.61778> status changed to initialized
     
     10:29:58.433 [debug] <0.1879.0>/ Spec #Reference<0.2846893677.1757413379.61778> status changed to linking internally
     
     10:29:58.433 [debug] <0.1879.0>/:file/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.433 [debug] <0.1879.0>/:parser/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.433 [debug] <0.1879.0>/:parser/ Element handle link on pad :output with pad :input of child :payloader
     
     10:29:58.433 [debug] <0.1879.0>/:payloader/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.433 [debug] <0.1879.0>/:payloader/ Element handle link on pad :output with pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.58424>} of child :muxer
     
     10:29:58.433 [debug] <0.1879.0>/:muxer/ Element handle link on pad {Membrane.Pad, :input, #Reference<0.2846893677.1757413381.58424>} with pad :output of child :payloader
     
     10:29:58.433 [debug] <0.1879.0>/:muxer/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.433 [debug] <0.1879.0>/:sink/ Element handle link on pad :input with pad :output of child :muxer
     
     10:29:58.433 [debug] <0.1879.0>/ Spec #Reference<0.2846893677.1757413379.61778> status changed to linked internally
     
     10:29:58.433 [debug] <0.1879.0>/ Spec #Reference<0.2846893677.1757413379.61778> status changed to ready
     
     10:29:58.433 [debug] <0.1879.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:file, :muxer, :parser, :payloader, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413379.61779>, #Reference<0.2846893677.1757413379.61780>, #Reference<0.2846893677.1757413379.61781>, #Reference<0.2846893677.1757413379.61782>], status: :initializing}
     
     10:29:58.433 [debug] <0.1879.0>/:file/ Got play request
     
     10:29:58.433 [debug] <0.1879.0>/:muxer/ Got play request
     
     10:29:58.433 [debug] <0.1879.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.433 [debug] <0.1879.0>/:muxer/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: Membrane.MP4, type: :bytestream}
     
     
     10:29:58.433 [debug] <0.1879.0>/:parser/ Got play request
     
     10:29:58.433 [debug] <0.1879.0>/:payloader/ Got play request
     
     10:29:58.433 [debug] <0.1879.0>/:sink/ Got play request
     
     10:29:58.433 [debug] <0.1879.0>/:sink/ received start of stream
     
     10:29:58.434 [debug] <0.1879.0>/:parser/ received start of stream
     
     10:29:58.434 [debug] <0.1879.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.434 [debug] <0.1879.0>/:payloader/ Sending stream format through pad :output
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.434 [debug] <0.1879.0>/:payloader/ received start of stream
     
     10:29:58.434 [debug] <0.1879.0>/:muxer/ received start of stream
     
     10:29:58.443 [debug] <0.1839.0>/ Removing children: [:file, :muxer, :parser, :payloader, :sink]
     
     10:29:58.443 [debug] <0.1839.0>/:sink/ Received terminate request
     
     10:29:58.443 [debug] <0.1839.0>/:muxer/ Received terminate request
     
     10:29:58.443 [debug] <0.1839.0>/:sink/ Terminating with reason :normal
     
     10:29:58.443 [debug] <0.1839.0>/:muxer/ Terminating with reason :normal
     
     10:29:58.443 [debug] <0.1839.0>/:file/ Received terminate request
     
     10:29:58.443 [debug] <0.1839.0>/:parser/ Received terminate request
     
     10:29:58.443 [debug] <0.1839.0>/:parser/ Terminating with reason :normal
     
     10:29:58.443 [debug] <0.1839.0>/:payloader/ Received terminate request
     
     10:29:58.443 [debug] <0.1839.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.443 [debug] <0.1839.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.443 [debug] <0.1839.0>/:muxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.443 [debug] <0.1839.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.443 [debug] <0.1839.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.443 [debug] <0.1839.0>/:file/ Terminating with reason :normal
     
     10:29:58.443 [debug] <0.1839.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.444 [debug] <0.1839.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.444 [debug] <0.1839.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.444 [debug] <0.1839.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.446 [debug] <0.1879.0>/ Removing children: [:file, :muxer, :parser, :payloader, :sink]
     
     10:29:58.446 [debug] <0.1879.0>/:muxer/ Received terminate request
     
     10:29:58.446 [debug] <0.1879.0>/:file/ Received terminate request
     
     10:29:58.446 [debug] <0.1879.0>/:muxer/ Terminating with reason :normal
     
     10:29:58.446 [debug] <0.1879.0>/:parser/ Received terminate request
     
     10:29:58.446 [debug] <0.1879.0>/:payloader/ Received terminate request
     
     10:29:58.446 [debug] <0.1879.0>/:parser/ Terminating with reason :normal
     
     10:29:58.446 [debug] <0.1879.0>/:sink/ Received terminate request
     
     10:29:58.446 [debug] <0.1879.0>/:payloader/ Terminating with reason :normal
     
     10:29:58.446 [debug] <0.1879.0>/:sink/ Terminating with reason :normal
     
     10:29:58.446 [debug] <0.1879.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.446 [debug] <0.1879.0>/:file/ Terminating with reason :normal
     
     10:29:58.446 [debug] <0.1879.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.446 [debug] <0.1879.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.446 [debug] <0.1879.0>/:muxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.446 [debug] <0.1879.0>/:payloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.446 [debug] <0.1879.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.446 [debug] <0.1879.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.447 [debug] <0.1879.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.447 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out_audio.aac"}, %{get_if_exists: false}}, {:parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :ADTS, in_encapsulation: :none}, %{get_if_exists: false}}, {:depayloader, Membrane.MP4.Depayloader.AAC, %{get_if_exists: false}}, {:demuxer, Membrane.MP4.Demuxer.ISOM, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out.mp4", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :depayloader, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :demuxer, from_pad: {Membrane.Pad, :output, 1}, from_pad_props: %{options: []}, to: :depayloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :demuxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1866.0>],
     process options: []
     
     
     10:29:58.447 [debug] <0.1928.0>/ New spec with ref: #Reference<0.2846893677.1757413381.58443>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out_audio.aac"}, %{get_if_exists: false}}, {:parser, %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :ADTS, in_encapsulation: :none}, %{get_if_exists: false}}, {:depayloader, Membrane.MP4.Depayloader.AAC, %{get_if_exists: false}}, {:demuxer, Membrane.MP4.Demuxer.ISOM, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out.mp4", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :depayloader, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :demuxer, from_pad: {Membrane.Pad, :output, 1}, from_pad_props: %{options: []}, to: :depayloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :demuxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.447 [debug] <0.1928.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out.mp4", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.58443>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :demuxer, module: Membrane.MP4.Demuxer.ISOM, options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.58443>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :depayloader, module: Membrane.MP4.Depayloader.AAC, options: nil, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.58443>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :ADTS, in_encapsulation: :none}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.58443>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out_audio.aac"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413381.58443>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.447 [debug] <0.1928.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.447 [debug] <0.1928.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out.mp4", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.448 [debug] <0.1928.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out.mp4", chunk_size: 2048, seekable?: false}
     
     10:29:58.448 [debug] <0.1928.0>/ Starting child: name: :demuxer, module: Membrane.MP4.Demuxer.ISOM in children group: nil
     
     10:29:58.448 [debug] <0.1928.0>/ subprocess supervisor Element start: :demuxer
     node: ,
     module: Membrane.MP4.Demuxer.ISOM,
     element options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: false},
     method: start
     
     
     10:29:58.448 [debug] <0.1928.0>/:file/ Component initialized
     
     10:29:58.448 [debug] <0.1928.0>/:demuxer/ Initializing element: Membrane.MP4.Demuxer.ISOM, options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: false}
     
     10:29:58.448 [debug] <0.1928.0>/:demuxer/ Component initialized
     
     10:29:58.448 [debug] <0.1928.0>/ Starting child: name: :depayloader, module: Membrane.MP4.Depayloader.AAC in children group: nil
     
     10:29:58.448 [debug] <0.1928.0>/ subprocess supervisor Element start: :depayloader
     node: ,
     module: Membrane.MP4.Depayloader.AAC,
     element options: nil,
     method: start
     
     
     10:29:58.448 [debug] <0.1928.0>/:depayloader/ Initializing element: Membrane.MP4.Depayloader.AAC, options: nil
     
     10:29:58.448 [debug] <0.1928.0>/:depayloader/ Component initialized
     
     10:29:58.448 [debug] <0.1928.0>/ Starting child: name: :parser, module: Membrane.AAC.Parser in children group: nil
     
     10:29:58.448 [debug] <0.1928.0>/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.AAC.Parser,
     element options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :ADTS, in_encapsulation: :none},
     method: start
     
     
     10:29:58.448 [debug] <0.1928.0>/:parser/ Initializing element: Membrane.AAC.Parser, options: %Membrane.AAC.Parser{samples_per_frame: 1024, out_encapsulation: :ADTS, in_encapsulation: :none}
     
     10:29:58.448 [debug] <0.1928.0>/:parser/ Component initialized
     
     10:29:58.448 [debug] <0.1928.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.448 [debug] <0.1928.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out_audio.aac"},
     method: start
     
     
     10:29:58.448 [debug] <0.1928.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-Demuxer-and-depayloader-should-allow-for-reading-of-a-single-AAC-track-55e3a0bd/out_audio.aac"}
     
     10:29:58.449 [debug] <0.1928.0>/ Proceeding spec #Reference<0.2846893677.1757413381.58443> startup: initializing, dependent specs: []
     
     10:29:58.449 [debug] <0.1928.0>/ Setup
     
     10:29:58.449 [debug] <0.1928.0>/ Component initialized
     
     10:29:58.449 [debug] <0.1928.0>/ Parent play
     
     10:29:58.449 [debug] <0.1928.0>/ Proceeding spec #Reference<0.2846893677.1757413381.58443> startup: initializing, dependent specs: []
     
     10:29:58.449 [debug] <0.1928.0>/ Proceeding spec #Reference<0.2846893677.1757413381.58443> startup: initializing, dependent specs: []
     
     10:29:58.449 [debug] <0.1928.0>/ Proceeding spec #Reference<0.2846893677.1757413381.58443> startup: initializing, dependent specs: []
     
     10:29:58.449 [debug] <0.1928.0>/ Proceeding spec #Reference<0.2846893677.1757413381.58443> startup: initializing, dependent specs: []
     
     10:29:58.449 [debug] <0.1928.0>/:sink/ Component initialized
     
     10:29:58.449 [debug] <0.1928.0>/ Proceeding spec #Reference<0.2846893677.1757413381.58443> startup: initializing, dependent specs: []
     
     10:29:58.449 [debug] <0.1928.0>/ Spec #Reference<0.2846893677.1757413381.58443> status changed to initialized
     
     10:29:58.449 [debug] <0.1928.0>/ Spec #Reference<0.2846893677.1757413381.58443> status changed to linking internally
     
     10:29:58.449 [debug] <0.1928.0>/:file/ Element handle link on pad :output with pad :input of child :demuxer
     
     10:29:58.449 [debug] <0.1928.0>/:demuxer/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.449 [debug] <0.1928.0>/:demuxer/ Element handle link on pad {Membrane.Pad, :output, 1} with pad :input of child :depayloader
     
     10:29:58.449 [debug] <0.1928.0>/:depayloader/ Element handle link on pad :input with pad {Membrane.Pad, :output, 1} of child :demuxer
     
     10:29:58.449 [debug] <0.1928.0>/:depayloader/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.449 [debug] <0.1928.0>/:parser/ Element handle link on pad :input with pad :output of child :depayloader
     
     10:29:58.449 [debug] <0.1928.0>/:parser/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.449 [debug] <0.1928.0>/:sink/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.449 [debug] <0.1928.0>/ Spec #Reference<0.2846893677.1757413381.58443> status changed to linked internally
     
     10:29:58.449 [debug] <0.1928.0>/ Spec #Reference<0.2846893677.1757413381.58443> status changed to ready
     
     10:29:58.449 [debug] <0.1928.0>/:file/ Got play request
     
     10:29:58.449 [debug] <0.1928.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:demuxer, :depayloader, :file, :parser, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413381.58444>, #Reference<0.2846893677.1757413381.58445>, #Reference<0.2846893677.1757413381.58446>, #Reference<0.2846893677.1757413381.58447>], status: :initializing}
     
     10:29:58.449 [debug] <0.1928.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.449 [debug] <0.1928.0>/:parser/ Got play request
     
     10:29:58.449 [debug] <0.1928.0>/:demuxer/ Got play request
     
     10:29:58.449 [debug] <0.1928.0>/:depayloader/ Got play request
     
     10:29:58.449 [debug] <0.1928.0>/:depayloader/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.449 [debug] <0.1928.0>/:sink/ Got play request
     
     10:29:58.449 [debug] <0.1928.0>/:demuxer/ received start of stream
     
     10:29:58.450 [debug] <0.1928.0>/:demuxer/ Sending stream format through pad {Membrane.Pad, :output, 1}
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AAC{esds: <<3, 128, 128, 128, 34, 0, 1, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 128, 128, 128, 2, 18, 8, 6, 128, 128, 128, 1, 2>>, sample_rate: 44100, channels: 1}, timescale: 44100, height: 0, width: 0}
     
     
     10:29:58.450 [debug] <0.1928.0>/:depayloader/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :none}
     
     
     10:29:58.450 [debug] <0.1928.0>/:depayloader/ received start of stream
     
     10:29:58.450 [debug] <0.1928.0>/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.AAC{profile: :LC, sample_rate: 44100, channels: 1, mpeg_version: 2, samples_per_frame: 1024, frames_per_buffer: 1, encapsulation: :ADTS}
     
     
     10:29:58.450 [debug] <0.1928.0>/:parser/ received start of stream
     
     10:29:58.450 [debug] <0.1928.0>/:sink/ received start of stream
     
     10:29:58.463 [debug] <0.1928.0>/ Removing children: [:demuxer, :depayloader, :file, :parser, :sink]
     
     10:29:58.463 [debug] <0.1928.0>/:depayloader/ Received terminate request
     
     10:29:58.463 [debug] <0.1928.0>/:demuxer/ Received terminate request
     
     10:29:58.463 [debug] <0.1928.0>/:depayloader/ Terminating with reason :normal
     
     10:29:58.463 [debug] <0.1928.0>/:demuxer/ Terminating with reason :normal
     
     10:29:58.463 [debug] <0.1928.0>/:file/ Received terminate request
     
     10:29:58.463 [debug] <0.1928.0>/:parser/ Received terminate request
     
     10:29:58.463 [debug] <0.1928.0>/:parser/ Terminating with reason :normal
     
     10:29:58.463 [debug] <0.1928.0>/:sink/ Received terminate request
     
     10:29:58.463 [debug] <0.1928.0>/:sink/ Terminating with reason :normal
     
     10:29:58.463 [debug] <0.1928.0>/:depayloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.463 [debug] <0.1928.0>/:demuxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.463 [debug] <0.1928.0>/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.463 [debug] <0.1928.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.463 [debug] <0.1928.0>/:file/ Terminating with reason :normal
     
     10:29:58.463 [debug] <0.1928.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.463 [debug] <0.1928.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.464 [debug] <0.1928.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.464 [debug] <0.1928.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:29:58.467 [debug] Pipeline start link: module: Membrane.Testing.Pipeline,
     pipeline options: [spec: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-the-PTS-and-DTS-are-properly-read-afcd0d41/out.ms"}, %{get_if_exists: false}}, {:serializer, Membrane.Stream.Serializer, %{get_if_exists: false}}, {:depayloader_video, Membrane.MP4.Depayloader.H264, %{get_if_exists: false}}, {:demuxer, Membrane.MP4.Demuxer.ISOM, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/isom/ref_video_fast_start.mp4", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :serializer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :depayloader_video, from_pad: :output, from_pad_props: %{options: []}, to: :serializer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :demuxer, from_pad: {Membrane.Pad, :output, 1}, from_pad_props: %{options: []}, to: :depayloader_video, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :demuxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}], test_process: #PID<0.1968.0>],
     process options: []
     
     
     10:29:58.467 [debug] <0.1972.0>/ New spec with ref: #Reference<0.2846893677.1757413379.62510>
     specification: [%Membrane.ChildrenSpec.Builder{children: [{:sink, %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-the-PTS-and-DTS-are-properly-read-afcd0d41/out.ms"}, %{get_if_exists: false}}, {:serializer, Membrane.Stream.Serializer, %{get_if_exists: false}}, {:depayloader_video, Membrane.MP4.Depayloader.H264, %{get_if_exists: false}}, {:demuxer, Membrane.MP4.Demuxer.ISOM, %{get_if_exists: false}}, {:file, %Membrane.File.Source{location: "test/fixtures/isom/ref_video_fast_start.mp4", chunk_size: 2048, seekable?: false}, %{get_if_exists: false}}], links: [%{from: :serializer, from_pad: :output, from_pad_props: %{options: []}, to: :sink, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :depayloader_video, from_pad: :output, from_pad_props: %{options: []}, to: :serializer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :demuxer, from_pad: {Membrane.Pad, :output, 1}, from_pad_props: %{options: []}, to: :depayloader_video, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: :file, from_pad: :output, from_pad_props: %{options: []}, to: :demuxer, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}, link_starting_child: :sink}]
     
     
     10:29:58.467 [debug] <0.1972.0>/ Starting children: [%Membrane.ChildEntry{name: :file, module: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/isom/ref_video_fast_start.mp4", chunk_size: 2048, seekable?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.62510>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :demuxer, module: Membrane.MP4.Demuxer.ISOM, options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: false}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.62510>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :depayloader_video, module: Membrane.MP4.Depayloader.H264, options: nil, component_type: :bin, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.62510>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :serializer, module: Membrane.Stream.Serializer, options: %Membrane.Stream.Serializer{version: 1}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.62510>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :sink, module: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-the-PTS-and-DTS-are-properly-read-afcd0d41/out.ms"}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413379.62510>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.467 [debug] <0.1972.0>/ Starting child: name: :file, module: Membrane.File.Source in children group: nil
     
     10:29:58.468 [debug] <0.1972.0>/ subprocess supervisor Element start: :file
     node: ,
     module: Membrane.File.Source,
     element options: %Membrane.File.Source{location: "test/fixtures/isom/ref_video_fast_start.mp4", chunk_size: 2048, seekable?: false},
     method: start
     
     
     10:29:58.468 [debug] <0.1972.0>/:file/ Initializing element: Membrane.File.Source, options: %Membrane.File.Source{location: "test/fixtures/isom/ref_video_fast_start.mp4", chunk_size: 2048, seekable?: false}
     
     10:29:58.468 [debug] <0.1972.0>/ Starting child: name: :demuxer, module: Membrane.MP4.Demuxer.ISOM in children group: nil
     
     10:29:58.468 [debug] <0.1972.0>/ subprocess supervisor Element start: :demuxer
     node: ,
     module: Membrane.MP4.Demuxer.ISOM,
     element options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: false},
     method: start
     
     
     10:29:58.468 [debug] <0.1972.0>/:file/ Component initialized
     
     10:29:58.468 [debug] <0.1972.0>/:demuxer/ Initializing element: Membrane.MP4.Demuxer.ISOM, options: %Membrane.MP4.Demuxer.ISOM{optimize_for_non_fast_start?: false}
     
     10:29:58.468 [debug] <0.1972.0>/:demuxer/ Component initialized
     
     10:29:58.468 [debug] <0.1972.0>/ Starting child: name: :depayloader_video, module: Membrane.MP4.Depayloader.H264 in children group: nil
     
     10:29:58.468 [debug] <0.1972.0>/ subprocess supervisor Bin start: :depayloader_video
     node: ,
     module: Membrane.MP4.Depayloader.H264,
     bin options: nil
     
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ New spec with ref: #Reference<0.2846893677.1757413382.58738>
     specification: %Membrane.ChildrenSpec.Builder{children: [{:parser, Membrane.H264.Parser, %{get_if_exists: false}}, {:remote_stream_depayloader, Membrane.MP4.Depayloader.H264.Filter, %{get_if_exists: false}}], links: [%{from: :parser, from_pad: :output, from_pad_props: %{options: []}, to: {Membrane.Bin, :itself}, to_pad: :output, to_pad_props: %{}}, %{from: :remote_stream_depayloader, from_pad: :output, from_pad_props: %{options: []}, to: :parser, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}, %{from: {Membrane.Bin, :itself}, from_pad: :input, from_pad_props: %{}, to: :remote_stream_depayloader, to_pad: :input, to_pad_props: %{auto_demand_size: nil, min_demand_factor: nil, options: [], target_queue_size: nil, throttling_factor: nil, toilet_capacity: nil}}], status: :done, from_pad: :output, from_pad_props: %{options: []}, to_pad: :output, to_pad_props: %{}, link_starting_child: {Membrane.Bin, :itself}}
     
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Starting children: [%Membrane.ChildEntry{name: :remote_stream_depayloader, module: Membrane.MP4.Depayloader.H264.Filter, options: nil, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.58738>, group: nil, initialized?: false, ready?: false, terminating?: false}, %Membrane.ChildEntry{name: :parser, module: Membrane.H264.Parser, options: %Membrane.H264.Parser{sps: "", pps: "", framerate: nil}, component_type: :element, pid: nil, clock: nil, sync: nil, spec_ref: #Reference<0.2846893677.1757413382.58738>, group: nil, initialized?: false, ready?: false, terminating?: false}] in children group: nil
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Starting child: name: :remote_stream_depayloader, module: Membrane.MP4.Depayloader.H264.Filter in children group: nil
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ subprocess supervisor Element start: :remote_stream_depayloader
     node: ,
     module: Membrane.MP4.Depayloader.H264.Filter,
     element options: nil,
     method: start
     
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/:remote_stream_depayloader/ Initializing element: Membrane.MP4.Depayloader.H264.Filter, options: nil
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/:remote_stream_depayloader/ Component initialized
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Starting child: name: :parser, module: Membrane.H264.Parser in children group: nil
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ subprocess supervisor Element start: :parser
     node: ,
     module: Membrane.H264.Parser,
     element options: %Membrane.H264.Parser{sps: "", pps: "", framerate: nil},
     method: start
     
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/:parser/ Initializing element: Membrane.H264.Parser, options: %Membrane.H264.Parser{sps: "", pps: "", framerate: nil}
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/:parser/ Component initialized
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Proceeding spec #Reference<0.2846893677.1757413382.58738> startup: initializing, dependent specs: []
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Setup
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Component initialized
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Proceeding spec #Reference<0.2846893677.1757413382.58738> startup: initializing, dependent specs: []
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Proceeding spec #Reference<0.2846893677.1757413382.58738> startup: initializing, dependent specs: []
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Spec #Reference<0.2846893677.1757413382.58738> status changed to initialized
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Got internal link request, pad ref :input, child :remote_stream_depayloader, spec #Reference<0.2846893677.1757413382.58738>
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Got internal link request, pad ref :output, child :parser, spec #Reference<0.2846893677.1757413382.58738>
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Spec #Reference<0.2846893677.1757413382.58738> status changed to linking internally
     
     10:29:58.469 [debug] <0.1972.0>/ Starting child: name: :serializer, module: Membrane.Stream.Serializer in children group: nil
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/:remote_stream_depayloader/ Element handle link on pad :output with pad :input of child :parser
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/:parser/ Element handle link on pad :input with pad :output of child :remote_stream_depayloader
     
     10:29:58.469 [debug] <0.1972.0>/ subprocess supervisor Element start: :serializer
     node: ,
     module: Membrane.Stream.Serializer,
     element options: %Membrane.Stream.Serializer{version: 1},
     method: start
     
     
     10:29:58.469 [debug] <0.1972.0>/:serializer/ Initializing element: Membrane.Stream.Serializer, options: %Membrane.Stream.Serializer{version: 1}
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Spec #Reference<0.2846893677.1757413382.58738> status changed to linked internally
     
     10:29:58.469 [debug] <0.1972.0>/:depayloader_video/ Spec #Reference<0.2846893677.1757413382.58738> status changed to linking externally
     
     10:29:58.471 [debug] <0.1972.0>/:serializer/ Component initialized
     
     10:29:58.471 [debug] <0.1972.0>/ Starting child: name: :sink, module: Membrane.File.Sink in children group: nil
     
     10:29:58.471 [debug] <0.1972.0>/ subprocess supervisor Element start: :sink
     node: ,
     module: Membrane.File.Sink,
     element options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-the-PTS-and-DTS-are-properly-read-afcd0d41/out.ms"},
     method: start
     
     
     10:29:58.471 [debug] <0.1972.0>/:sink/ Initializing element: Membrane.File.Sink, options: %Membrane.File.Sink{location: "/Users/lukaszkita/sebex/membrane_mp4_plugin/tmp/Membrane.MP4.Demuxer.ISOM.IntegrationTest/test-the-PTS-and-DTS-are-properly-read-afcd0d41/out.ms"}
     
     10:29:58.472 [debug] <0.1972.0>/ Proceeding spec #Reference<0.2846893677.1757413379.62510> startup: initializing, dependent specs: []
     
     10:29:58.472 [debug] <0.1972.0>/ Setup
     
     10:29:58.472 [debug] <0.1972.0>/ Component initialized
     
     10:29:58.472 [debug] <0.1972.0>/ Parent play
     
     10:29:58.472 [debug] <0.1972.0>/ Proceeding spec #Reference<0.2846893677.1757413379.62510> startup: initializing, dependent specs: []
     
     10:29:58.472 [debug] <0.1972.0>/ Proceeding spec #Reference<0.2846893677.1757413379.62510> startup: initializing, dependent specs: []
     
     10:29:58.472 [debug] <0.1972.0>/ Proceeding spec #Reference<0.2846893677.1757413379.62510> startup: initializing, dependent specs: []
     
     10:29:58.472 [debug] <0.1972.0>/ Proceeding spec #Reference<0.2846893677.1757413379.62510> startup: initializing, dependent specs: []
     
     10:29:58.472 [debug] <0.1972.0>/:sink/ Component initialized
     
     10:29:58.472 [debug] <0.1972.0>/ Proceeding spec #Reference<0.2846893677.1757413379.62510> startup: initializing, dependent specs: []
     
     10:29:58.472 [debug] <0.1972.0>/ Spec #Reference<0.2846893677.1757413379.62510> status changed to initialized
     
     10:29:58.472 [debug] <0.1972.0>/ Spec #Reference<0.2846893677.1757413379.62510> status changed to linking internally
     
     10:29:58.472 [debug] <0.1972.0>/:depayloader_video/ Got external link request, link id: #Reference<0.2846893677.1757413379.62512>, pad ref: :input
     
     10:29:58.472 [debug] <0.1972.0>/:depayloader_video/ Sending link response, link_id: #Reference<0.2846893677.1757413379.62512>, pad: :input
     
     10:29:58.472 [debug] <0.1972.0>/:depayloader_video/ Got external link request, link id: #Reference<0.2846893677.1757413379.62513>, pad ref: :output
     
     10:29:58.472 [debug] <0.1972.0>/:depayloader_video/ Sending link response, link_id: #Reference<0.2846893677.1757413379.62513>, pad: :output
     
     10:29:58.472 [debug] <0.1972.0>/:file/ Element handle link on pad :output with pad :input of child :demuxer
     
     10:29:58.472 [debug] <0.1972.0>/:demuxer/ Element handle link on pad :input with pad :output of child :file
     
     10:29:58.472 [debug] <0.1972.0>/:demuxer/ Element handle link on pad {Membrane.Pad, :output, 1} with pad :input of child :depayloader_video
     
     10:29:58.472 [debug] <0.1972.0>/:depayloader_video/ Handle link %Membrane.Core.Parent.Link.Endpoint{
       child: :depayloader_video,
       pad_spec: :input,
       pad_ref: :input,
       pid: #PID<0.1983.0>,
       pad_props: %{
         auto_demand_size: nil,
         min_demand_factor: nil,
         options: [],
         target_queue_size: nil,
         throttling_factor: nil,
         toilet_capacity: nil
       },
       pad_info: %{
         accepted_formats_str: ["Membrane.MP4.Payload"],
         availability: :always,
         direction: :input,
         name: :input,
         options: nil
       },
       child_spec_ref: #Reference<0.2846893677.1757413379.62510>
     }
     
     10:29:58.472 [debug] <0.1972.0>/:depayloader_video/:remote_stream_depayloader/ Element handle link on pad :input with pad {Membrane.Pad, :output, 1} of child :demuxer
     
     10:29:58.473 [debug] <0.1972.0>/:depayloader_video/ Handle link %Membrane.Core.Parent.Link.Endpoint{
       child: :depayloader_video,
       pad_spec: :output,
       pad_ref: :output,
       pid: #PID<0.1983.0>,
       pad_props: %{options: []},
       pad_info: %{
         accepted_formats_str: ["%Membrane.H264{alignment: :au, nalu_in_metadata?: true}"],
         availability: :always,
         direction: :output,
         name: :output,
         options: nil
       },
       child_spec_ref: #Reference<0.2846893677.1757413379.62510>
     }
     
     10:29:58.473 [debug] <0.1972.0>/:depayloader_video/:parser/ Element handle link on pad :output with pad :input of child :serializer
     
     10:29:58.473 [debug] <0.1972.0>/:serializer/ Element handle link on pad :input with pad :output of child :parser
     
     10:29:58.473 [debug] <0.1972.0>/:depayloader_video/ Spec #Reference<0.2846893677.1757413382.58738> status changed to ready
     
     10:29:58.473 [debug] <0.1972.0>/:depayloader_video/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:parser, :remote_stream_depayloader]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413382.58739>, #Reference<0.2846893677.1757413382.58740>, #Reference<0.2846893677.1757413382.58741>], status: :linking_externally}
     
     10:29:58.473 [debug] <0.1972.0>/:serializer/ Element handle link on pad :output with pad :input of child :sink
     
     10:29:58.473 [debug] <0.1972.0>/:sink/ Element handle link on pad :input with pad :output of child :serializer
     
     10:29:58.474 [debug] <0.1972.0>/ Spec #Reference<0.2846893677.1757413379.62510> status changed to linked internally
     
     10:29:58.474 [debug] <0.1972.0>/ Spec #Reference<0.2846893677.1757413379.62510> status changed to ready
     
     10:29:58.474 [debug] <0.1972.0>/ Cleaning spec %{awaiting_responses: MapSet.new([]), children_names: MapSet.new([:demuxer, :depayloader_video, :file, :serializer, :sink]), dependent_specs: MapSet.new([]), links_ids: [#Reference<0.2846893677.1757413379.62511>, #Reference<0.2846893677.1757413379.62512>, #Reference<0.2846893677.1757413379.62513>, #Reference<0.2846893677.1757413379.62514>], status: :linking_internally}
     
     10:29:58.474 [debug] <0.1972.0>/:serializer/ Got play request
     
     10:29:58.474 [debug] <0.1972.0>/:demuxer/ Got play request
     
     10:29:58.474 [debug] <0.1972.0>/:depayloader_video/ Parent play
     
     10:29:58.474 [debug] <0.1972.0>/:file/ Got play request
     
     10:29:58.474 [debug] <0.1972.0>/:file/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: nil, type: :bytestream}
     
     
     10:29:58.474 [debug] <0.1972.0>/:sink/ Got play request
     
     10:29:58.474 [debug] <0.1972.0>/:depayloader_video/:parser/ Got play request
     
     10:29:58.474 [debug] <0.1972.0>/:depayloader_video/:remote_stream_depayloader/ Got play request
     
     10:29:58.474 [debug] <0.1972.0>/:depayloader_video/:remote_stream_depayloader/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.474 [debug] <0.1972.0>/:depayloader_video/:parser/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.475 [debug] <0.1972.0>/:demuxer/ received start of stream
     
     10:29:58.477 [debug] <0.1972.0>/:demuxer/ Sending stream format through pad {Membrane.Pad, :output, 1}
     Stream format: %Membrane.MP4.Payload{content: %Membrane.MP4.Payload.AVC1{avcc: <<1, 100, 0, 10, 255, 225, 0, 25, 103, 100, 0, 10, 172, 217, 71, 63, 158, 124, 4, 64, 0, 0, 3, 0, 64, 0, 0, 15, 3, 196, 137, 101, 128, 1, 0, 6, 104, 235, 227, 203, 34, 192>>, inband_parameters?: false}, timescale: 30720, height: 100, width: 100}
     
     
     10:29:58.477 [debug] <0.1972.0>/:depayloader_video/:remote_stream_depayloader/ Sending stream format through pad :output
     Stream format: %Membrane.H264.RemoteStream{alignment: :au, decoder_configuration_record: nil}
     
     
     10:29:58.479 [debug] <0.1972.0>/:serializer/ Sending stream format through pad :output
     Stream format: %Membrane.RemoteStream{content_format: Membrane.Stream, type: :bytestream}
     
     
     10:29:58.479 [debug] <0.1972.0>/:serializer/ Transiting `flow_control: :auto` pads to :pull effective flow control
     
     10:29:58.479 [debug] <0.1972.0>/:sink/ received start of stream
     
     10:29:58.479 [debug] <0.1972.0>/:depayloader_video/:remote_stream_depayloader/ received start of stream
     
     10:29:58.479 [debug] <0.1972.0>/:depayloader_video/:parser/ received start of stream
     
     10:29:58.481 [debug] <0.1972.0>/:depayloader_video/:parser/ Sending stream format through pad :output
     Stream format: %Membrane.H264{width: 100, height: 100, profile: :high, alignment: :au, nalu_in_metadata?: true, framerate: nil}
     
     
     10:29:58.484 [debug] <0.1972.0>/:serializer/ received start of stream
     
     10:29:58.501 [debug] <0.1972.0>/ Removing children: [:demuxer, :depayloader_video, :file, :serializer, :sink]
     
     10:29:58.502 [debug] <0.1972.0>/:demuxer/ Received terminate request
     
     10:29:58.502 [debug] <0.1972.0>/:depayloader_video/ Removing children: [:parser, :remote_stream_depayloader]
     
     10:29:58.502 [debug] <0.1972.0>/:demuxer/ Terminating with reason :normal
     
     10:29:58.502 [debug] <0.1972.0>/:serializer/ Received terminate request
     
     10:29:58.502 [debug] <0.1972.0>/:serializer/ Terminating with reason :normal
     
     10:29:58.502 [debug] <0.1972.0>/:sink/ Received terminate request
     
     10:29:58.502 [debug] <0.1972.0>/:sink/ Terminating with reason :normal
     
     10:29:58.502 [debug] <0.1972.0>/:depayloader_video/:remote_stream_depayloader/ Received terminate request
     
     10:29:58.502 [debug] <0.1972.0>/:depayloader_video/:remote_stream_depayloader/ Terminating with reason :normal
     
     10:29:58.502 [debug] <0.1972.0>/:serializer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.502 [debug] <0.1972.0>/:file/ Received terminate request
     
     10:29:58.502 [debug] <0.1972.0>/:demuxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.502 [debug] <0.1972.0>/:depayloader_video/:parser/ Received terminate request
     
     10:29:58.502 [debug] <0.1972.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.502 [debug] <0.1972.0>/:depayloader_video/:parser/ Terminating with reason :normal
     
     10:29:58.502 [debug] <0.1972.0>/:depayloader_video/:remote_stream_depayloader/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.502 [debug] <0.1972.0>/:depayloader_video/:parser/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.502 [debug] <0.1972.0>/:depayloader_video/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.502 [debug] <0.1972.0>/:file/ Terminating with reason :normal
     
     10:29:58.502 [debug] <0.1972.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.502 [debug] <0.1972.0>/ Pipeline supervisor got exit from pipeline with reason :normal, stopping subprocess supervisor
     
     10:29:58.502 [debug] <0.1972.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:29:58.502 [debug] <0.1972.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
     10:30:00.189 [debug] <0.851.0>/ Pipeline supervisor got exit from a linked process, stopping pipeline
     
     10:30:00.189 [debug] <0.851.0>/ Pipeline supervisor got exit from pipeline with reason :shutdown, stopping subprocess supervisor
     
     10:30:00.189 [debug] <0.851.0>/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:30:00.190 [debug] <0.851.0>/:sink/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:30:00.190 [debug] <0.851.0>/:demuxer/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:30:00.190 [debug] <0.851.0>/:file/ subprocess supervisor got exit request from parent, reason: :shutdown, shutting down children
     
     10:30:00.190 [debug] <0.851.0>/ Pipeline supervisor got exit from subprocess supervisor, exiting
     
....
Finished in 3.0 seconds (3.0s async, 0.00s sync)
52 tests, 1 failure

Randomized with seed 116603
